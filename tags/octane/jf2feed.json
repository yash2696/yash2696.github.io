{"author":{"name":"Yash Agarwal","type":"card","url":"https://yashagarwal.in/"},"children":[{"content":{"html":"\u003cp\u003eRecently, I got a chance to set up ALM Octane on one of my university servers for a course project. From the support page of ALM Octane:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eALM Octane is a web-based application lifecycle management platform that enables teams to collaborate easily, manage the product delivery pipeline, and visualize the impact of changes.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"precursor\"\u003ePrecursor\u003c/h2\u003e\n\u003cp\u003eMy \u003ca href=\"http://cse.nitc.ac.in\"\u003edepartment\u003c/a\u003e insists on using open-source software (a plus point, indeed!). But ALM Octane has Oracle DB/MSSQL as a dependency. My professor was not very enthusiastic about installing a proprietary database on the server. So I came up with a different approach. I set up this database (\u003ca href=\"http://www.oracle.com/technetwork/database/database-technologies/express-edition/overview/index.html\"\u003efree version\u003c/a\u003e of Oracle DB, the Oracle Database 11g Express Edition) in a Docker container. ALM Octane has three components \u0026ndash; Oracle DB, Elastic Search, and the Octane Server itself. The problem was to handle the condition that these three components should be installed on different machines. I decided to use three separate Docker containers for this isolation and then configured them to communicate with each other with docker-compose.\u003c/p\u003e\n\u003ch3 id=\"wait--docker-compose\"\u003eWait \u0026hellip; Docker Compose?\u003c/h3\u003e\n\u003cp\u003e(Skip this if already know about Docker and Compose)\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDocker-compose is a tool to define and run multi-container Docker applications. Compose uses a compose file to configure the services used by the applications. Then all the services and the application can be run by using a single command.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSo before reading this article any further, if you do not know about docker-compose, go and read about it.\u003c/p\u003e\n\u003ch2 id=\"the-problem\"\u003eThe Problem\u003c/h2\u003e\n\u003cp\u003eThree primary services are required for the proper functioning of the Octane Server \u0026ndash; Octane, Oracle DB and Elastic Search. The difficulty was to set up adequate configuration options for these services and the appropriate setup for communication between them. I searched on Docker Hub for any pre-built images. Fortunately, I found some pre-built Docker images for my purpose. So I started writing my config file.\u003c/p\u003e\n\u003ch2 id=\"the-solution\"\u003eThe Solution\u003c/h2\u003e\n\u003cp\u003eHere is my config file for easy reference.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"k\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;2\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eservices\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"k\"\u003eoctane_oracle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ealexeiled/docker-oracle-xe-11g\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eshm_size\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e2g\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003emem_limit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e4g\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"k\"\u003eoctane_es\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eelasticsearch\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"m\"\u003e2.4\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eenvironment\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- ES_HEAP_SIZE=4G\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003emem_limit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e4g\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"k\"\u003eoctane\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ehpsoftware/almoctane\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;8080:8080\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- /opt/octane/conf\u003cspan class=\"p\"\u003e:\u003c/span\u003e/opt/octane/conf\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- /opt/octane/log\u003cspan class=\"p\"\u003e:\u003c/span\u003e/opt/octane/log\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- /opt/octane/repo\u003cspan class=\"p\"\u003e:\u003c/span\u003e/opt/octane/repo\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003elinks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- octane_oracle\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- octane_es\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003emem_limit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e4g\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eenv_file\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- ./octane.env\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eThe configuration options in the code are for a system with RAM of 8GB. The options must be tuned for the best performance before deploying on the production server.\u003c/p\u003e\n\u003cp\u003eIn the code, I have exposed port \u003ccode\u003e8080\u003c/code\u003e of the Octane Docker container to the port 8080 of the host machine. It will make sure that we can access the Octane application on \u003ccode\u003elocalhost:8080\u003c/code\u003e. The \u003ccode\u003eoctane.env\u003c/code\u003e file contains three variables for easy site management.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003eSERVER_DOMAIN=\u003cspan class=\"s2\"\u003e\u0026#34;your domain name\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003eADMIN_PASSWORD=\u003cspan class=\"s2\"\u003e\u0026#34;your password\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e#This disables the minimum memory check to enable to run on smaller machines.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003eDISABLE_VALIDATOR_MEMORY=\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, if you try to run the container with \u003ccode\u003edocker-compose up\u003c/code\u003e, you will encounter various validation errors. It is because, before starting the server, you need to adjust some settings. If you noticed in the config file, there is a section to define volumes. These volumes are persistent and are used to keep changes saved between two docker-compose runs. I have mapped three volumes from the Docker container to the host machine. So you can now edit the files in the \u003ccode\u003e/opt/octane/\u003c/code\u003e folder on the host machine, and changes will reflect in the Docker container. The file where you will have to make changes is \u003ccode\u003e/opt/octane/conf/setup.xml\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eYou can read the documentation of ALM Octane to find out which settings to be changed. Once you do the necessary changes, fire up the command \u003ccode\u003edocker-compose up\u003c/code\u003e and wait for some time. Docker Compose will finish processing, and the server can be accessed on \u003ca href=\"http://localhost:8080\"\u003ehttp://localhost:8080\u003c/a\u003e on the host machine. While deploying it on the production server, make sure that your network administrator has opened the port 8080 for your server. Otherwise, the site will not be accessible. Also, the docker-compose can be run in the background by issuing command \u003ccode\u003edocker-compose up -d\u003c/code\u003e.\u003c/p\u003e\n","text":"Recently, I got a chance to set up ALM Octane on one of my university servers for a course project. From the support page of ALM Octane:\n ALM Octane is a web-based application lifecycle management platform that enables teams to collaborate easily, manage the product delivery pipeline, and visualize the impact of changes.\n Precursor My department insists on using open-source software (a plus point, indeed!). But ALM Octane has Oracle DB/MSSQL as a dependency. My professor was not very enthusiastic about installing a proprietary database on the server. So I came up with a different approach. I set up this database (free version of Oracle DB, the Oracle Database 11g Express Edition) in a Docker container. ALM Octane has three components \u0026ndash; Oracle DB, Elastic Search, and the Octane Server itself. The problem was to handle the condition that these three components should be installed on different machines. I decided to use three separate Docker containers for this isolation and then configured them to communicate with each other with docker-compose.\nWait \u0026hellip; Docker Compose? (Skip this if already know about Docker and Compose)\n Docker-compose is a tool to define and run multi-container Docker applications. Compose uses a compose file to configure the services used by the applications. Then all the services and the application can be run by using a single command.\n So before reading this article any further, if you do not know about docker-compose, go and read about it.\nThe Problem Three primary services are required for the proper functioning of the Octane Server \u0026ndash; Octane, Oracle DB and Elastic Search. The difficulty was to set up adequate configuration options for these services and the appropriate setup for communication between them. I searched on Docker Hub for any pre-built images. Fortunately, I found some pre-built Docker images for my purpose. So I started writing my config file.\nThe Solution Here is my config file for easy reference. version:\u0026#39;2\u0026#39;services:octane_oracle:image:alexeiled/docker-oracle-xe-11gshm_size:2gmem_limit:4goctane_es:image:elasticsearch:2.4environment:- ES_HEAP_SIZE=4Gmem_limit:4goctane:image:hpsoftware/almoctaneports:- \u0026#34;8080:8080\u0026#34;volumes:- /opt/octane/conf:/opt/octane/conf- /opt/octane/log:/opt/octane/log- /opt/octane/repo:/opt/octane/repolinks:- octane_oracle- octane_esmem_limit:4genv_file:- ./octane.env\nThe configuration options in the code are for a system with RAM of 8GB. The options must be tuned for the best performance before deploying on the production server.\nIn the code, I have exposed port 8080 of the Octane Docker container to the port 8080 of the host machine. It will make sure that we can access the Octane application on localhost:8080. The octane.env file contains three variables for easy site management.\nSERVER_DOMAIN=\u0026#34;your domain name\u0026#34;ADMIN_PASSWORD=\u0026#34;your password\u0026#34;#This disables the minimum memory check to enable to run on smaller machines.DISABLE_VALIDATOR_MEMORY=true Now, if you try to run the container with docker-compose up, you will encounter various validation errors. It is because, before starting the server, you need to adjust some settings. If you noticed in the config file, there is a section to define volumes. These volumes are persistent and are used to keep changes saved between two docker-compose runs. I have mapped three volumes from the Docker container to the host machine. So you can now edit the files in the /opt/octane/ folder on the host machine, and changes will reflect in the Docker container. The file where you will have to make changes is /opt/octane/conf/setup.xml.\nYou can read the documentation of ALM Octane to find out which settings to be changed. Once you do the necessary changes, fire up the command docker-compose up and wait for some time. Docker Compose will finish processing, and the server can be accessed on http://localhost:8080 on the host machine. While deploying it on the production server, make sure that your network administrator has opened the port 8080 for your server. Otherwise, the site will not be accessible. Also, the docker-compose can be run in the background by issuing command docker-compose up -d.\n"},"name":"Setting up ALM Octane with Docker Compose","published":"2017-12-26T20:53:35+05:30","summary":"Recently, I got a chance to set up ALM Octane on one of my university servers for a course project. From the support page of ALM Octane:\n ALM Octane is a web-based application lifecycle management platform that enables teams to collaborate easily, manage the product delivery pipeline, and visualize the impact of changes.\n Precursor My department insists on using open-source software (a plus point, indeed!). But ALM Octane has Oracle DB/MSSQL as a dependency.","type":"entry","url":"https://yashagarwal.in/posts/2017/12/setting-up-alm-octane-with-docker-compose/"}],"name":"Octane","type":"feed","url":"https://yashagarwal.in/tags/octane/"}