{"author":{"name":"Yash Agarwal","type":"card","url":"https://yashagarwal.in/"},"children":[{"content":{"html":"\u003cp\u003eI am using \u003cem\u003ei3\u003c/em\u003e window manager for the last seven months, and it has been a pleasant and productive experience so far. There were a few hiccups here and there, but that is expected with such minimalistic setups. One thing that I never noticed was the lack of notifications on critical battery levels. For the last few months, my laptop battery was discharging to 0% all the time. Probably this proved to be too fatal for my battery. According to this \u003ca href=\"https://lifehacker.com/5875162/how-often-should-i-charge-my-gadgets-battery-to-prolong-its-lifespan\"\u003earticle\u003c/a\u003e, lithium-ion batteries are not expected to go from 100% to 0% frequently. I recently bought a new battery, and I did not want to reduce the lifespan of this battery too. So I decided to set up battery notifications for my i3 setup.\u003c/p\u003e\n\u003cp\u003eI \u003ca href=\"https://agorf.gr/2016/06/29/low-battery-notification-in-i3wm/\"\u003efound\u003c/a\u003e a bash script which shows a notification using \u003cem\u003enotify-send\u003c/em\u003e when battery charge level reaches or drops below a configured threshold. However, I had to do some additional steps to make this script work on my system.\u003c/p\u003e\n\u003cp\u003eThe first issue was the \u003cem\u003elockfile\u003c/em\u003e program, which was not installed in my system. I installed it using the following command.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo apt install procmail\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe second issue was more difficult to solve. I planned to set up the script to run every minute using \u003cem\u003ecron\u003c/em\u003e. However, it turns out that cron operates in a very \u003ca href=\"http://askubuntu.com/a/23438/173003\"\u003eminimalistic\u003c/a\u003e environment and notify-send requires the presence of some special variables in the environment. These variables are \u003cstrong\u003eDBUS_SESSION_BUS_ADDRESS\u003c/strong\u003e, \u003cstrong\u003eXAUTHORITY\u003c/strong\u003e and \u003cstrong\u003eDISPLAY\u003c/strong\u003e. To provide the values of these variables to the cron environment, I modified the script and sourced a new file \u003ccode\u003e.bat_envs\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"cp\"\u003e#!/usr/bin/env bash\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\u003c/span\u003e\n. /home/yash/.bat_envs\n\n\u003cspan class=\"nv\"\u003eTHRESHOLD\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"m\"\u003e15\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003elock_path\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;/tmp/battery.lock\u0026#39;\u003c/span\u003e\n\nlockfile -r \u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lock_path\u003c/span\u003e 2\u0026gt;/dev/null \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nb\"\u003eexit\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003eacpi_path\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003efind /sys/class/power_supply/ -name \u003cspan class=\"s1\"\u003e\u0026#39;BAT*\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e head -1\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003echarge_now\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003ecat \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$acpi_path\u003c/span\u003e\u003cspan class=\"s2\"\u003e/charge_now\u0026#34;\u003c/span\u003e\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003echarge_full\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003ecat \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$acpi_path\u003c/span\u003e\u003cspan class=\"s2\"\u003e/charge_full\u0026#34;\u003c/span\u003e\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003echarge_status\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003ecat \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$acpi_path\u003c/span\u003e\u003cspan class=\"s2\"\u003e/status\u0026#34;\u003c/span\u003e\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003echarge_percent\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003e\u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;%.0f\u0026#39;\u003c/span\u003e \u003cspan class=\"k\"\u003e$(\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$charge_now\u003c/span\u003e\u003cspan class=\"s2\"\u003e / \u003c/span\u003e\u003cspan class=\"nv\"\u003e$charge_full\u003c/span\u003e\u003cspan class=\"s2\"\u003e * 100\u0026#34;\u003c/span\u003e\n \u003cspan class=\"p\"\u003e|\u003c/span\u003e bc -l\u003cspan class=\"k\"\u003e))\u003c/span\u003e\n\u003cspan class=\"nv\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Battery running critically low at \u003c/span\u003e\u003cspan class=\"nv\"\u003e$charge_percent\u003c/span\u003e\u003cspan class=\"s2\"\u003e%!\u0026#34;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e[[\u003c/span\u003e \u003cspan class=\"nv\"\u003e$charge_status\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Discharging\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e]]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e[[\u003c/span\u003e \u003cspan class=\"nv\"\u003e$charge_percent\u003c/span\u003e -le \u003cspan class=\"nv\"\u003e$THRE\u003c/span\u003e\nSHOLD \u003cspan class=\"o\"\u003e]]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ethen\u003c/span\u003e\n  /usr/bin/notify-send -u critical \u003cspan class=\"s2\"\u003e\u0026#34;Low battery\u0026#34;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$message\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\n  \u003cspan class=\"nv\"\u003ecurrent_date_time\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;`date +%Y%m%d%H%M%S`\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;[BATTERY LOG] = \u003c/span\u003e\u003cspan class=\"nv\"\u003e$charge_percent\u003c/span\u003e\u003cspan class=\"s2\"\u003e% on \u003c/span\u003e\u003cspan class=\"nv\"\u003e$current_date_time\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efi\u003c/span\u003e\n\nrm -f \u003cspan class=\"nv\"\u003e$lock_path\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRead this blog \u003ca href=\"https://agorf.gr/2016/06/29/low-battery-notification-in-i3wm/\"\u003epost\u003c/a\u003e to understand how this script works.\u003c/p\u003e\n\u003cp\u003eAs the notify-send requires some special X session environmental variables, we will need a method to provide these variables to notify-send in cron environment. The safest way to get X session related environmental variables is to get them from the environment of a process of the user who is logged on to X. The following script will run every time a user logs in and stores these variables in a file \u003ccode\u003e.bat_envs\u003c/code\u003e.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"cp\"\u003e#!/usr/bin/env bash\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\u003c/span\u003e\n\u003cspan class=\"nv\"\u003eenv_path\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$HOME\u003c/span\u003e\u003cspan class=\"s2\"\u003e/.bat_envs\u0026#34;\u003c/span\u003e\n\nrm -f \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eenv_path\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\ntouch \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eenv_path\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003ecopy_envs\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;XAUTHORITY DISPLAY DBUS_SESSION_BUS_ADDRESS\u0026#34;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e env_name in \u003cspan class=\"nv\"\u003e$copy_envs\u003c/span\u003e\n\u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    env \u003cspan class=\"p\"\u003e|\u003c/span\u003e grep \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eenv_name\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u0026gt;\u0026gt; \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eenv_path\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;export \u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eenv_name\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u0026gt;\u0026gt; \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eenv_path\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003edone\u003c/span\u003e\n\nchmod \u003cspan class=\"m\"\u003e600\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eenv_path\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo run this script at startup, I added this file to the i3 config file with the following command.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"nb\"\u003eexec\u003c/span\u003e --no-startup-id \u003cspan class=\"s2\"\u003e\u0026#34;path to your script\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen at the end of cron file, I added a new entry for the battery monitoring script.\u003c/p\u003e\n\u003cp\u003eTo open cron file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecrontab -e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow add the following line to the end of the file and save the file.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e* * * * * bash \u003cspan class=\"s2\"\u003e\u0026#34;path to your script\u0026#34;\u003c/span\u003e \u0026gt;\u0026gt; \u003cspan class=\"s2\"\u003e\u0026#34;path to your log file\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eReplace the \u003cem\u003epath to your script\u003c/em\u003e (with double quotes) with your script path and the \u003cem\u003epath to your log file\u003c/em\u003e with a path where you want to save your log file.\u003c/p\u003e\n\u003cp\u003eNow every minute, this script will be executed, and if your battery percent drops below the threshold value, you will be notified with a notification bubble.\u003c/p\u003e\n\u003cp\u003eI tested this procedure on \u003cem\u003eUbuntu 18.04 with i3\u003c/em\u003e. It should work on Arch Linux and other non-Debian distributions also, but the steps might be slightly different due to various reasons. Please comment if you face any issues with the setup.\u003c/p\u003e\n\u003cp\u003eThank you for reading the article. Cheers 😄\u003c/p\u003e\n","text":"I am using i3 window manager for the last seven months, and it has been a pleasant and productive experience so far. There were a few hiccups here and there, but that is expected with such minimalistic setups. One thing that I never noticed was the lack of notifications on critical battery levels. For the last few months, my laptop battery was discharging to 0% all the time. Probably this proved to be too fatal for my battery. According to this article, lithium-ion batteries are not expected to go from 100% to 0% frequently. I recently bought a new battery, and I did not want to reduce the lifespan of this battery too. So I decided to set up battery notifications for my i3 setup.\nI found a bash script which shows a notification using notify-send when battery charge level reaches or drops below a configured threshold. However, I had to do some additional steps to make this script work on my system.\nThe first issue was the lockfile program, which was not installed in my system. I installed it using the following command.\nsudo apt install procmail The second issue was more difficult to solve. I planned to set up the script to run every minute using cron. However, it turns out that cron operates in a very minimalistic environment and notify-send requires the presence of some special variables in the environment. These variables are DBUS_SESSION_BUS_ADDRESS, XAUTHORITY and DISPLAY. To provide the values of these variables to the cron environment, I modified the script and sourced a new file .bat_envs.\n#!/usr/bin/env bash  . /home/yash/.bat_envs THRESHOLD=15 lock_path=\u0026#39;/tmp/battery.lock\u0026#39; lockfile -r 0 $lock_path 2\u0026gt;/dev/null || exit acpi_path=$(find /sys/class/power_supply/ -name \u0026#39;BAT*\u0026#39; | head -1) charge_now=$(cat \u0026#34;$acpi_path/charge_now\u0026#34;) charge_full=$(cat \u0026#34;$acpi_path/charge_full\u0026#34;) charge_status=$(cat \u0026#34;$acpi_path/status\u0026#34;) charge_percent=$(printf \u0026#39;%.0f\u0026#39; $(echo \u0026#34;$charge_now/ $charge_full* 100\u0026#34; | bc -l)) message=\u0026#34;Battery running critically low at $charge_percent%!\u0026#34; if [[ $charge_status == \u0026#39;Discharging\u0026#39; ]] \u0026amp;\u0026amp; [[ $charge_percent -le $THRE SHOLD ]]; then /usr/bin/notify-send -u critical \u0026#34;Low battery\u0026#34; \u0026#34;$message\u0026#34; current_date_time=\u0026#34;`date +%Y%m%d%H%M%S`\u0026#34;; echo \u0026#34;[BATTERY LOG] = $charge_percent% on $current_date_time\u0026#34; fi rm -f $lock_path Read this blog post to understand how this script works.\nAs the notify-send requires some special X session environmental variables, we will need a method to provide these variables to notify-send in cron environment. The safest way to get X session related environmental variables is to get them from the environment of a process of the user who is logged on to X. The following script will run every time a user logs in and stores these variables in a file .bat_envs.\n#!/usr/bin/env bash  env_path=\u0026#34;$HOME/.bat_envs\u0026#34; rm -f \u0026#34;${env_path}\u0026#34; touch \u0026#34;${env_path}\u0026#34; copy_envs=\u0026#34;XAUTHORITY DISPLAY DBUS_SESSION_BUS_ADDRESS\u0026#34; for env_name in $copy_envs do env | grep \u0026#34;${env_name}\u0026#34; \u0026gt;\u0026gt; \u0026#34;${env_path}\u0026#34;; echo \u0026#34;export ${env_name}\u0026#34; \u0026gt;\u0026gt; \u0026#34;${env_path}\u0026#34;; done chmod 600 \u0026#34;${env_path}\u0026#34; To run this script at startup, I added this file to the i3 config file with the following command.\nexec --no-startup-id \u0026#34;path to your script\u0026#34; Then at the end of cron file, I added a new entry for the battery monitoring script.\nTo open cron file:\ncrontab -e Now add the following line to the end of the file and save the file.\n* * * * * bash \u0026#34;path to your script\u0026#34; \u0026gt;\u0026gt; \u0026#34;path to your log file\u0026#34; Replace the path to your script (with double quotes) with your script path and the path to your log file with a path where you want to save your log file.\nNow every minute, this script will be executed, and if your battery percent drops below the threshold value, you will be notified with a notification bubble.\nI tested this procedure on Ubuntu 18.04 with i3. It should work on Arch Linux and other non-Debian distributions also, but the steps might be slightly different due to various reasons. Please comment if you face any issues with the setup.\nThank you for reading the article. Cheers 😄\n"},"name":"Battery Notifications in i3","published":"2018-06-12T09:45:46+05:30","summary":"I am using i3 window manager for the last seven months, and it has been a pleasant and productive experience so far. There were a few hiccups here and there, but that is expected with such minimalistic setups. One thing that I never noticed was the lack of notifications on critical battery levels. For the last few months, my laptop battery was discharging to 0% all the time. Probably this proved to be too fatal for my battery.","type":"entry","url":"https://yashagarwal.in/posts/2018/06/battery-notifications-in-i3/"},{"content":{"html":"\u003cp\u003eThis post is going to be one of those that I have written for my reference. Whatever I am going to mention in this post is not new. Everything has already been said and written many times on many websites and Linux forums.\u003c/p\u003e\n\u003cp\u003eSo I will start by explaining the problem. When you try to dual boot your machine to run both GNU/Linux and Windows operating systems, you might have noticed that the time is not the same in both the operating systems. It is generally one operating system showing the correct time, and the other one showing the wrong time. It happens because Microsoft Windows thinks that the hardware clock (CMOS clock or BIOS clock) of the machine is using the local time (depends on your current time zone), and hence it doesn\u0026rsquo;t do anything and shows you the same time. But most GNU/Linux operating systems (Ubuntu, Arch Linux, etc.) think that the hardware clock is set to track UTC. Hence the mismatch in the time happens. For example, assume that the current real-time is 10:22:51, and the hardware clock time is set to 10:22:51. Windows will interpret this time as local time and show 10:22:51, but Linux based systems will show 15:52:51 because they will understand this time as UTC. Of course, the above example is true if we assume time zone as India, which is +05:30 from UTC.\u003c/p\u003e\n\u003cp\u003eThis issue can be fixed either from Windows or from GNU/Linux OS. I prefer to adjust the behavior of Windows to use UTC. It is much more convenient to use when traveling between different time zones. Please note that this method might not work or cause instability with older versions of Windows OS. I have tried this fix on Windows 10, and it works without any issues.\u003c/p\u003e\n\u003cp\u003eOpen an Administrator Command Prompt by pressing \u003ccode\u003e⊞ + x\u003c/code\u003e, then type \u003ccode\u003ea\u003c/code\u003e. This method of opening the Administrator Command Prompt does not work on Windows 7.\u003c/p\u003e\n\u003cp\u003eNow execute the following command:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-batch\" data-lang=\"batch\"\u003ereg add \u003cspan class=\"s2\"\u003e\u0026#34;HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation\u0026#34;\u003c/span\u003e /v RealTimeIsUniversal /d 1 /t REG_DWORD /f\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eWindows Time Service, which keeps the clock in Windows OS accurate, will still write the local time to the Real-time clock (RTC) regardless of the registry settings on shutdown. So I prefer to disable the Windows Time Service.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-batch\" data-lang=\"batch\"\u003esc config w32time start= disabled\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow you may need to change the time in your BIOS to UTC time, although that depends on whether your Windows OS was showing the correct time before applying the above modifications. If yes, then changing BIOS time to UTC will make sure that both Windows and GNU/Linux convert hardware clock to local time.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"references\"\u003eReferences\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://help.ubuntu.com/community/UbuntuTime#Multiple_Boot_Systems_Time_Conflicts\"\u003eMultiple Boot Systems Time Conflicts\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://wiki.archlinux.org/index.php/Time#UTC_in_Windows\"\u003eUTC in Windows\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n","text":"This post is going to be one of those that I have written for my reference. Whatever I am going to mention in this post is not new. Everything has already been said and written many times on many websites and Linux forums.\nSo I will start by explaining the problem. When you try to dual boot your machine to run both GNU/Linux and Windows operating systems, you might have noticed that the time is not the same in both the operating systems. It is generally one operating system showing the correct time, and the other one showing the wrong time. It happens because Microsoft Windows thinks that the hardware clock (CMOS clock or BIOS clock) of the machine is using the local time (depends on your current time zone), and hence it doesn\u0026rsquo;t do anything and shows you the same time. But most GNU/Linux operating systems (Ubuntu, Arch Linux, etc.) think that the hardware clock is set to track UTC. Hence the mismatch in the time happens. For example, assume that the current real-time is 10:22:51, and the hardware clock time is set to 10:22:51. Windows will interpret this time as local time and show 10:22:51, but Linux based systems will show 15:52:51 because they will understand this time as UTC. Of course, the above example is true if we assume time zone as India, which is +05:30 from UTC.\nThis issue can be fixed either from Windows or from GNU/Linux OS. I prefer to adjust the behavior of Windows to use UTC. It is much more convenient to use when traveling between different time zones. Please note that this method might not work or cause instability with older versions of Windows OS. I have tried this fix on Windows 10, and it works without any issues.\nOpen an Administrator Command Prompt by pressing ⊞ + x, then type a. This method of opening the Administrator Command Prompt does not work on Windows 7.\nNow execute the following command: reg add \u0026#34;HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation\u0026#34; /v RealTimeIsUniversal /d 1 /t REG_DWORD /f\nWindows Time Service, which keeps the clock in Windows OS accurate, will still write the local time to the Real-time clock (RTC) regardless of the registry settings on shutdown. So I prefer to disable the Windows Time Service. sc config w32time start= disabled\nNow you may need to change the time in your BIOS to UTC time, although that depends on whether your Windows OS was showing the correct time before applying the above modifications. If yes, then changing BIOS time to UTC will make sure that both Windows and GNU/Linux convert hardware clock to local time.\n References  Multiple Boot Systems Time Conflicts UTC in Windows  "},"name":"Syncing Time on Windows \u0026 GNU/Linux Dual Boot Setups","published":"2018-02-01T12:54:34+05:30","summary":"This post is going to be one of those that I have written for my reference. Whatever I am going to mention in this post is not new. Everything has already been said and written many times on many websites and Linux forums.\nSo I will start by explaining the problem. When you try to dual boot your machine to run both GNU/Linux and Windows operating systems, you might have noticed that the time is not the same in both the operating systems.","type":"entry","url":"https://yashagarwal.in/posts/2018/02/syncing-time-on-windows-gnu/linux-dual-boot-setups/"},{"content":{"html":"\u003cp\u003eIn this post, I will continue from my last \u003ca href=\"https://yashhere.github.io/posts/2018/01/arch-linux-installation-guide-part-1/\"\u003epost\u003c/a\u003e and set up my newly installed Arch Linux for daily use. I am going to install some applications that I use on a day to day basis. Some of these applications are required for my current dotfile \u003ca href=\"https://yashhere.github.io/posts/2018/01/my-own-configuration-manager/\"\u003econfiguration\u003c/a\u003e setup to work properly. The choice of applications is highly opinionated and your preferences might be different.\u003c/p\u003e\n\u003cdiv class=\"note\"\u003e\n    \u003cdiv\u003e\u003c/div\u003e\n    \nIf you had gone for installation via SSH option, then I would suggest you to edit your `sshd_config` file and disable `root` login. It can be a security risk otherwise.\n\n\u003c/div\u003e\n\u003ch3 id=\"install-a-terminal-based-browser\"\u003eInstall a terminal based browser\u003c/h3\u003e\n\u003cp\u003eTerminal-based browsers are very handy in cases when you are required to login into a captive portal and you don\u0026rsquo;t have access to a graphical browser. We will install two different browsers, \u003ccode\u003eelinks\u003c/code\u003e and \u003ccode\u003ew3m\u003c/code\u003e.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S elinks w3m\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"install-x-server\"\u003eInstall X server.\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S xorg\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will install minimal X desktop environment with fonts, in case, you want to test your system before installing any desktop environment.\u003c/p\u003e\n\u003ch3 id=\"enable-multilib-repository-for-32-bit-package-support\"\u003eEnable multilib repository for 32-bit package support\u003c/h3\u003e\n\u003cp\u003eTo enable multilib repository, uncomment the \u003ccode\u003e[multilib]\u003c/code\u003e section in \u003ccode\u003e/etc/pacman.conf\u003c/code\u003e.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003emultilib\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"nv\"\u003eInclude\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e /etc/pacman.d/mirrorlist\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow upgrade your system.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -Syyu\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"install-video-and-touchpad-drivers\"\u003eInstall video and touchpad drivers\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S xf86-video-intel xf86-input-synaptics\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"install-pacaur-to-fetch-and-install-packages-from-aur\"\u003eInstall pacaur to fetch and install packages from AUR\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S expac yajl --noconfirm\n\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e /tmp\ngpg --recv-keys --keyserver hkp://pgp.mit.edu:80 1EB2638FF56C0C53\ncurl -o PKGBUILD https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h\u003cspan class=\"o\"\u003e=\u003c/span\u003ecower\nmakepkg -i PKGBUILD --noconfirm\ncurl -o PKGBUILD https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h\u003cspan class=\"o\"\u003e=\u003c/span\u003epacaur\nmakepkg -i PKGBUILD --noconfirm\ncd\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"install-graphical-browsers\"\u003eInstall graphical browsers\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epacaur -S firefox chromium\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"install-code-editors\"\u003eInstall code editors\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epacaur -S sublime-text-dev atom-editor-git visual-studio-code-bin neovim neovim-drop-in leafpad\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"setup-lamp-stack\"\u003eSetup LAMP stack\u003c/h3\u003e\n\u003ch4 id=\"install-apache-server\"\u003eInstall Apache server\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S apache\n\n\u003cspan class=\"c1\"\u003e# Make your user-directory available to apache server\u003c/span\u003e\nmkdir ~/public_html\nchmod o+x ~\nchmod o+x ~/public_html\nchmod -R o+r ~/public_html\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"c1\"\u003e# To enable virtualhosts, uncomment the following line in `/etc/httpd/conf/httpd.conf`\u003c/span\u003e\nInclude conf/extra/httpd-vhosts.conf\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAdd your virtualhost configuration in following file -\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo vim /etc/httpd/conf/extra/httpd-vhosts.conf\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eTo test the virtual hosts on you local machine, add the virtual names to your \u003ccode\u003e/etc/hosts\u003c/code\u003e file.\u003c/p\u003e\n\u003ch4 id=\"install-php\"\u003eInstall PHP:\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S php php-apache\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo use PHP with apache, open \u003ccode\u003e/etc/httpd/conf/httpd.conf\u003c/code\u003e and uncomment following line -\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eLoadModule mpm_prefork_module modules/mod_mpm_prefork.so\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eand comment out the following line -\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"c1\"\u003e# LoadModule mpm_event_module modules/mod_mpm_event.so\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow add these lines to \u003ccode\u003e/etc/httpd/conf/httpd.conf\u003c/code\u003e:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"c1\"\u003e# Add these at the end of `LoadModule` section.\u003c/span\u003e\nLoadModule php7_module modules/libphp7.so\nAddHandler php7-script .php\n\n\u003cspan class=\"c1\"\u003e# Place this at the end of the `Include` section:\u003c/span\u003e\nInclude conf/extra/php7_module.conf\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch4 id=\"install-mysql-server\"\u003eInstall MySQL server\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S mariadb\n\n\u003cspan class=\"c1\"\u003e# Initialize the MariaDB data directory prior to starting the service. To do so, run:\u003c/span\u003e\nsudo mysql_install_db --user\u003cspan class=\"o\"\u003e=\u003c/span\u003emysql --basedir\u003cspan class=\"o\"\u003e=\u003c/span\u003e/usr --datadir\u003cspan class=\"o\"\u003e=\u003c/span\u003e/var/lib/mysql\n\n\u003cspan class=\"c1\"\u003e# Then issue the commands to start the database server\u003c/span\u003e\nsudo systemctl \u003cspan class=\"nb\"\u003eenable\u003c/span\u003e mariadb.service\nsudo systemctl start mariadb.service\n\n\u003cspan class=\"c1\"\u003e# To apply recommended security settings to your database, run\u003c/span\u003e\nsudo mysql_secure_installation\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4 id=\"install-phpmyadmin\"\u003eInstall PHPMyAdmin\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S phpmyadmin php-mcrypt\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEnable \u003ccode\u003emysqli\u003c/code\u003e, \u003ccode\u003emcrypt\u003c/code\u003e, \u003ccode\u003ezip\u003c/code\u003e and \u003ccode\u003ebz2\u003c/code\u003e extensions in \u003ccode\u003e/etc/php/php.ini\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eCreate the apache configuration file \u003ccode\u003e/etc/httpd/conf/extra/phpmyadmin.conf\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-ApacheConf\" data-lang=\"ApacheConf\"\u003e\u003cspan class=\"nb\"\u003eAlias\u003c/span\u003e \u003cspan class=\"sx\"\u003e/phpmyadmin\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/usr/share/webapps/phpMyAdmin\u0026#34;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;Directory\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/usr/share/webapps/phpMyAdmin\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eDirectoryIndex\u003c/span\u003e index.php\n    \u003cspan class=\"nb\"\u003eAllowOverride\u003c/span\u003e \u003cspan class=\"k\"\u003eAll\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eOptions\u003c/span\u003e FollowSymlinks\n    \u003cspan class=\"nb\"\u003eRequire\u003c/span\u003e \u003cspan class=\"k\"\u003eall\u003c/span\u003e granted\n\u003cspan class=\"nt\"\u003e\u0026lt;/Directory\u0026gt;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen include following in \u003ccode\u003e/etc/httpd/conf/httpd.conf\u003c/code\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-ApacheConf\" data-lang=\"ApacheConf\"\u003e\u003cspan class=\"c\"\u003e# phpMyAdmin configuration\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eInclude\u003c/span\u003e conf/extra/phpmyadmin.conf\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow restart \u003ccode\u003ehttpd\u003c/code\u003e service to apply settings.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo systemctl restart httpd\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nOnce all these steps are done, your LAMP stack should be working.\u003c/p\u003e\n\u003ch3 id=\"setup-power-management\"\u003eSetup power management\u003c/h3\u003e\n\u003cp\u003eInstall \u003ccode\u003etlp\u003c/code\u003e and some of its optional dependencies\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S tlp tlp-rdw bash-completion ethtool lsb-release smartmontools\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eThen enable \u003ccode\u003etlp\u003c/code\u003e services\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo systemctl \u003cspan class=\"nb\"\u003eenable\u003c/span\u003e tlp.service\nsudo systemctl \u003cspan class=\"nb\"\u003eenable\u003c/span\u003e tlp-sleep.service\n\n\u003cspan class=\"c1\"\u003e# mask some services for tlp to work properly\u003c/span\u003e\nsudo systemctl mask systemd-rfkill.service\nsudo systemctl mask systemd-rfkill.socket\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"install-i3-and-other-tools\"\u003eInstall i3 and other tools\u003c/h3\u003e\n\u003cp\u003eAll these tools are part of my \u003ccode\u003ei3\u003c/code\u003e config with exception of the theme related packages. So installing them here will help me later while setting up the \u003ccode\u003ei3\u003c/code\u003e window manager.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epacaur -S i3 rofi polybar xautolock powerline-fonts-git i3lock-fancy-git compton scrot feh dunst unclutter xfce4-power-manager numlockx lxappearance adapta-gtk-theme gtk-engine-murrine gnome-themes-standard termite\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"fix-ugly-fonts-1\"\u003eFix Ugly Fonts \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/h3\u003e\n\u003cp\u003eFonts rendering is one area where Linux still lags behind Windows and OSX. It can be a nightmare for users to setup fonts properly in Linux. In Arch Linux, this is even worse. I found some tricks to improve the quality of font rendering on Arch Linux. Though this is far from perfect, it is manageable. Follow these \u003ca href=\"https://www.reddit.com/r/archlinux/comments/5r5ep8/make_your_arch_fonts_beautiful_easily/\"\u003esteps\u003c/a\u003e on Reddit to fix font rendering. I use Noto Sans, Adobe Source Code Pro, and Microsoft fonts. My apologies, but I can\u0026rsquo;t help here. Some websites still use Microsoft fonts.\u003c/p\u003e\n\u003ch3 id=\"setup-python-environment\"\u003eSetup Python Environment\u003c/h3\u003e\n\u003cp\u003eI use Python extensively and virtual environments are a must for my development setup. I use \u003ccode\u003epipenv\u003c/code\u003e to manage my virtual environments. To install \u003ccode\u003epipenv\u003c/code\u003e, you need to install \u003ccode\u003evirtualenv\u003c/code\u003e first. To install it, run the following command.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S python-virtualenv\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow you are ready to install \u003ccode\u003epipenv\u003c/code\u003e. Follow \u003ca href=\"http://pipenv.readthedocs.io/en/latest/install/#fancy-installation-of-pipenv\"\u003ethese\u003c/a\u003e instructions to install the tool.\u003c/p\u003e\n\u003ch3 id=\"install-some-other-common-tools\"\u003eInstall some other common tools\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S vlc openssh npm imagemagick git la-capitaine-icon-theme-git\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDo not forget to \u003ca href=\"https://stackoverflow.com/a/13021677\"\u003esetup\u003c/a\u003e \u003ccode\u003enpm\u003c/code\u003e to install packages globally without requiring \u003ccode\u003esudo\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eThat\u0026rsquo;s all! Your system should be in working condition now. Do check out my \u003ca href=\"https://yashhere.github.io/posts/2018/01/my-own-configuration-manager/\"\u003edotfiles\u003c/a\u003e if you want to set up your system like mine.\u003c/p\u003e\n\u003cp\u003eHope you enjoyed the article. Cheers 😄\u003c/p\u003e\n\u003csection class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\" role=\"doc-endnote\"\u003e\n\u003cp\u003e\u003ca href=\"https://www.reddit.com/r/archlinux/comments/5r5ep8/make_your_arch_fonts_beautiful_easily/\"\u003eMake your Arch fonts beautiful easily!\u003c/a\u003e \u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/section\u003e\n","text":"In this post, I will continue from my last post and set up my newly installed Arch Linux for daily use. I am going to install some applications that I use on a day to day basis. Some of these applications are required for my current dotfile configuration setup to work properly. The choice of applications is highly opinionated and your preferences might be different.\n If you had gone for installation via SSH option, then I would suggest you to edit your `sshd_config` file and disable `root` login. It can be a security risk otherwise.  Install a terminal based browser Terminal-based browsers are very handy in cases when you are required to login into a captive portal and you don\u0026rsquo;t have access to a graphical browser. We will install two different browsers, elinks and w3m. sudo pacman -S elinks w3m\nInstall X server. sudo pacman -S xorg This will install minimal X desktop environment with fonts, in case, you want to test your system before installing any desktop environment.\nEnable multilib repository for 32-bit package support To enable multilib repository, uncomment the [multilib] section in /etc/pacman.conf. [multilib] Include = /etc/pacman.d/mirrorlist\nNow upgrade your system. sudo pacman -Syyu\nInstall video and touchpad drivers sudo pacman -S xf86-video-intel xf86-input-synaptics Install pacaur to fetch and install packages from AUR sudo pacman -S expac yajl --noconfirm cd /tmp gpg --recv-keys --keyserver hkp://pgp.mit.edu:80 1EB2638FF56C0C53 curl -o PKGBUILD https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=cower makepkg -i PKGBUILD --noconfirm curl -o PKGBUILD https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=pacaur makepkg -i PKGBUILD --noconfirm cd Install graphical browsers pacaur -S firefox chromium Install code editors pacaur -S sublime-text-dev atom-editor-git visual-studio-code-bin neovim neovim-drop-in leafpad Setup LAMP stack Install Apache server sudo pacman -S apache # Make your user-directory available to apache server mkdir ~/public_html chmod o+x ~ chmod o+x ~/public_html chmod -R o+r ~/public_html # To enable virtualhosts, uncomment the following line in `/etc/httpd/conf/httpd.conf` Include conf/extra/httpd-vhosts.conf Add your virtualhost configuration in following file - sudo vim /etc/httpd/conf/extra/httpd-vhosts.conf\nTo test the virtual hosts on you local machine, add the virtual names to your /etc/hosts file.\nInstall PHP: sudo pacman -S php php-apache To use PHP with apache, open /etc/httpd/conf/httpd.conf and uncomment following line - LoadModule mpm_prefork_module modules/mod_mpm_prefork.so\nand comment out the following line - # LoadModule mpm_event_module modules/mod_mpm_event.so\nNow add these lines to /etc/httpd/conf/httpd.conf: # Add these at the end of `LoadModule` section. LoadModule php7_module modules/libphp7.so AddHandler php7-script .php # Place this at the end of the `Include` section: Include conf/extra/php7_module.conf\nInstall MySQL server sudo pacman -S mariadb # Initialize the MariaDB data directory prior to starting the service. To do so, run: sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql # Then issue the commands to start the database server sudo systemctl enable mariadb.service sudo systemctl start mariadb.service # To apply recommended security settings to your database, run sudo mysql_secure_installation Install PHPMyAdmin sudo pacman -S phpmyadmin php-mcrypt Enable mysqli, mcrypt, zip and bz2 extensions in /etc/php/php.ini.\nCreate the apache configuration file /etc/httpd/conf/extra/phpmyadmin.conf\nAlias /phpmyadmin \u0026#34;/usr/share/webapps/phpMyAdmin\u0026#34; \u0026lt;Directory \u0026#34;/usr/share/webapps/phpMyAdmin\u0026#34;\u0026gt; DirectoryIndex index.php AllowOverride All Options FollowSymlinks Require all granted \u0026lt;/Directory\u0026gt; Then include following in /etc/httpd/conf/httpd.conf # phpMyAdmin configuration Include conf/extra/phpmyadmin.conf\nNow restart httpd service to apply settings. sudo systemctl restart httpd Once all these steps are done, your LAMP stack should be working.\nSetup power management Install tlp and some of its optional dependencies sudo pacman -S tlp tlp-rdw bash-completion ethtool lsb-release smartmontools\nThen enable tlp services sudo systemctl enable tlp.service sudo systemctl enable tlp-sleep.service # mask some services for tlp to work properly sudo systemctl mask systemd-rfkill.service sudo systemctl mask systemd-rfkill.socket\nInstall i3 and other tools All these tools are part of my i3 config with exception of the theme related packages. So installing them here will help me later while setting up the i3 window manager. pacaur -S i3 rofi polybar xautolock powerline-fonts-git i3lock-fancy-git compton scrot feh dunst unclutter xfce4-power-manager numlockx lxappearance adapta-gtk-theme gtk-engine-murrine gnome-themes-standard termite\nFix Ugly Fonts 1 Fonts rendering is one area where Linux still lags behind Windows and OSX. It can be a nightmare for users to setup fonts properly in Linux. In Arch Linux, this is even worse. I found some tricks to improve the quality of font rendering on Arch Linux. Though this is far from perfect, it is manageable. Follow these steps on Reddit to fix font rendering. I use Noto Sans, Adobe Source Code Pro, and Microsoft fonts. My apologies, but I can\u0026rsquo;t help here. Some websites still use Microsoft fonts.\nSetup Python Environment I use Python extensively and virtual environments are a must for my development setup. I use pipenv to manage my virtual environments. To install pipenv, you need to install virtualenv first. To install it, run the following command. sudo pacman -S python-virtualenv\nNow you are ready to install pipenv. Follow these instructions to install the tool.\nInstall some other common tools sudo pacman -S vlc openssh npm imagemagick git la-capitaine-icon-theme-git Do not forget to setup npm to install packages globally without requiring sudo.\nThat\u0026rsquo;s all! Your system should be in working condition now. Do check out my dotfiles if you want to set up your system like mine.\nHope you enjoyed the article. Cheers 😄\n  Make your Arch fonts beautiful easily! \u0026#x21a9;\u0026#xfe0e;\n   "},"name":"Arch Linux Installation Guide Part 2","published":"2018-01-26T15:45:27+05:30","summary":"In this post, I will continue from my last post and set up my newly installed Arch Linux for daily use. I am going to install some applications that I use on a day to day basis. Some of these applications are required for my current dotfile configuration setup to work properly. The choice of applications is highly opinionated and your preferences might be different.\n If you had gone for installation via SSH option, then I would suggest you to edit your `sshd_config` file and disable `root` login.","type":"entry","url":"https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-2/"},{"content":{"html":"\u003cp\u003eArch Linux is a Linux distribution known for its not-so-beginner-friendly command line installer, no ready-to-use system after installation and requirement of above average knowledge of command line. However, Arch Linux allows me to set up a system in my desired state in shortest possible time with least effort. This is why I keep coming back to Arch Linux even after some of its annoyances.\u003c/p\u003e\n\u003cp\u003eThis guide is written primarily for my reference, as someone who has installed Arch Linux several times, I still can\u0026rsquo;t remember all the installation steps perfectly. Most of the steps have been taken from \u003ca href=\"https://wiki.archlinux.org/index.php/installation_guide\"\u003eArch wiki\u003c/a\u003e and should work on other setups also.\u003c/p\u003e\n\u003cdiv class=\"note\"\u003e\n    \u003cdiv\u003e\u003c/div\u003e\n    \nAll the commands are run in root shell unless otherwise specified.\n\n\u003c/div\u003e\n\u003ch2 id=\"0-check-your-network-connection\"\u003e0. Check your network connection\u003c/h2\u003e\n\u003cp\u003eIf you are behind a captive portal, use \u003ccode\u003elinks\u003c/code\u003e to open browser and login into your network. For WiFi connections, use \u003ccode\u003ewifi-menu\u003c/code\u003e. LAN connections should not require any setup. The boot environment should automatically detect any wired connections. After connecting, test your connection by pinging any website:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eping -c \u003cspan class=\"m\"\u003e5\u003c/span\u003e google.com\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"1-setup-ssh\"\u003e1. Setup SSH\u003c/h2\u003e\n\u003cp\u003eThis step is not mandatory, though I prefer to use this method to install Arch Linux, as it provides me the convenience of copying and pasting the commands directly from Arch wiki.\u003c/p\u003e\n\u003cp\u003eBy default the Arch Linux \u003ccode\u003eroot\u003c/code\u003e account password is empty. We need to set up a password for \u003ccode\u003eroot\u003c/code\u003e account, which is needed for an SSH connection.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epasswd\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow we need to change the setting to permit \u003ccode\u003eroot\u003c/code\u003e login via SSH in \u003ccode\u003e/etc/ssh/sshd_config\u003c/code\u003e. Check that \u003ccode\u003ePermitRootLogin yes\u003c/code\u003e is uncommented in this file. If this line is not present there, add this to the end. Now start the \u003ccode\u003esshd.service\u003c/code\u003e by issuing the command\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo systemctl start sshd.service\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eAlso, note the IP address of the target machine by inspecting the output of the following command.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eip addr\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003ePro tip:\u003c/em\u003e One liner to get only the IP address\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eip -o -4 addr show \u003cspan class=\"p\"\u003e|\u003c/span\u003e awk -F \u003cspan class=\"s1\"\u003e\u0026#39;[ /]+\u0026#39;\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;/global/ {print $4}\u0026#39;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow on your host machine, connect to the target machine via SSH using the following command\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003essh root@ip-address-of-target\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"2-partition-the-disks\"\u003e2. Partition the disks\u003c/h2\u003e\n\u003cp\u003eIf Windows 8 or above is already installed on your machine, then your hard disk is probably using \u003ccode\u003eGPT\u003c/code\u003e partitioning scheme. In that case, use \u003ccode\u003egdisk\u003c/code\u003e to partition your hard disk. \u003cdel\u003eIf you use \u003ccode\u003efdisk\u003c/code\u003e on a GPT partitioned HDD, there is a possibility of data loss.\u003c/del\u003e \u003ccode\u003efdisk\u003c/code\u003e understands \u003ccode\u003eGPT\u003c/code\u003e partitioning scheme also.[1]\u003c/p\u003e\n\u003cp\u003eMy preferred setup is to have one root partition and one home partition and use \u003ccode\u003eEFI\u003c/code\u003e partition created by Windows to install boot-loader. The root and home partition will be formatted using \u003ccode\u003eext4\u003c/code\u003e file-system and the \u003ccode\u003eEFI\u003c/code\u003e partition should be formatted using \u003ccode\u003eFAT32\u003c/code\u003e file-system.\u003c/p\u003e\n\u003cp\u003eFor this guide, I am assuming that the \u003ccode\u003eEFI\u003c/code\u003e partition is \u003ccode\u003esda1\u003c/code\u003e, root partition is \u003ccode\u003esda9\u003c/code\u003e and home partition is \u003ccode\u003esda10\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eNow to format the partitions with \u003ccode\u003eext4\u003c/code\u003e file-system:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003emkfs.ext4 /dev/sda9\nmkfs.ext4 /dev/sda10\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"3-mount-the-partitions\"\u003e3. Mount the partitions\u003c/h2\u003e\n\u003cp\u003eNow mount the root partition (\u003ccode\u003esda9\u003c/code\u003e in this case) to \u003ccode\u003e/mnt\u003c/code\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003emount /dev/sda9 /mnt\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eIf you have created any other partitions in previous steps, mount them at appropriate locations.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003emkdir /mnt/home\nmount /dev/sda10 /mnt/home\n\nmkdir /mnt/boot\nmount /dev/sda1 /mnt/boot\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"4-install-the-base-file-system\"\u003e4. Install the base file-system\u003c/h2\u003e\n\u003cp\u003eTo install the base system and some development tools, issue the following command.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epacstrap /mnt base base-devel\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eThis will take a while to download and install. After it finishes, it will give you a bare-bone Arch Linux system with just the tools required to run a Linux distribution, no other software is installed.\u003c/p\u003e\n\u003ch2 id=\"5-generate-etcfstab\"\u003e5. Generate /etc/fstab\u003c/h2\u003e\n\u003cp\u003eThe \u003ccode\u003e/etc/fstab\u003c/code\u003e file stores the information about file systems of partitions and how to mount the partitions on system boot up. To generate this file, issue the following command:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003egenfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nIf you prefer to use partition labels (sda1, sda9 etc.) instead of UUID, then use \u003ccode\u003e-L\u003c/code\u003e flag in place of \u003ccode\u003e-U\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"6-chroot-into-the-system\"\u003e6. chroot into the system\u003c/h2\u003e\n\u003cp\u003eFrom the \u003ca href=\"https://wiki.archlinux.org/index.php/Change_root\"\u003eArch wiki\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eChroot is an operation that changes the apparent root directory for the current running process and their children. A program that is run in such a modified environment cannot access files and commands outside that environmental directory tree. This modified environment is called a chroot jail.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAt this step, we will go to the root of the newly installed system at \u003ccode\u003e/mnt\u003c/code\u003e and pretend as if we are logged into this system.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003earch-chroot /mnt\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"7-setup-the-time-zone-locale-and-hostname\"\u003e7. Setup the time zone, locale, and hostname\u003c/h2\u003e\n\u003cp\u003eBrowse the \u003ccode\u003e/use/share/zoneinfo\u003c/code\u003e directory to find your location entries. My location is India, so I will use this command.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eTo set the hardware clock:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ehwclock --systohc\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eTo set the locale for your system, open the \u003ccode\u003e/etc/locale.gen\u003c/code\u003e file and uncomment your language. or run the following command for the default \u003ccode\u003een_US.UTF-8 UTF-8\u003c/code\u003e.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"nv\"\u003eLANG\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eC perl -i -pe \u003cspan class=\"s1\"\u003e\u0026#39;s/#(en_US.UTF)/$1/\u0026#39;\u003c/span\u003e /etc/locale.gen\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nNow generate the localization with\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003elocale-gen\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eThen set the \u003ccode\u003eLANG\u003c/code\u003e variable in \u003ccode\u003e/etc/locale.conf\u003c/code\u003e accordingly, or run the following command:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003elocalectl set-locale \u003cspan class=\"nv\"\u003eLANG\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;en_US.UTF-8\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eTo set the hostname for your machine:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ehostnamectl set-hostname your-host-name\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eTo allow other machines to address the host by name, it is necessary to edit the \u003ccode\u003e/etc/hosts\u003c/code\u003e file to look like this:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e127.0.0.1    localhost.localdomain          localhost\n::1          localhost.localdomain          localhost\n127.0.1.1    your-host-name.localdomain     your-host-name\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"8-create-user-account\"\u003e8. Create user account\u003c/h2\u003e\n\u003cp\u003eBefore creating user account, set password for \u003ccode\u003eroot\u003c/code\u003e account\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epasswd\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow create a local account for your user\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003euseradd -m -G wheel -s /bin/bash your-user-name\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eThis will set up your user account, create a home directory for your user, set the default shell to \u003ccode\u003ebash\u003c/code\u003e and add your user to \u003ccode\u003ewheel\u003c/code\u003e group, which is necessary to gain \u003ccode\u003esudo\u003c/code\u003e access in later steps.\u003c/p\u003e\n\u003cp\u003eSet password for your user.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epasswd your-user-name\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"9-enable-sudo-access\"\u003e9. Enable sudo access\u003c/h2\u003e\n\u003cp\u003eThis allows you to use root privileges without using the root account. To enable this, first open \u003ccode\u003e/etc/sudoers\u003c/code\u003e file\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003enano /etc/sudoers\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow uncomment the following line to enable \u003ccode\u003eroot\u003c/code\u003e privilege for all the users inside \u003ccode\u003ewheel\u003c/code\u003e group:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"c1\"\u003e# %wheel ALL=(ALL) ALL\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow you can safely disable root account\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epasswd -l root\n\n\u003cspan class=\"c1\"\u003e# login into your user account\u003c/span\u003e\nsu your-user-name\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eFrom this point onwards, it is necessary to append \u003ccode\u003esudo\u003c/code\u003e to any command that requires \u003ccode\u003eroot\u003c/code\u003e privileges.\u003c/p\u003e\n\u003ch2 id=\"10-install-bootloader\"\u003e10. Install bootloader\u003c/h2\u003e\n\u003cp\u003eMy preferred bootloader of choice is \u003ccode\u003egrub\u003c/code\u003e. To install \u003ccode\u003egrub\u003c/code\u003e, we need to install following packages.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S grub efibootmgr\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow install \u003ccode\u003egrub\u003c/code\u003e with the following command.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo grub-install --target\u003cspan class=\"o\"\u003e=\u003c/span\u003ex86_64-efi --efi-directory\u003cspan class=\"o\"\u003e=\u003c/span\u003e/boot --bootloader-id\u003cspan class=\"o\"\u003e=\u003c/span\u003earch\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eHere \u003ccode\u003e--efi-directory\u003c/code\u003e is the folder where the \u003ccode\u003eEFI\u003c/code\u003e partition is mounted \u003ca href=\"#step3\"\u003estep 3\u003c/a\u003e and \u003ccode\u003e--bootloader-id\u003c/code\u003e is the label that will appear in your UEFI boot menu entry.\u003c/p\u003e\n\u003cp\u003eThis particular step is specific to my machine\u0026rsquo;s hardware, you might not need to run this step. I need to add \u003ccode\u003epci=nommconf\u003c/code\u003e to my kernel boot parameters in \u003ccode\u003e/etc/default/grub\u003c/code\u003e, otherwise \u003ccode\u003etty\u003c/code\u003e prints error messages continuously.\u003c/p\u003e\n\u003cp\u003eNow run to generate grub configuration file.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo grub-mkconfig -o /boot/grub/grub.cfg\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eIf you encounter any errors related to \u003ccode\u003elvm\u003c/code\u003e during installation of grub, then follow these steps.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"c1\"\u003e# come out of chroot\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eexit\u003c/span\u003e\nmkdir /mnt/hostrun\nmount --bind /run /mnt/hostrun\n\n\u003cspan class=\"c1\"\u003e# back to chroot\u003c/span\u003e\narch-chroot /mnt\nmkdir /run/lvm\nmount --bind /hostrun/lvm /run/lvm\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow you can install \u003ccode\u003egrub\u003c/code\u003e without any errors.\u003c/p\u003e\n\u003ch2 id=\"11-configure-the-network\"\u003e11. Configure the network\u003c/h2\u003e\n\u003cp\u003eBy default, your current system cannot connect to the network in the current state. I prefer to use \u003ca href=\"https://wiki.archlinux.org/index.php/NetworkManager\"\u003eNetworkManager\u003c/a\u003e for my network management, even when I am not using GNOME. For wireless networking, install the following additional packages.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S iw wpa_supplicant dialog networkmanager network-manager-applet dhclient\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eNetworkManager\u003c/code\u003e supports basic DHCP configuration. For full support, I have installed \u003ccode\u003edhclient\u003c/code\u003e. \u003ccode\u003eNetworkManager\u003c/code\u003e also supports automatic wired connection detection and comes with curses based tool \u003ccode\u003enmtui\u003c/code\u003e to setup wireless connection.\u003c/p\u003e\n\u003cp\u003eTo enable NetworkManager to start at system startup\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo systemctl \u003cspan class=\"nb\"\u003eenable\u003c/span\u003e NetworkManager.service\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"12-reboot-now\"\u003e12. Reboot now\u003c/h2\u003e\n\u003cp\u003eIf you had performed the \u003ccode\u003elvm\u003c/code\u003e troubleshooting steps during \u003ccode\u003egrub\u003c/code\u003e install, then\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eumount /run/lvm\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow exit from \u003ccode\u003echroot\u003c/code\u003e by typing \u003ccode\u003eexit\u003c/code\u003e in the shell. Unmount all the mounted partitions with:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eumount -R /mnt\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eFinally, reboot your machine by typing \u003ccode\u003ereboot\u003c/code\u003e and remove the installation USB drive. If you are not able to boot into your system at this point, boot from the installation media again and attempt to fix the installation.\u003c/p\u003e\n\u003cp\u003eIf you can see a terminal with a prompt for your username, congratulations! You have completed the first step towards building your own system.\u003c/p\u003e\n\u003cp\u003eI will be writing about making your system usable and stable in the \u003ca href=\"/posts/2018/01/arch-linux-installation-guide-part-2/\"\u003esecond\u003c/a\u003e part of this guide.\u003c/p\u003e\n\u003cp\u003eHope you enjoyed the post. Stay tuned :)\u003c/p\u003e\n","text":"Arch Linux is a Linux distribution known for its not-so-beginner-friendly command line installer, no ready-to-use system after installation and requirement of above average knowledge of command line. However, Arch Linux allows me to set up a system in my desired state in shortest possible time with least effort. This is why I keep coming back to Arch Linux even after some of its annoyances.\nThis guide is written primarily for my reference, as someone who has installed Arch Linux several times, I still can\u0026rsquo;t remember all the installation steps perfectly. Most of the steps have been taken from Arch wiki and should work on other setups also.\n All the commands are run in root shell unless otherwise specified.  0. Check your network connection If you are behind a captive portal, use links to open browser and login into your network. For WiFi connections, use wifi-menu. LAN connections should not require any setup. The boot environment should automatically detect any wired connections. After connecting, test your connection by pinging any website: ping -c 5 google.com\n1. Setup SSH This step is not mandatory, though I prefer to use this method to install Arch Linux, as it provides me the convenience of copying and pasting the commands directly from Arch wiki.\nBy default the Arch Linux root account password is empty. We need to set up a password for root account, which is needed for an SSH connection. passwd\nNow we need to change the setting to permit root login via SSH in /etc/ssh/sshd_config. Check that PermitRootLogin yes is uncommented in this file. If this line is not present there, add this to the end. Now start the sshd.service by issuing the command sudo systemctl start sshd.service\nAlso, note the IP address of the target machine by inspecting the output of the following command. ip addr\nPro tip: One liner to get only the IP address ip -o -4 addr show | awk -F \u0026#39;[ /]+\u0026#39; \u0026#39;/global/ {print $4}\u0026#39;\nNow on your host machine, connect to the target machine via SSH using the following command ssh root@ip-address-of-target\n2. Partition the disks If Windows 8 or above is already installed on your machine, then your hard disk is probably using GPT partitioning scheme. In that case, use gdisk to partition your hard disk. If you use fdisk on a GPT partitioned HDD, there is a possibility of data loss. fdisk understands GPT partitioning scheme also.[1]\nMy preferred setup is to have one root partition and one home partition and use EFI partition created by Windows to install boot-loader. The root and home partition will be formatted using ext4 file-system and the EFI partition should be formatted using FAT32 file-system.\nFor this guide, I am assuming that the EFI partition is sda1, root partition is sda9 and home partition is sda10.\nNow to format the partitions with ext4 file-system: mkfs.ext4 /dev/sda9 mkfs.ext4 /dev/sda10\n3. Mount the partitions Now mount the root partition (sda9 in this case) to /mnt mount /dev/sda9 /mnt\nIf you have created any other partitions in previous steps, mount them at appropriate locations. mkdir /mnt/home mount /dev/sda10 /mnt/home mkdir /mnt/boot mount /dev/sda1 /mnt/boot\n4. Install the base file-system To install the base system and some development tools, issue the following command. pacstrap /mnt base base-devel\nThis will take a while to download and install. After it finishes, it will give you a bare-bone Arch Linux system with just the tools required to run a Linux distribution, no other software is installed.\n5. Generate /etc/fstab The /etc/fstab file stores the information about file systems of partitions and how to mount the partitions on system boot up. To generate this file, issue the following command: genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab If you prefer to use partition labels (sda1, sda9 etc.) instead of UUID, then use -L flag in place of -U.\n6. chroot into the system From the Arch wiki:\n Chroot is an operation that changes the apparent root directory for the current running process and their children. A program that is run in such a modified environment cannot access files and commands outside that environmental directory tree. This modified environment is called a chroot jail.\n At this step, we will go to the root of the newly installed system at /mnt and pretend as if we are logged into this system. arch-chroot /mnt\n7. Setup the time zone, locale, and hostname Browse the /use/share/zoneinfo directory to find your location entries. My location is India, so I will use this command. ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime\nTo set the hardware clock: hwclock --systohc\nTo set the locale for your system, open the /etc/locale.gen file and uncomment your language. or run the following command for the default en_US.UTF-8 UTF-8. LANG=C perl -i -pe \u0026#39;s/#(en_US.UTF)/$1/\u0026#39; /etc/locale.gen Now generate the localization with locale-gen\nThen set the LANG variable in /etc/locale.conf accordingly, or run the following command: localectl set-locale LANG=\u0026#34;en_US.UTF-8\u0026#34;\nTo set the hostname for your machine: hostnamectl set-hostname your-host-name\nTo allow other machines to address the host by name, it is necessary to edit the /etc/hosts file to look like this: 127.0.0.1 localhost.localdomain localhost ::1 localhost.localdomain localhost 127.0.1.1 your-host-name.localdomain your-host-name\n8. Create user account Before creating user account, set password for root account passwd\nNow create a local account for your user useradd -m -G wheel -s /bin/bash your-user-name\nThis will set up your user account, create a home directory for your user, set the default shell to bash and add your user to wheel group, which is necessary to gain sudo access in later steps.\nSet password for your user. passwd your-user-name\n9. Enable sudo access This allows you to use root privileges without using the root account. To enable this, first open /etc/sudoers file nano /etc/sudoers\nNow uncomment the following line to enable root privilege for all the users inside wheel group: # %wheel ALL=(ALL) ALL\nNow you can safely disable root account passwd -l root # login into your user account su your-user-name\nFrom this point onwards, it is necessary to append sudo to any command that requires root privileges.\n10. Install bootloader My preferred bootloader of choice is grub. To install grub, we need to install following packages. sudo pacman -S grub efibootmgr\nNow install grub with the following command. sudo grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=arch\nHere --efi-directory is the folder where the EFI partition is mounted step 3 and --bootloader-id is the label that will appear in your UEFI boot menu entry.\nThis particular step is specific to my machine\u0026rsquo;s hardware, you might not need to run this step. I need to add pci=nommconf to my kernel boot parameters in /etc/default/grub, otherwise tty prints error messages continuously.\nNow run to generate grub configuration file. sudo grub-mkconfig -o /boot/grub/grub.cfg\nIf you encounter any errors related to lvm during installation of grub, then follow these steps. # come out of chroot exit mkdir /mnt/hostrun mount --bind /run /mnt/hostrun # back to chroot arch-chroot /mnt mkdir /run/lvm mount --bind /hostrun/lvm /run/lvm\nNow you can install grub without any errors.\n11. Configure the network By default, your current system cannot connect to the network in the current state. I prefer to use NetworkManager for my network management, even when I am not using GNOME. For wireless networking, install the following additional packages. sudo pacman -S iw wpa_supplicant dialog networkmanager network-manager-applet dhclient\nNetworkManager supports basic DHCP configuration. For full support, I have installed dhclient. NetworkManager also supports automatic wired connection detection and comes with curses based tool nmtui to setup wireless connection.\nTo enable NetworkManager to start at system startup sudo systemctl enable NetworkManager.service\n12. Reboot now If you had performed the lvm troubleshooting steps during grub install, then umount /run/lvm\nNow exit from chroot by typing exit in the shell. Unmount all the mounted partitions with: umount -R /mnt\nFinally, reboot your machine by typing reboot and remove the installation USB drive. If you are not able to boot into your system at this point, boot from the installation media again and attempt to fix the installation.\nIf you can see a terminal with a prompt for your username, congratulations! You have completed the first step towards building your own system.\nI will be writing about making your system usable and stable in the second part of this guide.\nHope you enjoyed the post. Stay tuned :)\n"},"name":"Arch Linux Installation Guide Part 1","published":"2018-01-24T21:49:05+05:30","summary":"Arch Linux is a Linux distribution known for its not-so-beginner-friendly command line installer, no ready-to-use system after installation and requirement of above average knowledge of command line. However, Arch Linux allows me to set up a system in my desired state in shortest possible time with least effort. This is why I keep coming back to Arch Linux even after some of its annoyances.\nThis guide is written primarily for my reference, as someone who has installed Arch Linux several times, I still can\u0026rsquo;t remember all the installation steps perfectly.","type":"entry","url":"https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-1/"},{"content":{"html":"\u003cp\u003eIn this post, I will write about the procedure to correctly setup SSH and GPG agents in the i3 window manager. To follow this post, you need to have ssh-keys and your private GPG keys ready. If you do not already have these keys with you, I will describe the process of creating the keys.\u003c/p\u003e\n\u003ch2 id=\"ssh\"\u003eSSH\u003c/h2\u003e\n\u003cp\u003eGenerating an SSH key pair provides you with a public key and a private key. The private key should never be given to anyone and public key, well the name itself is self-explanatory.\u003c/p\u003e\n\u003cp\u003eTo create a new key pair, open a terminal and paste the text below.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003essh-keygen -t rsa -b \u003cspan class=\"m\"\u003e4096\u003c/span\u003e -C \u003cspan class=\"s2\"\u003e\u0026#34;your_email_address\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eThis command will create a new ssh key pair with the given email address as the label. Press Enter for any question asked. When it asks for the passphrase, type a strong passphrase, otherwise leave it blank to have no password.\u003c/p\u003e\n\u003ch2 id=\"gpg\"\u003eGPG\u003c/h2\u003e\n\u003cp\u003eYou might need to download the GPG command line tools before following the below steps. Follow your distribution\u0026rsquo;s documentation for more help.\u003c/p\u003e\n\u003cp\u003eOnce you have downloaded the tools, open a terminal, and type the following command.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003egpg --gen-key\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nYou will see something like this. Enter 1 to select the default key choice.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003egpg (GnuPG) 1.4.20; Copyright (C) 2015 Free Software Foundation, Inc.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\ngpg: directory `/home/yash/.gnupg\u0026#39; created\ngpg: new configuration file `/home/yash/.gnupg/gpg.conf\u0026#39; created\ngpg: WARNING: options in `/home/yash/.gnupg/gpg.conf\u0026#39; are not yet active during this run\ngpg: keyring `/home/yash/.gnupg/secring.gpg\u0026#39; created\ngpg: keyring `/home/yash/.gnupg/pubring.gpg\u0026#39; created\nPlease select what kind of key you want:\n   (1) RSA and RSA (default)\n   (2) DSA and Elgamal\n   (3) DSA (sign only)\n   (4) RSA (sign only)\nYour selection?\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAt the next prompt, enter the key size. It is recommended to use the maximum key size of 4096 bits.\u003c/p\u003e\n\u003cp\u003eEnter the time duration for which the key should remain valid. Press Enter to specify the default selection, indicating that the key does not expire.\u003c/p\u003e\n\u003cp\u003eAfter verifying the information, enter your user information and a strong passphrase. Afterward, GPG will start generating your key. You will see:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eWe need to generate a lot of random bytes. It is a good idea to perform some other action (type on the keyboard, move the mouse,\nutilize the disks) during the prime generation; this gives the random number generator a better chance to gain enough entropy.\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eYou can now use the key (until it expires) to encrypt your data.\u003c/p\u003e\n\u003ch2 id=\"setting-up-ssh-agent\"\u003eSetting up SSH Agent\u003c/h2\u003e\n\u003ch3 id=\"configuring-i3\"\u003eConfiguring i3\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eUpdate (26/05/2018):\u003c/strong\u003e \u003cem\u003eAs pointed out by \u003ca href=\"https://sakshamsharma.com/\"\u003eSaksham\u003c/a\u003e in the comments below, this step is not required for the setup of SSH in i3. This step can be safely ignored.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eOpen i3 configuration file and add an \u003ccode\u003eexec_always\u003c/code\u003e statement -\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eexec_always ~/.config/i3/scripts/gnome-keyring.sh\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eObviously, you will need to change the path according to your OS. Now make a new file in \u003ccode\u003e~/.config/i3/scripts\u003c/code\u003e with name \u003ccode\u003egnome-keyring.sh\u003c/code\u003e and paste the below text in it.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"nb\"\u003eeval\u003c/span\u003e \u003cspan class=\"k\"\u003e$(\u003c/span\u003e/usr/bin/gnome-keyring-daemon --start --components\u003cspan class=\"o\"\u003e=\u003c/span\u003egpg,pkcs11,secrets,ssh\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eexport\u003c/span\u003e GNOME_KEYRING_CONTROL GNOME_KEYRING_PID GPG_AGENT_INFO SSH_AUTH_SOCK\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n(Assuming that you already have installed gnome-keyring)\u003c/p\u003e\n\u003cp\u003eNow, reload the i3.\u003c/p\u003e\n\u003ch3 id=\"configuring-ssh\"\u003eConfiguring SSH\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eUpdate (26/05/2018):\u003c/strong\u003e \u003cem\u003eThis step is also optional. Thanks to \u003ca href=\"https://sakshamsharma.com/\"\u003eSaksham\u003c/a\u003e for pointing it out.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eOpen \u003ccode\u003e~/.ssh/config\u003c/code\u003e file and add following content to it -\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eHost *\n  AddKeysToAgent yes\n  IdentityFile /home/\u0026lt;your username\u0026gt;/.ssh/id_rsa\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eReplace \u0026lt;your username\u0026gt; accordingly.\u003c/p\u003e\n\u003ch3 id=\"setting-up-bashrc\"\u003eSetting up .bashrc\u003c/h3\u003e\n\u003cp\u003eI am not using a login shell, and I could not find any suitable method to source \u003ccode\u003e~/.profile\u003c/code\u003e or \u003ccode\u003e~/.bash_profile\u003c/code\u003e on login in i3. So I added my configuration to \u003ccode\u003e~/.bashrc\u003c/code\u003e file. I know it is a hack, but it works well for me without much headache.\u003c/p\u003e\n\u003cp\u003eOpen \u003ccode\u003e~/.bashrc\u003c/code\u003e file and add following lines to the end of the file.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e -f ~/.ssh/agent.env \u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ethen\u003c/span\u003e\n    . ~/.ssh/agent.env \u0026gt; /dev/null\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e ! \u003cspan class=\"nb\"\u003ekill\u003c/span\u003e -0 \u003cspan class=\"nv\"\u003e$SSH_AGENT_PID\u003c/span\u003e \u0026gt; /dev/null 2\u0026gt;\u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e1\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ethen\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Stale agent file found. Spawning a new agent. \u0026#34;\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eeval\u003c/span\u003e \u003cspan class=\"sb\"\u003e`\u003c/span\u003essh-agent \u003cspan class=\"p\"\u003e|\u003c/span\u003e tee ~/.ssh/agent.env\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n        ssh-add\n    \u003cspan class=\"k\"\u003efi\u003c/span\u003e\n\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Starting ssh-agent\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eeval\u003c/span\u003e \u003cspan class=\"sb\"\u003e`\u003c/span\u003essh-agent \u003cspan class=\"p\"\u003e|\u003c/span\u003e tee ~/.ssh/agent.env\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n    ssh-add\n\u003cspan class=\"k\"\u003efi\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eIt will automatically start an \u003ccode\u003essh-agent\u003c/code\u003e if it is not already running. Otherwise, it attaches to a previously running agent.\u003c/p\u003e\n\u003cp\u003eNow log out and log in again to see if ssh-agent works. Open a terminal and run the command \u003ccode\u003essh-add -l\u003c/code\u003e. It will show you the hash value of your ssh-key, which is loaded by the ssh-agent.\u003c/p\u003e\n\u003cp\u003eThat is all for today. Thank you for reading!\u003c/p\u003e\n","text":"In this post, I will write about the procedure to correctly setup SSH and GPG agents in the i3 window manager. To follow this post, you need to have ssh-keys and your private GPG keys ready. If you do not already have these keys with you, I will describe the process of creating the keys.\nSSH Generating an SSH key pair provides you with a public key and a private key. The private key should never be given to anyone and public key, well the name itself is self-explanatory.\nTo create a new key pair, open a terminal and paste the text below. ssh-keygen -t rsa -b 4096 -C \u0026#34;your_email_address\u0026#34;\nThis command will create a new ssh key pair with the given email address as the label. Press Enter for any question asked. When it asks for the passphrase, type a strong passphrase, otherwise leave it blank to have no password.\nGPG You might need to download the GPG command line tools before following the below steps. Follow your distribution\u0026rsquo;s documentation for more help.\nOnce you have downloaded the tools, open a terminal, and type the following command. gpg --gen-key You will see something like this. Enter 1 to select the default key choice.\ngpg (GnuPG) 1.4.20; Copyright (C) 2015 Free Software Foundation, Inc. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. gpg: directory `/home/yash/.gnupg\u0026#39; created gpg: new configuration file `/home/yash/.gnupg/gpg.conf\u0026#39; created gpg: WARNING: options in `/home/yash/.gnupg/gpg.conf\u0026#39; are not yet active during this run gpg: keyring `/home/yash/.gnupg/secring.gpg\u0026#39; created gpg: keyring `/home/yash/.gnupg/pubring.gpg\u0026#39; created Please select what kind of key you want: (1) RSA and RSA (default) (2) DSA and Elgamal (3) DSA (sign only) (4) RSA (sign only) Your selection? At the next prompt, enter the key size. It is recommended to use the maximum key size of 4096 bits.\nEnter the time duration for which the key should remain valid. Press Enter to specify the default selection, indicating that the key does not expire.\nAfter verifying the information, enter your user information and a strong passphrase. Afterward, GPG will start generating your key. You will see: We need to generate a lot of random bytes. It is a good idea to perform some other action (type on the keyboard, move the mouse, utilize the disks) during the prime generation; this gives the random number generator a better chance to gain enough entropy.\nYou can now use the key (until it expires) to encrypt your data.\nSetting up SSH Agent Configuring i3 Update (26/05/2018): As pointed out by Saksham in the comments below, this step is not required for the setup of SSH in i3. This step can be safely ignored.\nOpen i3 configuration file and add an exec_always statement - exec_always ~/.config/i3/scripts/gnome-keyring.sh\nObviously, you will need to change the path according to your OS. Now make a new file in ~/.config/i3/scripts with name gnome-keyring.sh and paste the below text in it.\neval $(/usr/bin/gnome-keyring-daemon --start --components=gpg,pkcs11,secrets,ssh) export GNOME_KEYRING_CONTROL GNOME_KEYRING_PID GPG_AGENT_INFO SSH_AUTH_SOCK (Assuming that you already have installed gnome-keyring)\nNow, reload the i3.\nConfiguring SSH Update (26/05/2018): This step is also optional. Thanks to Saksham for pointing it out.\nOpen ~/.ssh/config file and add following content to it -\nHost * AddKeysToAgent yes IdentityFile /home/\u0026lt;your username\u0026gt;/.ssh/id_rsa Replace \u0026lt;your username\u0026gt; accordingly.\nSetting up .bashrc I am not using a login shell, and I could not find any suitable method to source ~/.profile or ~/.bash_profile on login in i3. So I added my configuration to ~/.bashrc file. I know it is a hack, but it works well for me without much headache.\nOpen ~/.bashrc file and add following lines to the end of the file. if [ -f ~/.ssh/agent.env ] ; then . ~/.ssh/agent.env \u0026gt; /dev/null if ! kill -0 $SSH_AGENT_PID \u0026gt; /dev/null 2\u0026gt;\u0026amp;1; then echo \u0026#34;Stale agent file found. Spawning a new agent. \u0026#34; eval `ssh-agent | tee ~/.ssh/agent.env` ssh-add fi else echo \u0026#34;Starting ssh-agent\u0026#34; eval `ssh-agent | tee ~/.ssh/agent.env` ssh-add fi\nIt will automatically start an ssh-agent if it is not already running. Otherwise, it attaches to a previously running agent.\nNow log out and log in again to see if ssh-agent works. Open a terminal and run the command ssh-add -l. It will show you the hash value of your ssh-key, which is loaded by the ssh-agent.\nThat is all for today. Thank you for reading!\n"},"name":"Setting Up SSH Agent in i3","published":"2017-12-27T20:21:09+05:30","summary":"In this post, I will write about the procedure to correctly setup SSH and GPG agents in the i3 window manager. To follow this post, you need to have ssh-keys and your private GPG keys ready. If you do not already have these keys with you, I will describe the process of creating the keys.\nSSH Generating an SSH key pair provides you with a public key and a private key.","type":"entry","url":"https://yashagarwal.in/posts/2017/12/setting-up-ssh-agent-in-i3/"},{"content":{"html":"\u003cp\u003eRecently, I got a chance to set up ALM Octane on one of my university servers for a course project. From the support page of ALM Octane:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eALM Octane is a web-based application lifecycle management platform that enables teams to collaborate easily, manage the product delivery pipeline, and visualize the impact of changes.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"precursor\"\u003ePrecursor\u003c/h2\u003e\n\u003cp\u003eMy \u003ca href=\"http://cse.nitc.ac.in\"\u003edepartment\u003c/a\u003e insists on using open-source software (a plus point, indeed!). But ALM Octane has Oracle DB/MSSQL as a dependency. My professor was not very enthusiastic about installing a proprietary database on the server. So I came up with a different approach. I set up this database (\u003ca href=\"http://www.oracle.com/technetwork/database/database-technologies/express-edition/overview/index.html\"\u003efree version\u003c/a\u003e of Oracle DB, the Oracle Database 11g Express Edition) in a Docker container. ALM Octane has three components \u0026ndash; Oracle DB, Elastic Search, and the Octane Server itself. The problem was to handle the condition that these three components should be installed on different machines. I decided to use three separate Docker containers for this isolation and then configured them to communicate with each other with docker-compose.\u003c/p\u003e\n\u003ch3 id=\"wait--docker-compose\"\u003eWait \u0026hellip; Docker Compose?\u003c/h3\u003e\n\u003cp\u003e(Skip this if already know about Docker and Compose)\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDocker-compose is a tool to define and run multi-container Docker applications. Compose uses a compose file to configure the services used by the applications. Then all the services and the application can be run by using a single command.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSo before reading this article any further, if you do not know about docker-compose, go and read about it.\u003c/p\u003e\n\u003ch2 id=\"the-problem\"\u003eThe Problem\u003c/h2\u003e\n\u003cp\u003eThree primary services are required for the proper functioning of the Octane Server \u0026ndash; Octane, Oracle DB and Elastic Search. The difficulty was to set up adequate configuration options for these services and the appropriate setup for communication between them. I searched on Docker Hub for any pre-built images. Fortunately, I found some pre-built Docker images for my purpose. So I started writing my config file.\u003c/p\u003e\n\u003ch2 id=\"the-solution\"\u003eThe Solution\u003c/h2\u003e\n\u003cp\u003eHere is my config file for easy reference.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"k\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;2\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eservices\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"k\"\u003eoctane_oracle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ealexeiled/docker-oracle-xe-11g\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eshm_size\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e2g\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003emem_limit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e4g\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"k\"\u003eoctane_es\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eelasticsearch\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"m\"\u003e2.4\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eenvironment\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- ES_HEAP_SIZE=4G\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003emem_limit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e4g\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"k\"\u003eoctane\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ehpsoftware/almoctane\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;8080:8080\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- /opt/octane/conf\u003cspan class=\"p\"\u003e:\u003c/span\u003e/opt/octane/conf\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- /opt/octane/log\u003cspan class=\"p\"\u003e:\u003c/span\u003e/opt/octane/log\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- /opt/octane/repo\u003cspan class=\"p\"\u003e:\u003c/span\u003e/opt/octane/repo\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003elinks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- octane_oracle\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- octane_es\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003emem_limit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e4g\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eenv_file\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- ./octane.env\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eThe configuration options in the code are for a system with RAM of 8GB. The options must be tuned for the best performance before deploying on the production server.\u003c/p\u003e\n\u003cp\u003eIn the code, I have exposed port \u003ccode\u003e8080\u003c/code\u003e of the Octane Docker container to the port 8080 of the host machine. It will make sure that we can access the Octane application on \u003ccode\u003elocalhost:8080\u003c/code\u003e. The \u003ccode\u003eoctane.env\u003c/code\u003e file contains three variables for easy site management.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003eSERVER_DOMAIN=\u003cspan class=\"s2\"\u003e\u0026#34;your domain name\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003eADMIN_PASSWORD=\u003cspan class=\"s2\"\u003e\u0026#34;your password\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e#This disables the minimum memory check to enable to run on smaller machines.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003eDISABLE_VALIDATOR_MEMORY=\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, if you try to run the container with \u003ccode\u003edocker-compose up\u003c/code\u003e, you will encounter various validation errors. It is because, before starting the server, you need to adjust some settings. If you noticed in the config file, there is a section to define volumes. These volumes are persistent and are used to keep changes saved between two docker-compose runs. I have mapped three volumes from the Docker container to the host machine. So you can now edit the files in the \u003ccode\u003e/opt/octane/\u003c/code\u003e folder on the host machine, and changes will reflect in the Docker container. The file where you will have to make changes is \u003ccode\u003e/opt/octane/conf/setup.xml\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eYou can read the documentation of ALM Octane to find out which settings to be changed. Once you do the necessary changes, fire up the command \u003ccode\u003edocker-compose up\u003c/code\u003e and wait for some time. Docker Compose will finish processing, and the server can be accessed on \u003ca href=\"http://localhost:8080\"\u003ehttp://localhost:8080\u003c/a\u003e on the host machine. While deploying it on the production server, make sure that your network administrator has opened the port 8080 for your server. Otherwise, the site will not be accessible. Also, the docker-compose can be run in the background by issuing command \u003ccode\u003edocker-compose up -d\u003c/code\u003e.\u003c/p\u003e\n","text":"Recently, I got a chance to set up ALM Octane on one of my university servers for a course project. From the support page of ALM Octane:\n ALM Octane is a web-based application lifecycle management platform that enables teams to collaborate easily, manage the product delivery pipeline, and visualize the impact of changes.\n Precursor My department insists on using open-source software (a plus point, indeed!). But ALM Octane has Oracle DB/MSSQL as a dependency. My professor was not very enthusiastic about installing a proprietary database on the server. So I came up with a different approach. I set up this database (free version of Oracle DB, the Oracle Database 11g Express Edition) in a Docker container. ALM Octane has three components \u0026ndash; Oracle DB, Elastic Search, and the Octane Server itself. The problem was to handle the condition that these three components should be installed on different machines. I decided to use three separate Docker containers for this isolation and then configured them to communicate with each other with docker-compose.\nWait \u0026hellip; Docker Compose? (Skip this if already know about Docker and Compose)\n Docker-compose is a tool to define and run multi-container Docker applications. Compose uses a compose file to configure the services used by the applications. Then all the services and the application can be run by using a single command.\n So before reading this article any further, if you do not know about docker-compose, go and read about it.\nThe Problem Three primary services are required for the proper functioning of the Octane Server \u0026ndash; Octane, Oracle DB and Elastic Search. The difficulty was to set up adequate configuration options for these services and the appropriate setup for communication between them. I searched on Docker Hub for any pre-built images. Fortunately, I found some pre-built Docker images for my purpose. So I started writing my config file.\nThe Solution Here is my config file for easy reference. version:\u0026#39;2\u0026#39;services:octane_oracle:image:alexeiled/docker-oracle-xe-11gshm_size:2gmem_limit:4goctane_es:image:elasticsearch:2.4environment:- ES_HEAP_SIZE=4Gmem_limit:4goctane:image:hpsoftware/almoctaneports:- \u0026#34;8080:8080\u0026#34;volumes:- /opt/octane/conf:/opt/octane/conf- /opt/octane/log:/opt/octane/log- /opt/octane/repo:/opt/octane/repolinks:- octane_oracle- octane_esmem_limit:4genv_file:- ./octane.env\nThe configuration options in the code are for a system with RAM of 8GB. The options must be tuned for the best performance before deploying on the production server.\nIn the code, I have exposed port 8080 of the Octane Docker container to the port 8080 of the host machine. It will make sure that we can access the Octane application on localhost:8080. The octane.env file contains three variables for easy site management.\nSERVER_DOMAIN=\u0026#34;your domain name\u0026#34;ADMIN_PASSWORD=\u0026#34;your password\u0026#34;#This disables the minimum memory check to enable to run on smaller machines.DISABLE_VALIDATOR_MEMORY=true Now, if you try to run the container with docker-compose up, you will encounter various validation errors. It is because, before starting the server, you need to adjust some settings. If you noticed in the config file, there is a section to define volumes. These volumes are persistent and are used to keep changes saved between two docker-compose runs. I have mapped three volumes from the Docker container to the host machine. So you can now edit the files in the /opt/octane/ folder on the host machine, and changes will reflect in the Docker container. The file where you will have to make changes is /opt/octane/conf/setup.xml.\nYou can read the documentation of ALM Octane to find out which settings to be changed. Once you do the necessary changes, fire up the command docker-compose up and wait for some time. Docker Compose will finish processing, and the server can be accessed on http://localhost:8080 on the host machine. While deploying it on the production server, make sure that your network administrator has opened the port 8080 for your server. Otherwise, the site will not be accessible. Also, the docker-compose can be run in the background by issuing command docker-compose up -d.\n"},"name":"Setting up ALM Octane with Docker Compose","published":"2017-12-26T20:53:35+05:30","summary":"Recently, I got a chance to set up ALM Octane on one of my university servers for a course project. From the support page of ALM Octane:\n ALM Octane is a web-based application lifecycle management platform that enables teams to collaborate easily, manage the product delivery pipeline, and visualize the impact of changes.\n Precursor My department insists on using open-source software (a plus point, indeed!). But ALM Octane has Oracle DB/MSSQL as a dependency.","type":"entry","url":"https://yashagarwal.in/posts/2017/12/setting-up-alm-octane-with-docker-compose/"},{"content":{"html":"\n\n\n\n    \n\n    \n    \n\n    \n    \u003clink rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.css\" integrity=\"sha256-sCl5PUOGMLfFYctzDW3MtRib0ctyUvI9Qsmq2wXOeBY=\" crossorigin=\"anonymous\" /\u003e\n    \u003clink rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/default-skin/default-skin.min.css\" integrity=\"sha256-BFeI1V+Vh1Rk37wswuOYn5lsTcaU96hGaI7OUVCLjPc=\" crossorigin=\"anonymous\" /\u003e\n\n    \n    \u003clink rel=\"stylesheet\" href=\"/css/photoswipe.min.d780348a887d97b4d6cc664301a2941706e4a02aeb1533524fcce3b7b9b64b4f.css\"\u003e\n\n    \n\n    \n    \u003cdiv class=\"pswp\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\"\u003e\n        \n        \u003cdiv class=\"pswp__bg\"\u003e\u003c/div\u003e\n        \n        \u003cdiv class=\"pswp__scroll-wrap\"\u003e\n            \n            \u003cdiv class=\"pswp__container\"\u003e\n                \u003cdiv class=\"pswp__item\"\u003e\u003c/div\u003e\n                \u003cdiv class=\"pswp__item\"\u003e\u003c/div\u003e\n                \u003cdiv class=\"pswp__item\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n            \n            \u003cdiv class=\"pswp__ui pswp__ui--hidden\"\u003e\n                \u003cdiv class=\"pswp__top-bar\"\u003e\n                    \n                    \u003cdiv class=\"pswp__counter\"\u003e\u003c/div\u003e\n                    \u003cbutton class=\"pswp__button pswp__button--close\" title=\"Close (Esc)\"\u003e\u003c/button\u003e\n                    \u003cbutton class=\"pswp__button pswp__button--share\" title=\"Share\"\u003e\u003c/button\u003e\n                    \u003cbutton class=\"pswp__button pswp__button--fs\" title=\"Toggle fullscreen\"\u003e\u003c/button\u003e\n                    \u003cbutton class=\"pswp__button pswp__button--zoom\" title=\"Zoom in/out\"\u003e\u003c/button\u003e\n                    \n                    \n                    \u003cdiv class=\"pswp__preloader\"\u003e\n                        \u003cdiv class=\"pswp__preloader__icn\"\u003e\n                            \u003cdiv class=\"pswp__preloader__cut\"\u003e\n                                \u003cdiv class=\"pswp__preloader__donut\"\u003e\u003c/div\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"pswp__share-modal pswp__share-modal--hidden pswp__single-tap\"\u003e\n                    \u003cdiv class=\"pswp__share-tooltip\"\u003e\u003c/div\u003e\n                \u003c/div\u003e\n                \u003cbutton class=\"pswp__button pswp__button--arrow--left\" title=\"Previous (arrow left)\"\u003e\n                \u003c/button\u003e\n                \u003cbutton class=\"pswp__button pswp__button--arrow--right\" title=\"Next (arrow right)\"\u003e\n                \u003c/button\u003e\n                \u003cdiv class=\"pswp__caption\"\u003e\n                    \u003cdiv class=\"pswp__caption__center\"\u003e\u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\n\u003cp\u003eWhen viewing Hindi content in any browser in Arch Linux, the rendering looks weird.\u003c/p\u003e\n\n\n\n    \u003clink rel=\"stylesheet\" href=\"/css/hugo-easy-gallery.css\"\u003e\n    \n\n\n\u003cdiv class=\"box fancy-figure caption-position-bottom caption-effect-appear\"  itemscope itemtype=\"http://schema.org/ImageGallery\"\u003e\n    \u003cfigure  itemprop=\"associatedMedia\" itemscope itemtype=\"http://schema.org/ImageObject\"\u003e\n        \u003cdiv class=\"img\"\u003e\n            \u003cimg itemprop=\"thumbnail\" src=\"/images/2017-10-17/before.png\" alt=\"before applying the fix\"/\u003e\n        \u003c/div\u003e\n        \u003ca href=\"/images/2017-10-17/before.png\" itemprop=\"contentUrl\"\u003e\u003c/a\u003e\n            \u003cfigcaption\u003e\n                    \u003cp\u003ebefore applying the fix\u003c/p\u003e\n            \u003c/figcaption\u003e\n    \u003c/figure\u003e\n\u003c/div\u003e\n\n\u003cp\u003eIt doesn\u0026rsquo;t look good, right! I\u0026rsquo;ll try to fix this issue in this post. You might need to install the appropriate \u003ca href=\"https://wiki.archlinux.org/index.php/fonts\"\u003efont support\u003c/a\u003e in Arch Linux before applying this fix. The suitable package for installing Indic Language support is \u003ca href=\"https://www.archlinux.org/packages/extra/any/ttf-indic-otf/\"\u003ettf-indic-otf\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eNow go to \u003ccode\u003e/usr/share/fonts/TTF\u003c/code\u003e and take the backup of two fonts \u003ccode\u003eFreeSans.ttf\u003c/code\u003e and \u003ccode\u003eFreeSerif.ttf\u003c/code\u003e. Now delete these two fonts from the directory. Restart the browser and see the difference.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"box fancy-figure caption-position-bottom caption-effect-appear\"  itemscope itemtype=\"http://schema.org/ImageGallery\"\u003e\n    \u003cfigure  itemprop=\"associatedMedia\" itemscope itemtype=\"http://schema.org/ImageObject\"\u003e\n        \u003cdiv class=\"img\"\u003e\n            \u003cimg itemprop=\"thumbnail\" src=\"/images/2017-10-17/after.png\" alt=\"after applying the fix\"/\u003e\n        \u003c/div\u003e\n        \u003ca href=\"/images/2017-10-17/after.png\" itemprop=\"contentUrl\"\u003e\u003c/a\u003e\n            \u003cfigcaption\u003e\n                    \u003cp\u003eafter applying the fix\u003c/p\u003e\n            \u003c/figcaption\u003e\n    \u003c/figure\u003e\n\u003c/div\u003e\n\n\u003cp\u003eThis bug is reported in \u003ca href=\"https://bugs.launchpad.net/ubuntu/+source/chromium-browser/+bug/856736\"\u003ethis\u003c/a\u003e bug report in 2011. I don\u0026rsquo;t know why nobody has fixed it yet. Or maybe I was not able to find the proper solution. This workaround is also given in the same bug report.\u003c/p\u003e\n\u003cp\u003eI hope this helps. :)\u003c/p\u003e\n","text":"                         When viewing Hindi content in any browser in Arch Linux, the rendering looks weird.\n   before applying the fix\n   It doesn\u0026rsquo;t look good, right! I\u0026rsquo;ll try to fix this issue in this post. You might need to install the appropriate font support in Arch Linux before applying this fix. The suitable package for installing Indic Language support is ttf-indic-otf.\nNow go to /usr/share/fonts/TTF and take the backup of two fonts FreeSans.ttf and FreeSerif.ttf. Now delete these two fonts from the directory. Restart the browser and see the difference.\n   after applying the fix\n   This bug is reported in this bug report in 2011. I don\u0026rsquo;t know why nobody has fixed it yet. Or maybe I was not able to find the proper solution. This workaround is also given in the same bug report.\nI hope this helps. :)\n"},"name":"Fixing Hindi Fonts in Arch Linux","published":"2017-10-17T21:55:53+05:30","summary":"When viewing Hindi content in any browser in Arch Linux, the rendering looks weird.\n   before applying the fix\n   It doesn\u0026rsquo;t look good, right! I\u0026rsquo;ll try to fix this issue in this post. You might need to install the appropriate font support in Arch Linux before applying this fix.","type":"entry","url":"https://yashagarwal.in/posts/2017/10/fixing-hindi-fonts-in-arch-linux/"},{"content":{"html":"\u003cp\u003eYesterday I installed Arch Linux once again. A clean, bloat-free desktop with Budgie Desktop environment with some must-have open source tools. Everything worked fine except WiFi and some minor bugs in Budgie(I don\u0026rsquo;t know whether it is a bug in Budgie or just a wrong setting). I also faced the problem of mounting Windows NTFS volumes on the user\u0026rsquo;s wish. Arch Linux wiki has details about how to automount partitions on start-up. Still, I had a tough time to find out what exactly needs to be done to simulate the behavior of Ubuntu-like distribution on the mounting of NTFS drives. I got a hint from Arch Linux Wiki about the Polkit configuration setting, which can be used to allow a standard user to mount partitions. Here is a solution that I found after a long search on various Arch Linux Community pages.\u003c/p\u003e\n\u003cp\u003eYou will need to install \u003ccode\u003entfs-3g\u003c/code\u003e, \u003ccode\u003epolkit\u003c/code\u003e and \u003ccode\u003eudisks2\u003c/code\u003e to use this code. Please refer to \u003ca href=\"https://wiki.archlinux.org/index.php/Udisks\"\u003eArch Wiki\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI think when using Gentoo, you will also need to compile the support for the NTFS file system in Kernel also. Please see \u003ca href=\"https://wiki.gentoo.org/wiki/NTFS\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAdd the following code to \u003ccode\u003e/etc/polkit-1/rules.d/10-udisks2.rules\u003c/code\u003e -\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"c1\"\u003e// Allow udisks2 to mount devices without authentication for users in the \u0026#34;wheel\u0026#34; group.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003epolkit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddRule\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esubject\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;org.freedesktop.udisks2.filesystem-mount-system\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;org.freedesktop.udisks2.filesystem-mount\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003esubject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eisInGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;wheel\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003epolkit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eResult\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eYES\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nx\"\u003epolkit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddRule\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esubject\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;org.freedesktop.udisks.filesystem-mount-system-internal\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003esubject\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eisInGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;wheel\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003epolkit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eResult\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eYES\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow you will be able to mount NTFS partition without any problem. :)\u003c/p\u003e\n","text":"Yesterday I installed Arch Linux once again. A clean, bloat-free desktop with Budgie Desktop environment with some must-have open source tools. Everything worked fine except WiFi and some minor bugs in Budgie(I don\u0026rsquo;t know whether it is a bug in Budgie or just a wrong setting). I also faced the problem of mounting Windows NTFS volumes on the user\u0026rsquo;s wish. Arch Linux wiki has details about how to automount partitions on start-up. Still, I had a tough time to find out what exactly needs to be done to simulate the behavior of Ubuntu-like distribution on the mounting of NTFS drives. I got a hint from Arch Linux Wiki about the Polkit configuration setting, which can be used to allow a standard user to mount partitions. Here is a solution that I found after a long search on various Arch Linux Community pages.\nYou will need to install ntfs-3g, polkit and udisks2 to use this code. Please refer to Arch Wiki.\nI think when using Gentoo, you will also need to compile the support for the NTFS file system in Kernel also. Please see here.\nAdd the following code to /etc/polkit-1/rules.d/10-udisks2.rules -\n// Allow udisks2 to mount devices without authentication for users in the \u0026#34;wheel\u0026#34; group. polkit.addRule(function(action, subject) { if ((action.id == \u0026#34;org.freedesktop.udisks2.filesystem-mount-system\u0026#34; || action.id == \u0026#34;org.freedesktop.udisks2.filesystem-mount\u0026#34;) \u0026amp;\u0026amp; subject.isInGroup(\u0026#34;wheel\u0026#34;)) { return polkit.Result.YES; } } ); polkit.addRule(function(action, subject) { if ((action.id == \u0026#34;org.freedesktop.udisks.filesystem-mount-system-internal\u0026#34;) \u0026amp;\u0026amp; subject.isInGroup(\u0026#34;wheel\u0026#34;)) { return polkit.Result.YES; } } );  Now you will be able to mount NTFS partition without any problem. :)\n"},"name":"Mounting NTFS partitions on Arch Linux","published":"2017-03-14T10:30:36Z","summary":"Yesterday I installed Arch Linux once again. A clean, bloat-free desktop with Budgie Desktop environment with some must-have open source tools. Everything worked fine except WiFi and some minor bugs in Budgie(I don\u0026rsquo;t know whether it is a bug in Budgie or just a wrong setting). I also faced the problem of mounting Windows NTFS volumes on the user\u0026rsquo;s wish. Arch Linux wiki has details about how to automount partitions on start-up.","type":"entry","url":"https://yashagarwal.in/posts/2017/03/mounting-ntfs-partitions-on-arch-linux/"},{"content":{"html":"\n\n\n\n    \n\n    \n    \n\n    \n    \u003clink rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.css\" integrity=\"sha256-sCl5PUOGMLfFYctzDW3MtRib0ctyUvI9Qsmq2wXOeBY=\" crossorigin=\"anonymous\" /\u003e\n    \u003clink rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/default-skin/default-skin.min.css\" integrity=\"sha256-BFeI1V+Vh1Rk37wswuOYn5lsTcaU96hGaI7OUVCLjPc=\" crossorigin=\"anonymous\" /\u003e\n\n    \n    \u003clink rel=\"stylesheet\" href=\"/css/photoswipe.min.d780348a887d97b4d6cc664301a2941706e4a02aeb1533524fcce3b7b9b64b4f.css\"\u003e\n\n    \n\n    \n    \u003cdiv class=\"pswp\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\"\u003e\n        \n        \u003cdiv class=\"pswp__bg\"\u003e\u003c/div\u003e\n        \n        \u003cdiv class=\"pswp__scroll-wrap\"\u003e\n            \n            \u003cdiv class=\"pswp__container\"\u003e\n                \u003cdiv class=\"pswp__item\"\u003e\u003c/div\u003e\n                \u003cdiv class=\"pswp__item\"\u003e\u003c/div\u003e\n                \u003cdiv class=\"pswp__item\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n            \n            \u003cdiv class=\"pswp__ui pswp__ui--hidden\"\u003e\n                \u003cdiv class=\"pswp__top-bar\"\u003e\n                    \n                    \u003cdiv class=\"pswp__counter\"\u003e\u003c/div\u003e\n                    \u003cbutton class=\"pswp__button pswp__button--close\" title=\"Close (Esc)\"\u003e\u003c/button\u003e\n                    \u003cbutton class=\"pswp__button pswp__button--share\" title=\"Share\"\u003e\u003c/button\u003e\n                    \u003cbutton class=\"pswp__button pswp__button--fs\" title=\"Toggle fullscreen\"\u003e\u003c/button\u003e\n                    \u003cbutton class=\"pswp__button pswp__button--zoom\" title=\"Zoom in/out\"\u003e\u003c/button\u003e\n                    \n                    \n                    \u003cdiv class=\"pswp__preloader\"\u003e\n                        \u003cdiv class=\"pswp__preloader__icn\"\u003e\n                            \u003cdiv class=\"pswp__preloader__cut\"\u003e\n                                \u003cdiv class=\"pswp__preloader__donut\"\u003e\u003c/div\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"pswp__share-modal pswp__share-modal--hidden pswp__single-tap\"\u003e\n                    \u003cdiv class=\"pswp__share-tooltip\"\u003e\u003c/div\u003e\n                \u003c/div\u003e\n                \u003cbutton class=\"pswp__button pswp__button--arrow--left\" title=\"Previous (arrow left)\"\u003e\n                \u003c/button\u003e\n                \u003cbutton class=\"pswp__button pswp__button--arrow--right\" title=\"Next (arrow right)\"\u003e\n                \u003c/button\u003e\n                \u003cdiv class=\"pswp__caption\"\u003e\n                    \u003cdiv class=\"pswp__caption__center\"\u003e\u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\n\u003cp\u003eAfter my summer vacation started, I bought a new laptop, and the first thing I did was to install Arch Linux on it. After a standard arch installation procedure, I started putting together my desktop environment, beginning with ArchLinux and Openbox, and then piecing all pieces together to build a proper desktop environment. Building a desktop this way follows the Unix Methodology; have software that each does one thing well, and when you put them together, you get something amazing.\u003c/p\u003e\n\u003cp\u003eWhen I first installed Arch, I had several choices. I tried \u003ccode\u003exfce\u003c/code\u003e and \u003ccode\u003egnome\u003c/code\u003e as my desktop environments. While both of them have their pros and cons, I ended up liking none. The sole reason was the dependencies; these two software bring with them. My only intention of installing Arch was to have something, which I control, not like Ubuntu, where you are forced to use the preinstalled software and when you try to uninstall something, you fear of breaking some other program.\u003c/p\u003e\n\u003cp\u003eSo I end up going the route of building something up from scratch using Openbox as a base. At this point, I have a fast, lightweight desktop that is exceptionally stable and is genuinely my desktop as I have built it from the ground up, choosing every application.\u003c/p\u003e\n\n\n\n    \u003clink rel=\"stylesheet\" href=\"/css/hugo-easy-gallery.css\"\u003e\n    \n\n\n\u003cdiv class=\"box fancy-figure caption-position-none\"  itemscope itemtype=\"http://schema.org/ImageGallery\"\u003e\n    \u003cfigure  itemprop=\"associatedMedia\" itemscope itemtype=\"http://schema.org/ImageObject\"\u003e\n        \u003cdiv class=\"img\"\u003e\n            \u003cimg itemprop=\"thumbnail\" src=\"/images/2016-06-09/desktop.jpg\" alt=\"Openbox on ArchLinux\"/\u003e\n        \u003c/div\u003e\n        \u003ca href=\"/images/2016-06-09/desktop.jpg\" itemprop=\"contentUrl\"\u003e\u003c/a\u003e\n            \u003cfigcaption\u003e\n                    \u003cp\u003eOpenbox on ArchLinux\u003c/p\u003e\n            \u003c/figcaption\u003e\n    \u003c/figure\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"window-manager\"\u003eWindow Manager\u003c/h2\u003e\n\u003cp\u003eAfter the installation of Arch, the first thing I did was to install \u003ccode\u003eopenbox\u003c/code\u003e, a tiling window manager. You may also try other window managers like \u003ccode\u003eawesome\u003c/code\u003e, \u003ccode\u003ei3\u003c/code\u003e, and \u003ccode\u003efluxbox\u003c/code\u003e, etc. but I chose Openbox because it is used everywhere. Thus there is a plethora of information out there about customizing it.\u003c/p\u003e\n\u003cp\u003eFor our window manager to show up, it needs to be added either in a login manager or user\u0026rsquo;s \u003ccode\u003e~/.xinitrx\u003c/code\u003e file. There is a default version of this file that contain some code which we may want to retain, so rather than making this file from scratch, copy the default version of the file to the user\u0026rsquo;s home directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecp /etc/X11/xinit/xinitrc ~/.xinitrc\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow add the command \u003ccode\u003eexec Openbox-session\u003c/code\u003e to the end of the file. Remember that the system will ignore the lines following this command. An Openbox session should be able to be started by entering the command \u003ccode\u003estartx\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eAn openbox session can be started automatically upon login using shell\u0026rsquo;s startup script. Add following to the shell\u0026rsquo;s startup script, \u003ccode\u003e~/.bash_profile\u003c/code\u003e for bash and \u003ccode\u003e~/.zprofile\u003c/code\u003e for zsh.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"o\"\u003e[[\u003c/span\u003e -z \u003cspan class=\"nv\"\u003e$DISPLAY\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$XDG_VTNR\u003c/span\u003e -eq \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e]]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003eexec\u003c/span\u003e startx\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"configuring-openbox\"\u003eConfiguring Openbox\u003c/h2\u003e\n\u003cp\u003eSetting up openbox is quite simple. Four files make the basis of openbox configuration. They are \u003ccode\u003erc.xml\u003c/code\u003e, \u003ccode\u003eautostart\u003c/code\u003e,  \u003ccode\u003emenu.xml\u003c/code\u003e and \u003ccode\u003eenvironment\u003c/code\u003e. These files controls everything about the window manager.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003erc.xml\u003c/strong\u003e: Determine the behavior and settings of overall Openbox session\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eautostart\u003c/strong\u003e: Contains a list of applications to be launched with the window manager\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003emenu.xml\u003c/strong\u003e: It makes the right-click context menu of the desktop\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eenvironment\u003c/strong\u003e: Can be used to export and set relevant environmental variables\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eFor the configuration of Openbox, it is necessary to create a local Openbox profile in the user\u0026rsquo;s home directory. A global configuration file can be found in \u003ccode\u003e/etc/xdg/openbox\u003c/code\u003e, which is well documented, and copying the global configuration to the user\u0026rsquo;s directory will give a good starting point to start customizing.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecp -R /etc/xdg/openbox ~/.config/\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThese files can be edited by hand, although some graphical tools are also available, use of these may be desired.\u003c/p\u003e\n\u003ch2 id=\"themes-and-appearance\"\u003eThemes and Appearance\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://www.archlinux.org/packages/community/x86_64/obconf\"\u003eobconf\u003c/a\u003e and \u003ca href=\"https://www.archlinux.org/packages/community/x86_64/lxappearance-obconf/\"\u003elxappearance-obconf\u003c/a\u003e can be used to configure appearance and theme of openbox session. There are quite a few themes available in \u003ca href=\"https://www.archlinux.org/packages/community/any/openbox-themes/\"\u003eopenbox-themes\u003c/a\u003e package. My personal favorite is \u003ca href=\"https://www.archlinux.org/packages/community/any/numix-themes/\"\u003eNumix-themes\u003c/a\u003e and \u003ca href=\"https://aur.archlinux.org/packages/numix-icon-theme-git/\"\u003eNumix-icon-theme-git (AUR)\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eTo see changes after editing a configuration file, the Openbox needs to be refreshed. It can be done with the \u003ccode\u003ereconfigure\u003c/code\u003e command.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eopenbox --reconfigure\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"menus\"\u003eMenus\u003c/h2\u003e\n\u003cp\u003eThe type and behavior of Openbox menus, accessible by right-clicking the background, can be changed using \u003ccode\u003e~/.config/openbox/menu.xml\u003c/code\u003e file. Openbox provides two kinds of menus, \u003ccode\u003eStatic\u003c/code\u003e, and \u003ccode\u003eDynamic\u003c/code\u003e menus (Piped and Generators)\u003c/p\u003e\n\u003cp\u003eStatic menus are hardcoded in XML and is stored in the \u003ccode\u003emenu.xml\u003c/code\u003e file. Whenever you install a new application, you will have to update the XML file to update the menu manually. It is a viable solution if the apps are not installed on a day to day basis.\u003c/p\u003e\n\u003cp\u003ePipe menus are the sections of the Openbox menu that Openbox creates on the fly by running a generic script and using its plain text output as menu entries. This scheme can be used in different ways, like adding a mail checker in the menu or adding a weather forecast menu. You can check \u003ca href=\"http://openbox.org/wiki/Openbox:Pipemenus\"\u003eopenbox pipe menu page\u003c/a\u003e for more information.\u003c/p\u003e\n\u003cp\u003eGenerators are the most convenient type of menus. These can be found in most desktop environments where applications show up in the menu automatically. If applications are being installed regularly, then this will probably be the preferred choice.\u003c/p\u003e\n\u003ch3 id=\"static-menus\"\u003eStatic Menus\u003c/h3\u003e\n\u003cp\u003eThe process of making these menus can be automated by static menu generator like \u003ca href=\"https://www.archlinux.org/packages/?name=obmenu\"\u003eobmenu\u003c/a\u003e. It will generate static menus from installed applications by looking into certain directories. Others available tools are \u003ca href=\"https://www.archlinux.org/packages/?name=menumaker\"\u003emenumaker\u003c/a\u003e, \u003ca href=\"https://www.archlinux.org/packages/?name=obmenu\"\u003eobmenu\u003c/a\u003e and \u003ca href=\"https://www.archlinux.org/packages/?name=archlinux-xdg-menu\"\u003exdg-menu\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"dynamic-menus\"\u003eDynamic Menus\u003c/h3\u003e\n\u003cp\u003eDynamic menus give the same kind of functionality most people are used to. So it was my preferred choice. They can be used to generate full, complex menus on the fly. One of the most popular application for generating dynamic menus is \u003ca href=\"https://aur.archlinux.org/packages/obmenu-generator/\"\u003eobmenu-generator (AUR)\u003c/a\u003e. Though it is not officially connected to Openbox, it is widely used.\u003c/p\u003e\n\u003cp\u003eIn order to have \u003ca href=\"https://aur.archlinux.org/packages/obmenu-generator/\"\u003eobmenu-generator (AUR)\u003c/a\u003e make a menu on demand, the \u003ccode\u003emenu.xml\u003c/code\u003e file should contain the following code as the only entry.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u0026lt;?xml \u003cspan class=\"nv\"\u003eversion\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;1.0\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003eencoding\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;UTF-8\u0026#34;\u003c/span\u003e?\u0026gt;\r\n\u0026lt;openbox_menu\u0026gt;\r\n    \u0026lt;menu \u003cspan class=\"nv\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;root-menu\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003elabel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;OpenBox 3\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003eexecute\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/usr/bin/obmenu-generator\u0026#34;\u003c/span\u003e\u0026gt;\u0026lt;/menu\u0026gt;\r\n\u0026lt;/openbox_menu\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"panels-and-taskbars\"\u003ePanels and Taskbars\u003c/h2\u003e\n\u003cp\u003eYou can get any panel like \u003ca href=\"https://www.archlinux.org/packages/extra/i686/xfce4-panel/\"\u003exfce4-panel\u003c/a\u003e or the simple and customizable \u003ca href=\"https://www.archlinux.org/packages/?name=tint2\"\u003etint2\u003c/a\u003e. I chose tint2 because it very closely follows the openbox spirit of having easy customization with plain configuration files. tint2 package also containg a graphical tool \u003ccode\u003etint2conf\u003c/code\u003e for customizing panel and you can obviously go right to the tint2 configuration file and edit it there. This also means it is easy to pick up your configuration file and move it to another computer, or restore an old configuration since it is as simple as pasting a text document in the right place. tint2 can also have sections for each individual desktop and has various small widget like programs that can be used with it such as a calendar, \u003ca href=\"https://www.archlinux.org/packages/community/x86_64/gsimplecal/\"\u003egsimplecal\u003c/a\u003e, a volume application, \u003ca href=\"https://www.archlinux.org/packages/?name=volumeicon\"\u003evolumeicon\u003c/a\u003e, a battery indicator, \u003ca href=\"https://www.archlinux.org/packages/?name=cbatticon\"\u003ecbatticon\u003c/a\u003e, a network indicator like \u003ca href=\"https://www.archlinux.org/packages/extra/any/wicd/\"\u003ewicd\u003c/a\u003e which also have a system tray icon and a mini task tray. To start tint2 with openbox, you need to add \u003ccode\u003etint2 \u0026amp;\u003c/code\u003e to the \u003ccode\u003eautostart\u003c/code\u003e file.\u003c/p\u003e\n\u003ch2 id=\"file-manager\"\u003eFile Manager\u003c/h2\u003e\n\u003cp\u003eSome file managers deeply integrate into desktop environments, and when installed with Openbox, they end up pulling multiple dependencies, which is certainly not desired. Our aim behind building an Openbox set up was to have minimum dependencies so that we can get a lightweight desktop. However, there are several file managers available that fit into the Openbox very well. In my choice, \u003ca href=\"https://www.archlinux.org/packages/?name=pcmanfm\"\u003epcmanfm\u003c/a\u003e is the best choice here. pcmanfm is a lightweight and fast file manager with network and thrash support. pcmanfm can also manage desktop icons and wallpaper setting, although if you plan to use conky in your system, then you may not want pcmanfm to manage desktop for you. The reason is that pcmanfm treats desktop as a window, so when you switch to desktop, the conky hides behind the desktop window. To get the icons and wallpaper, you can use other standalone tools such as \u003ca href=\"https://www.archlinux.org/packages/community/x86_64/idesk/\"\u003e\u003ccode\u003eidesk\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://www.archlinux.org/packages/extra/x86_64/feh/\"\u003e\u003ccode\u003efeh\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://www.archlinux.org/packages/extra/x86_64/nitrogen/\"\u003e\u003ccode\u003enitrogen\u003c/code\u003e\u003c/a\u003e.\nTo start pcmanfm is the desktop mode, add the following to the autostart file.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epcmanfm --desktop \u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eand to stop it for managing desktop\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epcmanfm --desktop-off \u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eMany functions present in modern file managers require the installation of a few additional programs. \u003ca href=\"https://www.archlinux.org/packages/?name=gvfs\"\u003e\u003ccode\u003egvfs\u003c/code\u003e\u003c/a\u003e gives you the ability to mount volumes and have trash control. It is not mandatory to have, but it allows on-demand mounting completely from within the file manager, as opposed to having to drop down to the command line. A disk-volume manager such as \u003ca href=\"https://www.archlinux.org/packages/?name=udisks2\"\u003e\u003ccode\u003eudisks2\u003c/code\u003e\u003c/a\u003e will also be wanted, and for auto-mounting removable disks, \u003ca href=\"https://www.archlinux.org/packages/community/any/udiskie/\"\u003e\u003ccode\u003eudiskie\u003c/code\u003e\u003c/a\u003e works well with Openbox. udiskie can be added to Openbox\u0026rsquo;s autostart file like any other application.\u003c/p\u003e\n\u003ch2 id=\"composition\"\u003eComposition\u003c/h2\u003e\n\u003cp\u003eOpenbox does not provide native support for composition, although having a compositor may prevent screen flickering and other distortion in applications like \u003ca href=\"https://www.archlinux.org/packages/community/any/oblogout/\"\u003e\u003ccode\u003eoblogout\u003c/code\u003e\u003c/a\u003e. Some options work great with Openbox. The one which I am using and quite happy with is \u003ca href=\"https://wiki.archlinux.org/index.php/Compton\"\u003e\u003ccode\u003ecompton\u003c/code\u003e\u003c/a\u003e. It can be used with or without any initial configuration, although there are a lot of different configuration options if you decide to customize the setup. To start compton in background with shadows, use this in \u003ccode\u003eautostart\u003c/code\u003e file.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecompton -b -c \u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"wrapping-up\"\u003eWrapping up\u003c/h2\u003e\n\u003cp\u003eWhile setting up my desktop using Openbox ended up being much more work than I could have with typical desktop environments. But now I have a much more stable desktop, about which I know, what is running in my system, and that my system is not cluttered with any software that I never use.\u003c/p\u003e\n\u003cp\u003eWhile it might not be for everybody having to configure every little bit of the desktop, I genuinely feel I have ended up with excellent user experience, and a system that is customized precisely to fit my needs.\u003c/p\u003e\n\u003ch2 id=\"references\"\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://wiki.archlinux.org/\"\u003eArch Linux Wiki\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","text":"                         After my summer vacation started, I bought a new laptop, and the first thing I did was to install Arch Linux on it. After a standard arch installation procedure, I started putting together my desktop environment, beginning with ArchLinux and Openbox, and then piecing all pieces together to build a proper desktop environment. Building a desktop this way follows the Unix Methodology; have software that each does one thing well, and when you put them together, you get something amazing.\nWhen I first installed Arch, I had several choices. I tried xfce and gnome as my desktop environments. While both of them have their pros and cons, I ended up liking none. The sole reason was the dependencies; these two software bring with them. My only intention of installing Arch was to have something, which I control, not like Ubuntu, where you are forced to use the preinstalled software and when you try to uninstall something, you fear of breaking some other program.\nSo I end up going the route of building something up from scratch using Openbox as a base. At this point, I have a fast, lightweight desktop that is exceptionally stable and is genuinely my desktop as I have built it from the ground up, choosing every application.\n   Openbox on ArchLinux\n   Window Manager After the installation of Arch, the first thing I did was to install openbox, a tiling window manager. You may also try other window managers like awesome, i3, and fluxbox, etc. but I chose Openbox because it is used everywhere. Thus there is a plethora of information out there about customizing it.\nFor our window manager to show up, it needs to be added either in a login manager or user\u0026rsquo;s ~/.xinitrx file. There is a default version of this file that contain some code which we may want to retain, so rather than making this file from scratch, copy the default version of the file to the user\u0026rsquo;s home directory.\ncp /etc/X11/xinit/xinitrc ~/.xinitrc Now add the command exec Openbox-session to the end of the file. Remember that the system will ignore the lines following this command. An Openbox session should be able to be started by entering the command startx.\nAn openbox session can be started automatically upon login using shell\u0026rsquo;s startup script. Add following to the shell\u0026rsquo;s startup script, ~/.bash_profile for bash and ~/.zprofile for zsh.\n[[ -z $DISPLAY \u0026amp;\u0026amp; $XDG_VTNR -eq 1 ]] \u0026amp;\u0026amp; exec startx Configuring Openbox Setting up openbox is quite simple. Four files make the basis of openbox configuration. They are rc.xml, autostart, menu.xml and environment. These files controls everything about the window manager.\n rc.xml: Determine the behavior and settings of overall Openbox session autostart: Contains a list of applications to be launched with the window manager menu.xml: It makes the right-click context menu of the desktop environment: Can be used to export and set relevant environmental variables  For the configuration of Openbox, it is necessary to create a local Openbox profile in the user\u0026rsquo;s home directory. A global configuration file can be found in /etc/xdg/openbox, which is well documented, and copying the global configuration to the user\u0026rsquo;s directory will give a good starting point to start customizing.\ncp -R /etc/xdg/openbox ~/.config/ These files can be edited by hand, although some graphical tools are also available, use of these may be desired.\nThemes and Appearance obconf and lxappearance-obconf can be used to configure appearance and theme of openbox session. There are quite a few themes available in openbox-themes package. My personal favorite is Numix-themes and Numix-icon-theme-git (AUR).\nTo see changes after editing a configuration file, the Openbox needs to be refreshed. It can be done with the reconfigure command.\nopenbox --reconfigure Menus The type and behavior of Openbox menus, accessible by right-clicking the background, can be changed using ~/.config/openbox/menu.xml file. Openbox provides two kinds of menus, Static, and Dynamic menus (Piped and Generators)\nStatic menus are hardcoded in XML and is stored in the menu.xml file. Whenever you install a new application, you will have to update the XML file to update the menu manually. It is a viable solution if the apps are not installed on a day to day basis.\nPipe menus are the sections of the Openbox menu that Openbox creates on the fly by running a generic script and using its plain text output as menu entries. This scheme can be used in different ways, like adding a mail checker in the menu or adding a weather forecast menu. You can check openbox pipe menu page for more information.\nGenerators are the most convenient type of menus. These can be found in most desktop environments where applications show up in the menu automatically. If applications are being installed regularly, then this will probably be the preferred choice.\nStatic Menus The process of making these menus can be automated by static menu generator like obmenu. It will generate static menus from installed applications by looking into certain directories. Others available tools are menumaker, obmenu and xdg-menu.\nDynamic Menus Dynamic menus give the same kind of functionality most people are used to. So it was my preferred choice. They can be used to generate full, complex menus on the fly. One of the most popular application for generating dynamic menus is obmenu-generator (AUR). Though it is not officially connected to Openbox, it is widely used.\nIn order to have obmenu-generator (AUR) make a menu on demand, the menu.xml file should contain the following code as the only entry.\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt;\r\u0026lt;openbox_menu\u0026gt;\r\u0026lt;menu id=\u0026#34;root-menu\u0026#34; label=\u0026#34;OpenBox 3\u0026#34; execute=\u0026#34;/usr/bin/obmenu-generator\u0026#34;\u0026gt;\u0026lt;/menu\u0026gt;\r\u0026lt;/openbox_menu\u0026gt; Panels and Taskbars You can get any panel like xfce4-panel or the simple and customizable tint2. I chose tint2 because it very closely follows the openbox spirit of having easy customization with plain configuration files. tint2 package also containg a graphical tool tint2conf for customizing panel and you can obviously go right to the tint2 configuration file and edit it there. This also means it is easy to pick up your configuration file and move it to another computer, or restore an old configuration since it is as simple as pasting a text document in the right place. tint2 can also have sections for each individual desktop and has various small widget like programs that can be used with it such as a calendar, gsimplecal, a volume application, volumeicon, a battery indicator, cbatticon, a network indicator like wicd which also have a system tray icon and a mini task tray. To start tint2 with openbox, you need to add tint2 \u0026amp; to the autostart file.\nFile Manager Some file managers deeply integrate into desktop environments, and when installed with Openbox, they end up pulling multiple dependencies, which is certainly not desired. Our aim behind building an Openbox set up was to have minimum dependencies so that we can get a lightweight desktop. However, there are several file managers available that fit into the Openbox very well. In my choice, pcmanfm is the best choice here. pcmanfm is a lightweight and fast file manager with network and thrash support. pcmanfm can also manage desktop icons and wallpaper setting, although if you plan to use conky in your system, then you may not want pcmanfm to manage desktop for you. The reason is that pcmanfm treats desktop as a window, so when you switch to desktop, the conky hides behind the desktop window. To get the icons and wallpaper, you can use other standalone tools such as idesk and feh or nitrogen. To start pcmanfm is the desktop mode, add the following to the autostart file.\npcmanfm --desktop \u0026amp; and to stop it for managing desktop\npcmanfm --desktop-off \u0026amp; Many functions present in modern file managers require the installation of a few additional programs. gvfs gives you the ability to mount volumes and have trash control. It is not mandatory to have, but it allows on-demand mounting completely from within the file manager, as opposed to having to drop down to the command line. A disk-volume manager such as udisks2 will also be wanted, and for auto-mounting removable disks, udiskie works well with Openbox. udiskie can be added to Openbox\u0026rsquo;s autostart file like any other application.\nComposition Openbox does not provide native support for composition, although having a compositor may prevent screen flickering and other distortion in applications like oblogout. Some options work great with Openbox. The one which I am using and quite happy with is compton. It can be used with or without any initial configuration, although there are a lot of different configuration options if you decide to customize the setup. To start compton in background with shadows, use this in autostart file.\ncompton -b -c \u0026amp; Wrapping up While setting up my desktop using Openbox ended up being much more work than I could have with typical desktop environments. But now I have a much more stable desktop, about which I know, what is running in my system, and that my system is not cluttered with any software that I never use.\nWhile it might not be for everybody having to configure every little bit of the desktop, I genuinely feel I have ended up with excellent user experience, and a system that is customized precisely to fit my needs.\nReferences  Arch Linux Wiki  "},"name":"Custom Arch Linux setup with Openbox","published":"2016-06-09T10:20:36Z","summary":"After my summer vacation started, I bought a new laptop, and the first thing I did was to install Arch Linux on it. After a standard arch installation procedure, I started putting together my desktop environment, beginning with ArchLinux and Openbox, and then piecing all pieces together to build a proper desktop environment.","type":"entry","url":"https://yashagarwal.in/posts/2016/06/custom-arch-linux-setup-with-openbox/"}],"name":"Arch Linux","type":"feed","url":"https://yashagarwal.in/tags/arch-linux/"}