{"author":{"name":"Yash Agarwal","type":"card","url":"https://yashagarwal.in/"},"content":{"html":"\u003cp\u003eIn this post, I will continue from my last \u003ca href=\"https://yashhere.github.io/posts/2018/01/arch-linux-installation-guide-part-1/\"\u003epost\u003c/a\u003e and set up my newly installed Arch Linux for daily use. I am going to install some applications that I use on a day to day basis. Some of these applications are required for my current dotfile \u003ca href=\"https://yashhere.github.io/posts/2018/01/my-own-configuration-manager/\"\u003econfiguration\u003c/a\u003e setup to work properly. The choice of applications is highly opinionated and your preferences might be different.\u003c/p\u003e\n\u003cdiv class=\"note\"\u003e\n    \u003cdiv\u003e\u003c/div\u003e\n    \nIf you had gone for installation via SSH option, then I would suggest you to edit your `sshd_config` file and disable `root` login. It can be a security risk otherwise.\n\n\u003c/div\u003e\n\u003ch3 id=\"install-a-terminal-based-browser\"\u003eInstall a terminal based browser\u003c/h3\u003e\n\u003cp\u003eTerminal-based browsers are very handy in cases when you are required to login into a captive portal and you don\u0026rsquo;t have access to a graphical browser. We will install two different browsers, \u003ccode\u003eelinks\u003c/code\u003e and \u003ccode\u003ew3m\u003c/code\u003e.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S elinks w3m\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"install-x-server\"\u003eInstall X server.\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S xorg\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will install minimal X desktop environment with fonts, in case, you want to test your system before installing any desktop environment.\u003c/p\u003e\n\u003ch3 id=\"enable-multilib-repository-for-32-bit-package-support\"\u003eEnable multilib repository for 32-bit package support\u003c/h3\u003e\n\u003cp\u003eTo enable multilib repository, uncomment the \u003ccode\u003e[multilib]\u003c/code\u003e section in \u003ccode\u003e/etc/pacman.conf\u003c/code\u003e.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003emultilib\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"nv\"\u003eInclude\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e /etc/pacman.d/mirrorlist\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow upgrade your system.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -Syyu\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"install-video-and-touchpad-drivers\"\u003eInstall video and touchpad drivers\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S xf86-video-intel xf86-input-synaptics\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"install-pacaur-to-fetch-and-install-packages-from-aur\"\u003eInstall pacaur to fetch and install packages from AUR\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S expac yajl --noconfirm\n\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e /tmp\ngpg --recv-keys --keyserver hkp://pgp.mit.edu:80 1EB2638FF56C0C53\ncurl -o PKGBUILD https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h\u003cspan class=\"o\"\u003e=\u003c/span\u003ecower\nmakepkg -i PKGBUILD --noconfirm\ncurl -o PKGBUILD https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h\u003cspan class=\"o\"\u003e=\u003c/span\u003epacaur\nmakepkg -i PKGBUILD --noconfirm\ncd\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"install-graphical-browsers\"\u003eInstall graphical browsers\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epacaur -S firefox chromium\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"install-code-editors\"\u003eInstall code editors\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epacaur -S sublime-text-dev atom-editor-git visual-studio-code-bin neovim neovim-drop-in leafpad\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"setup-lamp-stack\"\u003eSetup LAMP stack\u003c/h3\u003e\n\u003ch4 id=\"install-apache-server\"\u003eInstall Apache server\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S apache\n\n\u003cspan class=\"c1\"\u003e# Make your user-directory available to apache server\u003c/span\u003e\nmkdir ~/public_html\nchmod o+x ~\nchmod o+x ~/public_html\nchmod -R o+r ~/public_html\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"c1\"\u003e# To enable virtualhosts, uncomment the following line in `/etc/httpd/conf/httpd.conf`\u003c/span\u003e\nInclude conf/extra/httpd-vhosts.conf\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAdd your virtualhost configuration in following file -\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo vim /etc/httpd/conf/extra/httpd-vhosts.conf\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eTo test the virtual hosts on you local machine, add the virtual names to your \u003ccode\u003e/etc/hosts\u003c/code\u003e file.\u003c/p\u003e\n\u003ch4 id=\"install-php\"\u003eInstall PHP:\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S php php-apache\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eTo use PHP with apache, open \u003ccode\u003e/etc/httpd/conf/httpd.conf\u003c/code\u003e and uncomment following line -\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eLoadModule mpm_prefork_module modules/mod_mpm_prefork.so\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eand comment out the following line -\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"c1\"\u003e# LoadModule mpm_event_module modules/mod_mpm_event.so\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow add these lines to \u003ccode\u003e/etc/httpd/conf/httpd.conf\u003c/code\u003e:\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"c1\"\u003e# Add these at the end of `LoadModule` section.\u003c/span\u003e\nLoadModule php7_module modules/libphp7.so\nAddHandler php7-script .php\n\n\u003cspan class=\"c1\"\u003e# Place this at the end of the `Include` section:\u003c/span\u003e\nInclude conf/extra/php7_module.conf\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch4 id=\"install-mysql-server\"\u003eInstall MySQL server\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S mariadb\n\n\u003cspan class=\"c1\"\u003e# Initialize the MariaDB data directory prior to starting the service. To do so, run:\u003c/span\u003e\nsudo mysql_install_db --user\u003cspan class=\"o\"\u003e=\u003c/span\u003emysql --basedir\u003cspan class=\"o\"\u003e=\u003c/span\u003e/usr --datadir\u003cspan class=\"o\"\u003e=\u003c/span\u003e/var/lib/mysql\n\n\u003cspan class=\"c1\"\u003e# Then issue the commands to start the database server\u003c/span\u003e\nsudo systemctl \u003cspan class=\"nb\"\u003eenable\u003c/span\u003e mariadb.service\nsudo systemctl start mariadb.service\n\n\u003cspan class=\"c1\"\u003e# To apply recommended security settings to your database, run\u003c/span\u003e\nsudo mysql_secure_installation\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4 id=\"install-phpmyadmin\"\u003eInstall PHPMyAdmin\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S phpmyadmin php-mcrypt\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eEnable \u003ccode\u003emysqli\u003c/code\u003e, \u003ccode\u003emcrypt\u003c/code\u003e, \u003ccode\u003ezip\u003c/code\u003e and \u003ccode\u003ebz2\u003c/code\u003e extensions in \u003ccode\u003e/etc/php/php.ini\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eCreate the apache configuration file \u003ccode\u003e/etc/httpd/conf/extra/phpmyadmin.conf\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-ApacheConf\" data-lang=\"ApacheConf\"\u003e\u003cspan class=\"nb\"\u003eAlias\u003c/span\u003e \u003cspan class=\"sx\"\u003e/phpmyadmin\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/usr/share/webapps/phpMyAdmin\u0026#34;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;Directory\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/usr/share/webapps/phpMyAdmin\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eDirectoryIndex\u003c/span\u003e index.php\n    \u003cspan class=\"nb\"\u003eAllowOverride\u003c/span\u003e \u003cspan class=\"k\"\u003eAll\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eOptions\u003c/span\u003e FollowSymlinks\n    \u003cspan class=\"nb\"\u003eRequire\u003c/span\u003e \u003cspan class=\"k\"\u003eall\u003c/span\u003e granted\n\u003cspan class=\"nt\"\u003e\u0026lt;/Directory\u0026gt;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen include following in \u003ccode\u003e/etc/httpd/conf/httpd.conf\u003c/code\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-ApacheConf\" data-lang=\"ApacheConf\"\u003e\u003cspan class=\"c\"\u003e# phpMyAdmin configuration\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eInclude\u003c/span\u003e conf/extra/phpmyadmin.conf\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow restart \u003ccode\u003ehttpd\u003c/code\u003e service to apply settings.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo systemctl restart httpd\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nOnce all these steps are done, your LAMP stack should be working.\u003c/p\u003e\n\u003ch3 id=\"setup-power-management\"\u003eSetup power management\u003c/h3\u003e\n\u003cp\u003eInstall \u003ccode\u003etlp\u003c/code\u003e and some of its optional dependencies\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S tlp tlp-rdw bash-completion ethtool lsb-release smartmontools\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eThen enable \u003ccode\u003etlp\u003c/code\u003e services\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo systemctl \u003cspan class=\"nb\"\u003eenable\u003c/span\u003e tlp.service\nsudo systemctl \u003cspan class=\"nb\"\u003eenable\u003c/span\u003e tlp-sleep.service\n\n\u003cspan class=\"c1\"\u003e# mask some services for tlp to work properly\u003c/span\u003e\nsudo systemctl mask systemd-rfkill.service\nsudo systemctl mask systemd-rfkill.socket\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"install-i3-and-other-tools\"\u003eInstall i3 and other tools\u003c/h3\u003e\n\u003cp\u003eAll these tools are part of my \u003ccode\u003ei3\u003c/code\u003e config with exception of the theme related packages. So installing them here will help me later while setting up the \u003ccode\u003ei3\u003c/code\u003e window manager.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epacaur -S i3 rofi polybar xautolock powerline-fonts-git i3lock-fancy-git compton scrot feh dunst unclutter xfce4-power-manager numlockx lxappearance adapta-gtk-theme gtk-engine-murrine gnome-themes-standard termite\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"fix-ugly-fonts-1\"\u003eFix Ugly Fonts \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/h3\u003e\n\u003cp\u003eFonts rendering is one area where Linux still lags behind Windows and OSX. It can be a nightmare for users to setup fonts properly in Linux. In Arch Linux, this is even worse. I found some tricks to improve the quality of font rendering on Arch Linux. Though this is far from perfect, it is manageable. Follow these \u003ca href=\"https://www.reddit.com/r/archlinux/comments/5r5ep8/make_your_arch_fonts_beautiful_easily/\"\u003esteps\u003c/a\u003e on Reddit to fix font rendering. I use Noto Sans, Adobe Source Code Pro, and Microsoft fonts. My apologies, but I can\u0026rsquo;t help here. Some websites still use Microsoft fonts.\u003c/p\u003e\n\u003ch3 id=\"setup-python-environment\"\u003eSetup Python Environment\u003c/h3\u003e\n\u003cp\u003eI use Python extensively and virtual environments are a must for my development setup. I use \u003ccode\u003epipenv\u003c/code\u003e to manage my virtual environments. To install \u003ccode\u003epipenv\u003c/code\u003e, you need to install \u003ccode\u003evirtualenv\u003c/code\u003e first. To install it, run the following command.\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S python-virtualenv\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow you are ready to install \u003ccode\u003epipenv\u003c/code\u003e. Follow \u003ca href=\"http://pipenv.readthedocs.io/en/latest/install/#fancy-installation-of-pipenv\"\u003ethese\u003c/a\u003e instructions to install the tool.\u003c/p\u003e\n\u003ch3 id=\"install-some-other-common-tools\"\u003eInstall some other common tools\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo pacman -S vlc openssh npm imagemagick git la-capitaine-icon-theme-git\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eDo not forget to \u003ca href=\"https://stackoverflow.com/a/13021677\"\u003esetup\u003c/a\u003e \u003ccode\u003enpm\u003c/code\u003e to install packages globally without requiring \u003ccode\u003esudo\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eThat\u0026rsquo;s all! Your system should be in working condition now. Do check out my \u003ca href=\"https://yashhere.github.io/posts/2018/01/my-own-configuration-manager/\"\u003edotfiles\u003c/a\u003e if you want to set up your system like mine.\u003c/p\u003e\n\u003cp\u003eHope you enjoyed the article. Cheers 😄\u003c/p\u003e\n\u003csection class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\" role=\"doc-endnote\"\u003e\n\u003cp\u003e\u003ca href=\"https://www.reddit.com/r/archlinux/comments/5r5ep8/make_your_arch_fonts_beautiful_easily/\"\u003eMake your Arch fonts beautiful easily!\u003c/a\u003e \u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/section\u003e\n","text":"In this post, I will continue from my last post and set up my newly installed Arch Linux for daily use. I am going to install some applications that I use on a day to day basis. Some of these applications are required for my current dotfile configuration setup to work properly. The choice of applications is highly opinionated and your preferences might be different.\n If you had gone for installation via SSH option, then I would suggest you to edit your `sshd_config` file and disable `root` login. It can be a security risk otherwise.  Install a terminal based browser Terminal-based browsers are very handy in cases when you are required to login into a captive portal and you don\u0026rsquo;t have access to a graphical browser. We will install two different browsers, elinks and w3m. sudo pacman -S elinks w3m\nInstall X server. sudo pacman -S xorg This will install minimal X desktop environment with fonts, in case, you want to test your system before installing any desktop environment.\nEnable multilib repository for 32-bit package support To enable multilib repository, uncomment the [multilib] section in /etc/pacman.conf. [multilib] Include = /etc/pacman.d/mirrorlist\nNow upgrade your system. sudo pacman -Syyu\nInstall video and touchpad drivers sudo pacman -S xf86-video-intel xf86-input-synaptics Install pacaur to fetch and install packages from AUR sudo pacman -S expac yajl --noconfirm cd /tmp gpg --recv-keys --keyserver hkp://pgp.mit.edu:80 1EB2638FF56C0C53 curl -o PKGBUILD https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=cower makepkg -i PKGBUILD --noconfirm curl -o PKGBUILD https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=pacaur makepkg -i PKGBUILD --noconfirm cd Install graphical browsers pacaur -S firefox chromium Install code editors pacaur -S sublime-text-dev atom-editor-git visual-studio-code-bin neovim neovim-drop-in leafpad Setup LAMP stack Install Apache server sudo pacman -S apache # Make your user-directory available to apache server mkdir ~/public_html chmod o+x ~ chmod o+x ~/public_html chmod -R o+r ~/public_html # To enable virtualhosts, uncomment the following line in `/etc/httpd/conf/httpd.conf` Include conf/extra/httpd-vhosts.conf Add your virtualhost configuration in following file - sudo vim /etc/httpd/conf/extra/httpd-vhosts.conf\nTo test the virtual hosts on you local machine, add the virtual names to your /etc/hosts file.\nInstall PHP: sudo pacman -S php php-apache To use PHP with apache, open /etc/httpd/conf/httpd.conf and uncomment following line - LoadModule mpm_prefork_module modules/mod_mpm_prefork.so\nand comment out the following line - # LoadModule mpm_event_module modules/mod_mpm_event.so\nNow add these lines to /etc/httpd/conf/httpd.conf: # Add these at the end of `LoadModule` section. LoadModule php7_module modules/libphp7.so AddHandler php7-script .php # Place this at the end of the `Include` section: Include conf/extra/php7_module.conf\nInstall MySQL server sudo pacman -S mariadb # Initialize the MariaDB data directory prior to starting the service. To do so, run: sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql # Then issue the commands to start the database server sudo systemctl enable mariadb.service sudo systemctl start mariadb.service # To apply recommended security settings to your database, run sudo mysql_secure_installation Install PHPMyAdmin sudo pacman -S phpmyadmin php-mcrypt Enable mysqli, mcrypt, zip and bz2 extensions in /etc/php/php.ini.\nCreate the apache configuration file /etc/httpd/conf/extra/phpmyadmin.conf\nAlias /phpmyadmin \u0026#34;/usr/share/webapps/phpMyAdmin\u0026#34; \u0026lt;Directory \u0026#34;/usr/share/webapps/phpMyAdmin\u0026#34;\u0026gt; DirectoryIndex index.php AllowOverride All Options FollowSymlinks Require all granted \u0026lt;/Directory\u0026gt; Then include following in /etc/httpd/conf/httpd.conf # phpMyAdmin configuration Include conf/extra/phpmyadmin.conf\nNow restart httpd service to apply settings. sudo systemctl restart httpd Once all these steps are done, your LAMP stack should be working.\nSetup power management Install tlp and some of its optional dependencies sudo pacman -S tlp tlp-rdw bash-completion ethtool lsb-release smartmontools\nThen enable tlp services sudo systemctl enable tlp.service sudo systemctl enable tlp-sleep.service # mask some services for tlp to work properly sudo systemctl mask systemd-rfkill.service sudo systemctl mask systemd-rfkill.socket\nInstall i3 and other tools All these tools are part of my i3 config with exception of the theme related packages. So installing them here will help me later while setting up the i3 window manager. pacaur -S i3 rofi polybar xautolock powerline-fonts-git i3lock-fancy-git compton scrot feh dunst unclutter xfce4-power-manager numlockx lxappearance adapta-gtk-theme gtk-engine-murrine gnome-themes-standard termite\nFix Ugly Fonts 1 Fonts rendering is one area where Linux still lags behind Windows and OSX. It can be a nightmare for users to setup fonts properly in Linux. In Arch Linux, this is even worse. I found some tricks to improve the quality of font rendering on Arch Linux. Though this is far from perfect, it is manageable. Follow these steps on Reddit to fix font rendering. I use Noto Sans, Adobe Source Code Pro, and Microsoft fonts. My apologies, but I can\u0026rsquo;t help here. Some websites still use Microsoft fonts.\nSetup Python Environment I use Python extensively and virtual environments are a must for my development setup. I use pipenv to manage my virtual environments. To install pipenv, you need to install virtualenv first. To install it, run the following command. sudo pacman -S python-virtualenv\nNow you are ready to install pipenv. Follow these instructions to install the tool.\nInstall some other common tools sudo pacman -S vlc openssh npm imagemagick git la-capitaine-icon-theme-git Do not forget to setup npm to install packages globally without requiring sudo.\nThat\u0026rsquo;s all! Your system should be in working condition now. Do check out my dotfiles if you want to set up your system like mine.\nHope you enjoyed the article. Cheers 😄\n  Make your Arch fonts beautiful easily! \u0026#x21a9;\u0026#xfe0e;\n   "},"name":"Arch Linux Installation Guide Part 2","published":"2018-01-26T15:45:27+05:30","summary":"In this post, I will continue from my last post and set up my newly installed Arch Linux for daily use. I am going to install some applications that I use on a day to day basis. Some of these applications are required for my current dotfile configuration setup to work properly. The choice of applications is highly opinionated and your preferences might be different.\n If you had gone for installation via SSH option, then I would suggest you to edit your `sshd_config` file and disable `root` login.","type":"entry","url":"https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-2/"}