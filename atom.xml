<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us">
    <generator uri="https://gohugo.io/" version="0.68.3">Hugo</generator><title type="html"><![CDATA[/dev/yash/notes]]></title>
    
        <subtitle type="html"><![CDATA[The directory of my thoughts]]></subtitle>
    
    
    
            <link href="https://yashagarwal.in/" rel="alternate" type="text/html" title="HTML" />
            <link href="https://yashagarwal.in/index.xml" rel="alternate" type="application/rss+xml" title="RSS" />
            <link href="https://yashagarwal.in/atom.xml" rel="self" type="application/atom+xml" title="Atom" />
            <link href="https://yashagarwal.in/jf2feed.json" rel="alternate" type="application/jf2feed+json" title="jf2feed" />
    <updated>2020-04-03T07:15:11+00:00</updated>
    
    
    <author>
            <name>Yash Agarwal</name>
            
                <email>yashagarwaljpr@gmail.com</email>
            </author>
    
        <id>https://yashagarwal.in/</id>
    
        
        <entry>
            <title type="html"><![CDATA[About this blog's new design]]></title>
            <link href="https://yashagarwal.in/posts/2020/04/about-this-blogs-new-design/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2020/04/about-this-blogs-new-design/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2020-04-01T10:54:48+05:30</published>
            <updated>2020-04-01T10:54:48+05:30</updated>
            
            
            <content type="html"><![CDATA[



    

    
    

    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.css" integrity="sha256-sCl5PUOGMLfFYctzDW3MtRib0ctyUvI9Qsmq2wXOeBY=" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/default-skin/default-skin.min.css" integrity="sha256-BFeI1V+Vh1Rk37wswuOYn5lsTcaU96hGaI7OUVCLjPc=" crossorigin="anonymous" />

    
    <link rel="stylesheet" href="/css/photoswipe.min.d780348a887d97b4d6cc664301a2941706e4a02aeb1533524fcce3b7b9b64b4f.css">

    

    
    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
        
        <div class="pswp__bg"></div>
        
        <div class="pswp__scroll-wrap">
            
            <div class="pswp__container">
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
            </div>
            
            <div class="pswp__ui pswp__ui--hidden">
                <div class="pswp__top-bar">
                    
                    <div class="pswp__counter"></div>
                    <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                    <button class="pswp__button pswp__button--share" title="Share"></button>
                    <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                    <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>
                    
                    
                    <div class="pswp__preloader">
                        <div class="pswp__preloader__icn">
                            <div class="pswp__preloader__cut">
                                <div class="pswp__preloader__donut"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                    <div class="pswp__share-tooltip"></div>
                </div>
                <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
                </button>
                <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
                </button>
                <div class="pswp__caption">
                    <div class="pswp__caption__center"></div>
                </div>
            </div>
        </div>
    </div>

<p>I was thinking about updating this blog&rsquo;s theme for quite some time. The only issue was that I was not willing to start working on a new theme from scratch. Frontend designing doesn&rsquo;t work <em>with</em> me anymore. None of the themes on the Hugo Themes <a href="https://themes.gohugo.io/">website</a> suited my taste. I liked themes (especially those based on <em>tufte-css</em>) on some of the blogs that I follow, but either the themes were made for Jekyll, or their source was not public. In the meanwhile, I lost my interest in writing also. I believe that disinterest has some roots in this delay in changing the look of this blog. Weird, I know.</p>
<p>My requirements for a new theme were simplistic. The stylesheet should not be in SASS/SCSS, no NPM/Webpack/JS nonsense, the mobile version should be functioning with a <em>hamburger</em> icon for the menu, and the code should be open-source with a favorable license
(I did not want to rewrite the theme completely).</p>
<p>Then the Coronavirus lockdown happened in India. Thankfully, I had anticipated this quite early and arrived at my home in Jaipur a couple of days before the announcement when everything was still under control. It gave me an ample amount of free time (outside of work hours) suddenly. By the way, today is the 11th day of my somewhat self-quarantine. Hopefully, I will be alright. 😌</p>
<p>I was looking for some themes, and then I found <a href="https://scripter.co/">this</a> website. This website fitted all my conditions with some extra goodies (the integration of <a href="https://www.w3.org/TR/webmention/">Webmentions</a> is one such feature). The only issue was that it came with its own share of problems. The author seems to have worked on this theme quite extensively, though I couldn&rsquo;t appreciate the code structure of the theme. It took me a couple of days to restructure the code, modified some CSS to my liking, and hurrah, everything was setup. The only issue is that the theme is broken on the Safari browser. I do not intend to fix that right now. I&rsquo;ll keep that for some future date.</p>
<p>You can see the original theme <a href="https://gitlab.com/kaushalmodi/hugo-theme-refined">here</a>, and my modified version <a href="https://github.com/yashhere/refined-mod">here</a>. It is still work in progress, and a lot can be improved in the structure of code. But for now, this is working for me. I will fix issues as and when they appear.</p>
<p>The Google page speed results are the best I have managed to get till now (although it is almost equivalent to the <a href="https://scripter.co/">original</a> website, so I haven&rsquo;t contributed much to these scores).</p>






<div class="gallery caption-position-bottom caption-effect-slide hover-effect-zoom hover-transition" itemscope itemtype="http://schema.org/ImageGallery">
        
  


    <link rel="stylesheet" href="/css/hugo-easy-gallery.css">
    


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2020-04-01/desktop.png');">
            <img itemprop="thumbnail" src="/images/2020-04-01/desktop.png" alt="Desktop score"/>
        </div>
        <a href="/images/2020-04-01/desktop.png" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2020-04-01/mobile.png');">
            <img itemprop="thumbnail" src="/images/2020-04-01/mobile.png" alt="Mobile score"/>
        </div>
        <a href="/images/2020-04-01/mobile.png" itemprop="contentUrl"></a>
    </figure>
</div>


</div>
<p>I am trying to switch from <a href="https://disqus.com/">Disqus</a> to <a href="https://commento.io/">Commento</a>, but the pricing is an issue here. <a href="https://gitlab.com/commento/commento/">Self-hosting</a> Commento is an option, but I am not sure if I am ready to maintain my own servers. If I go with self-hosting, I have a lot of things to host. But the cost is a significant obstruction. But, it is also true that I will not get the convenience of privacy for free. I need to think about it carefully.</p>
<p>One another trick that I found out was to enable <code>gzip</code> compression on pages served by Gitlab. The simple idea is to just gzip every page on the website in the same directory where the original HTML page is present. Gitlab will automatically pick the gzipped version and serve it to the client. You can see that in my <code>.gitlab-ci.yml</code> <a href="https://gitlab.com/yashhere/yashhere.gitlab.io/-/blob/source/.gitlab-ci.yml#L21">file</a>.</p>
<p>I was trying to create a staging environment (a Gitlab site, staging.yashagarwal.in, based on a branch of my Git repo, the master branch would serve the root domain) where I could test any changes to this website before pushing it to the actual site. But it does not seem possible with current Gitlab features. I do not want to move to Netlify or such third party services to achieve this, so for now, I will just keep myself limited to local testing.</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/updates" term="updates" label="Updates" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/theme" term="theme" label="theme" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[2019 - Year in Review]]></title>
            <link href="https://yashagarwal.in/posts/2020/03/2019-year-in-review/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2018/12/2018-year-in-review/?utm_source=atom_feed" rel="related" type="text/html" title="2018 - Year in Review" />
            
                <id>https://yashagarwal.in/posts/2020/03/2019-year-in-review/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2020-03-31T11:39:47+05:30</published>
            <updated>2020-03-31T11:39:47+05:30</updated>
            
            
            <content type="html"><![CDATA[<div class="note">
    <div></div>
    
If you find any grammatical errors in this post, please excuse me. I am not in a state to invest my mental strength fixing such issues right now. I will probably revisit this post sometime later to fix any problem.

</div>
<p>It has been three months since 2020 started. I was not able to keep up with my yearly habit of posting year reviews due to some reasons. One primary reason behind my negligence is my disinterest in writing on this blog. I felt that it was because the old layout of this blog had been too recurrent for me. So, I decided to fix that issue before thinking about writing.</p>
<p>The year 2019 was not a great year for me on many fronts. It was a year that reminded me of my limitations and brought me out of the bubble, that self-help books created for me. In retrospection, I find that I started a lot of things, with the intention of learning, but couldn&rsquo;t achieve any of the targets.</p>
<p>Like, I structure these posts every year, I have divided this post too in many sections. It makes it easier for me to focus on various aspects of my life in the past year. I will start with the best parts of my life.</p>
<h2 id="reading">Reading</h2>
<p>I had decided to read 26 books in the year. I finished the year with 28 books. Out of 12 months, I did not read any book in January, November, and December. I finished two of the fiction series that I wanted to read for years - Harry Potter, and Percy Jackson. These two books are the reasons that I was able to finish 28 books in 9 months. It took me very little time to finish these book series. Other books (mostly non-fiction) took me ages to complete.</p>
<p>I am not sure if I am getting any value out of non-fiction books <em>right now</em>. I do not take notes and forget most of the lessons in a few days. Not sure if this is the right strategy while reading such books. Hence I have decided that I will reduce the number of non-fiction books <em>for some time</em> and put more attention to technical publications and CS books.</p>
<p>Though I am confident that my note-taking skills will not help in reading technical books either, I do hope to improve over time.</p>
<p>One of my reading goals from last year was to read a research paper every 15 days. I succeeded in the first quarter of the year and failed miserably after that. I started with a good intention and kept reading for some months. Then self-doubts began popping out. <em>What value am I getting out of this?</em>, was the question in my mind. I started this exercise because I have specific goals in my mind, and I wanted to improve myself academically. But when you are not able to answer such a question even to yourself, then something is wrong.</p>
<p>This failure has taught me some crucial lessons. I tend to start things without thinking about the end goal. It is the right approach when <em>learnings</em> from the process is more important than the result. But I was not able to focus on either of them. I lost my focus when I realized this.</p>
<p>I have come to understand the value of proper note-taking. I have read so many good books, but I do not remember any lessons from these books, because -</p>
<ul>
<li>I read passively and try to finish the book as quickly as possible.</li>
<li>I did not try to implement the lessons in my day to day life while reading.</li>
</ul>
<p>I lost my interest in reading news and blog articles also. I lost my interest from social media and, in general, the Internet entirely. I preferred to sleep as much as possible. That has its side-effects. Read on.</p>
<h2 id="blogging-and-writing">Blogging and Writing</h2>
<p>I had decided to write regularly in 2019. I didn&rsquo;t. It seems that failing was a norm for me in 2019. This section was my worst hit interest in 2019. Somehow, I was not able to gather the concentration required for writing. I used to get sudden motivations for a few days, I wrote during those periods. The rest of the time, I just thought that I should write. I think I suffered from the so-called <em>Writer&rsquo;s Block</em>.</p>
<h2 id="health">Health</h2>
<p>My analysis says that all my failures last year can be traced to this section. I was sick for almost a quarter of the year. Repeatedly getting ill and the time required for recovery took a toll on my body and mind. I lost all my focus and will power to do anything.</p>
<p>The exercise was again an issue. I certainly put more effort than last year, but that effort was scattered throughout the year, for small periods. So, I do not notice much difference. However, I continued to walk whenever I got time.</p>
<h2 id="work">Work</h2>
<p>It was not a very exciting year on the work front. I continued to work in Cisco this year. The work was neither very interesting nor very dull. The nature of my job is such that the exciting work shows up from time to time. With no fixed deadlines and no fixed way of doing things, it can be quite satisfying and quite frustrating at times.</p>
<h2 id="social-media">Social Media</h2>
<p>I lost my interest in social media altogether. I opened Facebook only to see the notification once in a while, sometimes after months. I got disillusioned by Twitter this year, because of the toxic political content there. I was never a regular user of YouTube anyway, so that was never a concern. However, I went to great lengths to delete every Google app from my phone, especially Gmail and YouTube. The email had become a new Facebook for me. I was checking emails every 15 minutes. So I signed out of Google account in my primary browser and restricted my email activities to a secondary browser. It helped me in keeping the urge to check email in control.</p>
<p>But this sudden disinterest has created a void in my typical day, which is quite reasonable given how much my life depends on the Internet. I am yet to figure out how to fill this void. Reading books did not help, however sleeping and watching movies helped for sure (however, not without its own set of problems).</p>
<h2 id="travel">Travel</h2>
<p>I was somewhat dissatisfied with myself for not traveling enough. This year, I had decided to travel extensively. But my health betrayed me. Out of 365 days, I was able to take the time of 4 days for travel. I went to Coorg and Chikmagalur with friends. Both trips happened during the wrong weather conditions. But the circumstances were such that I could not deny to my friends.</p>
<h2 id="miscellaneous">Miscellaneous</h2>
<p>My daily routine, more or less, remained the same. Though I couldn&rsquo;t wake up early in the morning most of the time, the reality is that I was not trying. My only intention behind waking up early in the morning was to meditate. I did that, however sporadically.</p>
<p>One other goal in 2019 was to get rid of procrastination. I did not care about it at all. Somehow, I was too busy fixing other issues in my life, that this seemed like a minor problem. Anyway, I did not attempt to do anything on a personal level, where procrastination would affect me. On the work front, at one point or another, you have to work and show results. So there it was never apparent. I tried many things to reduce the impact and influence of <em>technology</em> in my life. Although I consider myself successful to an extent, there is still scope for improvement.</p>
<p>In 2018, I was in full praise for to-do lists and the concept of maintaining goals. 2019 has busted all those praises. This year, these techniques did not work for me at all. Anyway, 2019 was one of those times when nothing worked for me, so this failure does not come as a surprise to me. Though, I still believe that this is something that can genuinely help me with some of my issues.</p>
<hr>
<p><em>If I had written this post at the beginning of the year 2020, I would have written some wish for the year 2020 at this place, as I always do, but this time is so gloomy that I am not able to think of anything good. I just pray to God that everything gets all right soon.</em></p>
<p><em>Being with family during this time, has given me some mental stability. But, it is also true that facing such circumstances and coming out triumphant, is what shows the human character.</em></p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/write-ups" term="write-ups" label="Write-ups" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/review" term="review" label="Review" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Automatic HTTPS Certs Using GoDaddy and Gitlab APIs]]></title>
            <link href="https://yashagarwal.in/posts/2019/07/automatic-https-certs-using-godaddy-and-gitlab-apis/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2019/07/setting-up-modsecurity-on-ubuntu/?utm_source=atom_feed" rel="related" type="text/html" title="Setting Up ModSecurity on Ubuntu" />
            
                <id>https://yashagarwal.in/posts/2019/07/automatic-https-certs-using-godaddy-and-gitlab-apis/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2019-07-23T16:40:28+05:30</published>
            <updated>2019-07-23T16:40:28+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>Before I start, here is some technical information about my website -</p>
<ul>
<li>Hosted on Gitlab and usage its CD for automatic deployment, which is triggered on a git commit.</li>
<li>The domain name registrar is GoDaddy.</li>
<li>Let&rsquo;s Encrypt as the TLS certificate provider for my domain name.</li>
</ul>
<p>Let&rsquo;s Encrypt provides certificates for 90 days only, so I was forced to set up the <code>certbot</code> every three months, then generate the certificate and <em>manually</em> deploy the certificates to GitLab. It was frustrating because in three months, my shell probably will not remember the command I used last time, and I was too lazy to document the process somewhere.</p>
<p>Then I came across a <a href="https://github.com/pallavagarwal07/NamesiloCert">project</a>, which was trying to do a similar thing with other domain name registrar. I thought that this is an excellent setup to adapt and modify it to suit my needs. So I decided to write my module for automatic deployment of Let&rsquo;s Encrypt certificates to GitLab.</p>
<h2 id="how-does-lets-encrypt-work">How does Let&rsquo;s Encrypt work?</h2>
<p>Before Let&rsquo;s Encrypt can generate the certificate for the domain, it requires the user to prove domain ownership. Let&rsquo;s Encrypt provides two <a href="https://letsencrypt.org/docs/challenge-types/">methods</a> to do this task -</p>
<ul>
<li>Updating the DNS records of the domain registrar (DNS-01 challenge)</li>
<li>Adding an HTTP resource under a well-known URI on the website (HTTP-01 challenge)</li>
</ul>
<p>Using the second method requires me to add a file on my website, and I did not want to do that. Moreover, if in the future, I decide to host some other service, which does not have a website, then this method will fail.</p>
<p>The first method requires that the domain configuration on the domain registrar is modified. GoDaddy provides a robust API, and it is not difficult to utilize that API to automate specific tasks. The probability of changing the registrar is quite low, at least for the next few years. It will be easier to generate the certificates for any subdomains, as all the subdomains will also be hosted under the same domain registrar.</p>
<h2 id="how-does-the-tool-work">How does the tool work?</h2>
<p>So here are the steps:</p>
<ol>
<li>Call <code>certbot</code> with all the domain names</li>
<li>Invoke GoDaddy API to update the DNS records as indicated by Certbot</li>
<li>Wait for 10 minutes for DNS changes to propagate</li>
<li>Let <code>certbot</code> verify the DNS changes</li>
<li>Use the GitLab API to deploy the generated certificates to GitLab pages</li>
</ol>
<h3 id="step-1-invoking-certbot">Step 1: Invoking certbot</h3>
<p>In step 1, we call <code>certbot</code> will the preferred method DNS. We also need to supply an email id (used by Let&rsquo;s Encrypt to notify domain expiration). The <code>EMAIL_ID</code> environment variable can be used to store the email id of the user.</p>
<p>Certbot runs in an interactive mode by default. It is not desired in a scripted environment. Certbot also provides mechanisms to deploy the certificates to a local server automatically, but as we are hosting our website on Gitlab, we do not want the automatic deployment facility. So we need to invoke the <code>certbot</code> command with <code>--manual</code> and <code>certonly</code> modes.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">certbot   --manual <span class="se">\
</span><span class="se"></span>          --preferred-challenges dns <span class="se">\
</span><span class="se"></span>          --agree-tos <span class="se">\
</span><span class="se"></span>          --email <span class="s2">&#34;</span><span class="si">${</span><span class="nv">EMAIL_ID</span><span class="si">}</span><span class="s2">&#34;</span> <span class="se">\
</span><span class="se"></span>          --no-eff-email <span class="se">\
</span><span class="se"></span>          --expand <span class="se">\
</span><span class="se"></span>          --renew-by-default <span class="se">\
</span><span class="se"></span>          --manual-public-ip-logging-ok <span class="se">\
</span><span class="se"></span>          --noninteractive <span class="se">\
</span><span class="se"></span>          --redirect <span class="se">\
</span><span class="se"></span>          --config-dir <span class="si">${</span><span class="nv">DIR</span><span class="si">}</span>/generated/config <span class="se">\
</span><span class="se"></span>          --work-dir <span class="si">${</span><span class="nv">DIR</span><span class="si">}</span>/generated/work <span class="se">\
</span><span class="se"></span>          --logs-dir <span class="si">${</span><span class="nv">DIR</span><span class="si">}</span>/generated/logs <span class="se">\
</span><span class="se"></span>          --manual-auth-hook <span class="si">${</span><span class="nv">DIR</span><span class="si">}</span>/auth_hook.sh <span class="se">\
</span><span class="se"></span>          -d yashagarwal.in <span class="se">\
</span><span class="se"></span>          certonly</code></pre></div>
<p>The explanation for most of the flags used in the above command can be found by running the following command -</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">certbot --help</code></pre></div>
<p>The <code>--manual-auth-hook</code> flag is worth looking. This hook provides a mechanism to specify the executable, which can be used to facilitate domain ownership validation. In this case, the hook points to a script <code>auth_hook.sh</code>, which then calls a Go client, which interacts with GoDaddy API.</p>
<h3 id="step-2-adding-dns-entry-to-godaddy-dns-manager">Step 2: Adding DNS entry to GoDaddy DNS manager</h3>
<p>Certbot supplies two environment variables <code>CERTBOT_DOMAIN</code>, which contains the domain name to be verified and <code>CERTBOT_VALIDATION</code>, which includes a random string corresponding to <code>_acme-challenge TXT</code> entry. What this means is that, if I have</p>
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">CERTBOT_DOMAIN=yashagarwal.in
CERTBOT_VALIDATION=6VNg5kDVI_BF1S9N5s74LTBHQnwDpQqKlblKRjIzBwM</code></pre></div>
<p>Then the DNS manager should contain a TXT entry <code>_acme-challenge.yashagarwal.in</code> with the value of <code>6VNg5kDVI_BF1S9N5s74LTBHQnwDpQqKlblKRjIzBwM</code>.</p>
<p>The <code>auth_hook.sh</code> file calls the Go client with the abovementioned environment variables. The relevant code can be found <a href="https://github.com/yashhere/GoDaddy-GitLab-Certs/blob/master/auth_hook.sh">here</a>.</p>
<p>Once all the DNS entries are added, the <code>auth_hook.sh</code> script will sleep for 10 minutes. It is to allow DNS changes to propagate throughout the Internet. It is a random duration as I could not find any GoDaddy support page mentioning the exact period used by them.</p>
<h3 id="step-3-generation-of-certificates">Step 3: Generation of certificates</h3>
<p>Once the <code>auth_hook.sh</code> script returns successfully, <code>certbot</code> will verify the DNS records. If the verification is successful, <code>certbot</code> will generate the certificates in <code>./generated/config/live/{CERTBOT_DOMAIN}</code> directory.</p>
<h3 id="step-4-deploying-the-certificates-to-gitlab">Step 4: Deploying the certificates to GitLab</h3>
<p>I use the following command to deploy the certificates to Gitlab pages where my website is hosted -</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">curl  -vvv <span class="se">\
</span><span class="se"></span>      --request PUT <span class="se">\
</span><span class="se"></span>      --header <span class="s2">&#34;Private-Token:</span><span class="si">${</span><span class="nv">GITLAB_TOKEN</span><span class="si">}</span><span class="s2">&#34;</span> <span class="se">\
</span><span class="se"></span>      --form <span class="s2">&#34;certificate=@</span><span class="si">${</span><span class="nv">key_dir</span><span class="si">}</span><span class="s2">/fullchain.pem&#34;</span> <span class="se">\
</span><span class="se"></span>      --form <span class="s2">&#34;key=@</span><span class="si">${</span><span class="nv">key_dir</span><span class="si">}</span><span class="s2">/privkey.pem&#34;</span> <span class="se">\ </span><span class="s2">&#34;https://gitlab.com/api/v4/projects/yashhere%2Fyashhere.gitlab.io/pages/domains/yashagarwal.in&#34;</span></code></pre></div>
<p>where</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nv">key_dir</span><span class="o">=</span><span class="s2">&#34;./generated/config/live/yashagarwal.in&#34;</span></code></pre></div>
<p>Moreover, <code>GITLAB_TOKEN</code> is an environment variable that contains the API token generated from the Gitlab settings page.</p>
<h2 id="automatic-deployment-using-travis-ci">Automatic Deployment using Travis CI</h2>
<p>It is not automation if I have to run this script manually every three months. So I created a Travis CI job to automate this process. The job will run every month and deploy my certificates automatically. It has been four months, and I have not faced any issues with this setup.</p>
<p>The code for this post can be viewed at <a href="https://github.com/yashhere/GoDaddy-GitLab-Certs">Github</a>.</p>
<p>Thanks for reading. Cheers 😄</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/linux" term="linux" label="Linux" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Setting Up ModSecurity on Ubuntu]]></title>
            <link href="https://yashagarwal.in/posts/2019/07/setting-up-modsecurity-on-ubuntu/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2019/07/setting-up-modsecurity-on-ubuntu/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2019-07-01T18:20:18+05:30</published>
            <updated>2019-07-01T18:20:18+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>Recently, I am experimenting with Web Application Firewalls a lot. ModSecurity is one of them. It is the most famous and useful open-source Web Application Firewall (WAF) in existence. It is supported by various web servers such as Apache, Nginx, and IIS.</p>
<p>The job of ModSecurity is to sit in front of the application web server and check the incoming requests and outgoing responses to filter out malicious content. It does so by the use of powerful and complex regular expressions. ModSecurity uses a rule language for its rules. The rule language has variables and operators defined to aid in the process of parsing HTTP requests.</p>
<p>ModSecurity, in itself, cannot block or allow requests. It is just a rule engine. It requires rules to operate appropriately. That&rsquo;s where its sister project, Core Rule Set (CRS), comes into the picture. CRS is a rule set developed to be used with ModSecurity. It has been in active development for several years now and is very mature. Together, ModSecurity and CRS form a formidable defense against the widespread web application attacks.</p>
<p>Now that you know, what a WAF is, let&rsquo;s proceed to install ModSecurity on Ubuntu. I will be compiling ModSecurity&rsquo;s latest version on Ubuntu 18.04. We will also configure ModSecurity to use Core Rule Set.</p>
<h2 id="installing-dependencies">Installing Dependencies</h2>
<p>ModSecurity requires some dependencies to work correctly. Let&rsquo;s install them -</p>
<p>First, upgrade the Ubuntu system.</p>
<div class="highlight-wrapper">
    <div class="highlight-before">bash</div>
    
        <div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo apt-get -y update
sudo apt-get -y upgrade</code></pre></div>
    
</div>
<p>Now install the dependencies.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo apt-get -y install git libtool dh-autoreconf pkgconf gawk libcurl4-gnutls-dev libexpat1-dev libpcre3-dev libssl-dev libxml2-dev libyajl-dev zlibc zlib1g-dev libxml2 libpcre++-dev libxml2-dev libgeoip-dev liblmdb-dev lua5.2-dev iputils-ping locales apache2 apache2-dev ca-certificates wget</code></pre></div>
<p><em>Optional</em>: clean up the Ubuntu caches.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo apt-get clean <span class="o">&amp;&amp;</span> sudo rm -rf /var/lib/apt/lists/*</code></pre></div>
<p>Install <code>SSDeep</code> as well (as done <a href="https://github.com/CRS-support/modsecurity-docker/blob/v3/apache-apache/Dockerfile">here</a>)</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">cd</span> ~
git clone https://github.com/ssdeep-project/ssdeep
<span class="nb">cd</span> ssdeep
./bootstrap
./configure
make
sudo make install</code></pre></div>
<h2 id="compiling-modsecurity">Compiling ModSecurity</h2>
<p>Let&rsquo;s clone ModSecurity from Github.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">cd</span> ~
git clone -b v3/master --single-branch https://github.com/SpiderLabs/ModSecurity
<span class="nb">cd</span> ModSecurity
git submodule init
git submodule update
./build.sh
./configure
make                <span class="c1"># takes ~8 minutes on AWS t2.micro</span>
sudo make install</code></pre></div>
<h2 id="compiling-modsecurity-apache-connector">Compiling ModSecurity-apache connector</h2>
<p>To configure it with Apache, we will require ModSecurity-apache connector. Let&rsquo;s install that as well.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">cd</span> ~
git clone https://github.com/SpiderLabs/ModSecurity-apache
<span class="nb">cd</span> ModSecurity-apache
./autogen.sh
./configure --with-libmodsecurity<span class="o">=</span>/usr/local/modsecurity
make
sudo make install</code></pre></div>
<h2 id="setting-up-crs-rules">Setting up CRS rules</h2>
<p>Now, let&rsquo;s download CRS rule set as well.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">cd</span> ~
git clone -b v3.2/dev https://github.com/SpiderLabs/owasp-modsecurity-crs
sudo mv owasp-modsecurity-crs/ /usr/local/</code></pre></div>
<p>Rename CRS configuration file -</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo mv /usr/local/owasp-modsecurity-crs/crs-setup.conf.example /usr/local/owasp-modsecurity-crs/crs-setup.conf</code></pre></div>
<h2 id="setting-up-modsecurity">Setting up ModSecurity</h2>
<p>Now, we need to create a file in the Apache modules directory, so that Apache can know, how to activate ModSecurity.</p>
<p>Create <code>/etc/apache2/mods-enabled/security3.conf</code> file and paste the following contents -</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">LoadModule security3_module /usr/lib/apache2/modules/mod_security3.so
modsecurity on
modsecurity_rules_file <span class="s1">&#39;/etc/apache2/modsec/main.conf&#39;</span></code></pre></div>
<p>As you can see, the last line in the above code block reference a file <code>main.conf</code> in a folder <code>modsec</code>. This folder will not be present by default. We need to create that.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo mkdir -p /etc/apache2/modsec</code></pre></div>
<p>Setup ModSecurity configuration file -</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># enables Unicode support in ModSecurity</span>
sudo wget -P /etc/apache2/modsec/ https://raw.githubusercontent.com/SpiderLabs/ModSecurity/v3/master/unicode.mapping

sudo wget -P /etc/apache2/modsec/ https://raw.githubusercontent.com/SpiderLabs/ModSecurity/v3/master/modsecurity.conf-recommended
sudo mv /etc/apache2/modsec/modsecurity.conf-recommended /etc/apache2/modsec/modsecurity.conf</code></pre></div>
<p>Change the SecRuleEngine directive in the configuration to change from the default &ldquo;detection only&rdquo; mode to actively dropping malicious traffic.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo sed -i <span class="s1">&#39;s/SecRuleEngine DetectionOnly/SecRuleEngine On/&#39;</span> /etc/apache2/modsec/modsecurity.conf</code></pre></div>
<p>Change the location of <code>modsec_audit.log</code> file to Apache log directory.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo sed -i <span class="s1">&#39;s/SecAuditLog \/var\/log\/modsec_audit.log/SecAuditLog \/var\/log\/apache2\/modsec_audit.log/&#39;</span> /etc/apache2/modsec/modsecurity.conf</code></pre></div>
<p>To configure ModSecurity to use CRS rule set, put the following text in <code>/etc/apache2/modsec/main.conf</code> file.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">Include <span class="s2">&#34;/etc/apache2/modsec/modsecurity.conf&#34;</span>
Include <span class="s2">&#34;/usr/local/owasp-modsecurity-crs/crs-setup.conf&#34;</span>
Include <span class="s2">&#34;/usr/local/owasp-modsecurity-crs/rules/*.conf&#34;</span></code></pre></div>
<p>Also enable some Apache modules for better functioning of ModSecurity.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo a2enmod unique_id headers rewrite actions dav dav_fs</code></pre></div>
<p>Now restart the Apache server</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo systemctl restart apache2</code></pre></div>
<h2 id="fixing-some-common-issues">Fixing some common issues</h2>
<p>Sometimes, I had encountered errors when ModSecurity was not able to append logs to its log file. I figured out that ModSecurity did not have enough permissions to write that file. We can fix this issue quickly.</p>
<p>First, test if you really have this issue or not.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">curl <span class="s1">&#39;http://localhost/?q=&#34;&gt;&lt;script&gt;alert(1)&lt;/script&gt;&#39;</span>
&lt;!DOCTYPE HTML PUBLIC <span class="s2">&#34;-//IETF//DTD HTML 2.0//EN&#34;</span>&gt;
&lt;html&gt;&lt;head&gt;
&lt;title&gt;403 Forbidden&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;h1&gt;Forbidden&lt;/h1&gt;
&lt;p&gt;You dont have permission to access / on this server.&lt;br /&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;address&gt;Apache/2.4.29 <span class="o">(</span>Ubuntu<span class="o">)</span> Server at localhost Port 80&lt;/address&gt;
&lt;/body&gt;&lt;/html&gt;</code></pre></div>
<p>Now go to Apache log directory and check the contents of <code>modsec_audit.log</code> file.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">cd</span> /var/log/apache2
tail modsec_audit.log</code></pre></div>
<p>You should see the following content -</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">---0LzdyETA---A--
<span class="o">[</span>01/Jul/2019:14:42:41 +0000<span class="o">]</span> 156199216179.666171 127.0.0.1 <span class="m">41824</span> ip-xxx-xx-xx-xx.ap-south-1.compute.internal <span class="m">80</span>
---0LzdyETA---B--
GET /?q<span class="o">=</span><span class="s2">&#34;&gt;&lt;script&gt;alert(1)&lt;/script&gt; HTTP/1.1
</span><span class="s2">Host: localhost
</span><span class="s2">User-Agent: curl/7.58.0
</span><span class="s2">Accept: */*
</span><span class="s2">
</span><span class="s2">---TqjMwy7h---D--
</span><span class="s2">
</span><span class="s2">---TqjMwy7h---F--
</span><span class="s2">HTTP/1.1 403
</span><span class="s2">
</span><span class="s2">---TqjMwy7h---H--
</span><span class="s2">ModSecurity: Warning. detected XSS using libinjection. [file &#34;</span>/usr/local/owasp-modsecurity-crs/rules/REQUEST-941-APPLICATION-ATTACK-XSS.conf<span class="s2">&#34;] [line &#34;</span>37<span class="s2">&#34;] [id &#34;</span>941100<span class="s2">&#34;] [rev &#34;&#34;] [msg &#34;</span>XSS Attack Detected via libinjection<span class="s2">&#34;] [data &#34;</span>Matched Data: XSS data found within ARGS:q: <span class="s2">&#34;&gt;&lt;script&gt;alert(1)&lt;/script&gt;&#34;</span><span class="o">]</span> <span class="o">[</span>severity <span class="s2">&#34;2&#34;</span><span class="o">]</span> <span class="o">[</span>ver <span class="s2">&#34;OWASP_CRS/3.1.0&#34;</span><span class="o">]</span> <span class="o">[</span>maturity <span class="s2">&#34;0&#34;</span><span class="o">]</span> <span class="o">[</span>accuracy <span class="s2">&#34;0&#34;</span><span class="o">]</span> <span class="o">[</span>tag <span class="s2">&#34;application-multi&#34;</span><span class="o">]</span> <span class="o">[</span>tag <span class="s2">&#34;language-multi&#34;</span><span class="o">]</span> <span class="o">[</span>tag <span class="s2">&#34;platform-multi&#34;</span><span class="o">]</span> <span class="o">[</span>tag <span class="s2">&#34;attack-xss&#34;</span><span class="o">]</span> <span class="o">[</span>tag <span class="s2">&#34;OWASP_CRS/WEB_ATTACK/XSS&#34;</span><span class="o">]</span> <span class="o">[</span>tag <span class="s2">&#34;WASCTC/WASC-8&#34;</span><span class="o">]</span> <span class="o">[</span>tag <span class="s2">&#34;WASCTC/WASC-22&#34;</span><span class="o">]</span> <span class="o">[</span>tag <span class="s2">&#34;OWASP_TOP_10/A3&#34;</span><span class="o">]</span> <span class="o">[</span>tag <span class="s2">&#34;OWASP_AppSensor/IE1&#34;</span><span class="o">]</span> <span class="o">[</span>tag <span class="s2">&#34;CAPEC-242&#34;</span><span class="o">]</span> <span class="o">[</span>hostname <span class="s2">&#34;localhost&#34;</span><span class="o">]</span> <span class="o">[</span>uri <span class="s2">&#34;/&#34;</span><span class="o">]</span> <span class="o">[</span>unique_id <span class="s2">&#34;156198848361.198287&#34;</span><span class="o">]</span> <span class="o">[</span>ref <span class="s2">&#34;v8,27t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls&#34;</span><span class="o">]</span>
....
....

---TqjMwy7h---I--

---TqjMwy7h---J--

---TqjMwy7h---Z--</code></pre></div>
<p>If you do not see the following content, and the file is empty or it does not exist, then ModSecurity was not able to open this file for writing. Use the following fix -</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># find out the user, Apache is running as</span>
<span class="nv">apache_user</span><span class="o">=</span><span class="s2">&#34;</span><span class="k">$(</span>ps -ef <span class="p">|</span> egrep <span class="s1">&#39;(httpd|apache2|apache)&#39;</span> <span class="p">|</span> grep -v <span class="sb">`</span>whoami<span class="sb">`</span> <span class="p">|</span> grep -v root <span class="p">|</span> head -n1 <span class="p">|</span> awk <span class="s1">&#39;{print $1}&#39;</span><span class="k">)</span><span class="s2">&#34;</span></code></pre></div>
<p>Now, change the owner of Apache log directory to <code>apache_user</code>.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo chown -R <span class="nv">$apache_user</span>:<span class="nv">$apache_user</span> /var/log/apache2/*</code></pre></div>
<p>Now, ModSecurity should be able to append logs to the file <code>modsec_audit.log</code>.</p>
<h2 id="bonus-enabling-json-logs"><em>Bonus</em>: Enabling JSON logs</h2>
<p><strong>Note:</strong> Honestly speaking, I was not able to make it work every time. I do not know what is the issue, but it works with some of the installations, and with some of the installations, it just doesn&rsquo;t log anything to the <code>audit</code> directory. If anyone has managed to make it work consistently, please let me know.</p>
<p>Anyway, if you are like me, who do not like the default ModSecurity log format, ModSecurity provides an option to generate logs in JSON format as well. To enable JSON support, the YAJL library should be installed. We already installed this package when we were installing dependencies, so our ModSecurity setup is compiled with JSON support. Let us now configure ModSecurity to generate JSON logs.</p>
<p>Open the <code>/etc/apache2/modsec/modsecurity.conf</code> file and find the following lines -</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">SecAuditLogType           Serial
SecAuditLog               /var/log/modsec_audit.log</code></pre></div>
<p>Once you have found the following lines, replace these lines with the following lines</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">SecAuditLogFormat         JSON
SecAuditLogType           Parallel
SecAuditLog               /var/log/apache2/modsec_audit.log
SecAuditLogStorageDir     /var/log/apache2/audit/

SecAuditLogFileMode       <span class="m">0644</span>
SecAuditLogDirMode        <span class="m">0755</span></code></pre></div>
<p>Restart Apache server</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo systemctl restart apache2</code></pre></div>
<p>Now, go to <code>/var/log/apache2/</code> directory and create <code>audit</code> folder.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">cd</span> /var/log/apache2
sudo mkdir audit

<span class="c1"># make `apache_user` owner of this directory as well...</span>
sudo chown -R <span class="nv">$apache_user</span>:<span class="nv">$apache_user</span> /var/log/apache2/audit</code></pre></div>
<p>Now, ModSecurity should be able to generate JSON logs in this directory. ModSecurity generates logs in the following format -</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">ubuntu@server:/var/log/apache2$ tree audit
audit
└── 20190701
    ├── 20190701-1132
    │   ├── 20190701-113225-156196094515.868593
    │   └── 20190701-113226-156196094691.154769
    ├── 20190701-1211
    │   ├── 20190701-121122-156196328239.048942
    │   └── 20190701-121122-156196328243.018882

    ....
    ....</code></pre></div>
<p>Now, your site should be relatively more secure than before.</p>
<h2 id="a-warning-though">A warning, though</h2>
<p>CRS is known to generate a lot of false-positive when enabled completely. We have not touched CRS paranoia levels. By default, it is set to paranoia level 1, which is known to produce false positives rarely, but still, as a measure of precaution, monitor your site&rsquo;s traffic for some time, and then decide if you need to disable some of the CRS rules or not.</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/linux" term="linux" label="Linux" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Travelogue - Chikmagalur]]></title>
            <link href="https://yashagarwal.in/posts/2019/06/travelogue-chikmagalur/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2019/06/travelogue-chikmagalur/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2019-06-29T06:10:03+05:30</published>
            <updated>2019-06-29T06:10:03+05:30</updated>
            
            
            <content type="html"><![CDATA[



    

    
    

    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.css" integrity="sha256-sCl5PUOGMLfFYctzDW3MtRib0ctyUvI9Qsmq2wXOeBY=" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/default-skin/default-skin.min.css" integrity="sha256-BFeI1V+Vh1Rk37wswuOYn5lsTcaU96hGaI7OUVCLjPc=" crossorigin="anonymous" />

    
    <link rel="stylesheet" href="/css/photoswipe.min.d780348a887d97b4d6cc664301a2941706e4a02aeb1533524fcce3b7b9b64b4f.css">

    

    
    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
        
        <div class="pswp__bg"></div>
        
        <div class="pswp__scroll-wrap">
            
            <div class="pswp__container">
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
            </div>
            
            <div class="pswp__ui pswp__ui--hidden">
                <div class="pswp__top-bar">
                    
                    <div class="pswp__counter"></div>
                    <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                    <button class="pswp__button pswp__button--share" title="Share"></button>
                    <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                    <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>
                    
                    
                    <div class="pswp__preloader">
                        <div class="pswp__preloader__icn">
                            <div class="pswp__preloader__cut">
                                <div class="pswp__preloader__donut"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                    <div class="pswp__share-tooltip"></div>
                </div>
                <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
                </button>
                <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
                </button>
                <div class="pswp__caption">
                    <div class="pswp__caption__center"></div>
                </div>
            </div>
        </div>
    </div>

<p>South India is blessed with nature throughout the year, but monsoons bring a different flavor and ethereal quality to some places. Although the rainy season might not be the best time to travel, there is a certain charm in holidaying during the downpour.</p>
<p>We (I and my flatmates in Bengaluru) were planning a trip to Chikmagalur since the beginning of June. One of my friends knows driving, so we decided to rent a car and drive ourselves to a distance of approximately 250 KMs. We booked the car through Drivezy. They had promised a Mahindra KUV100, but at the last moment, that couldn&rsquo;t keep their commitment and gave us a Honda Amaze with automatic transmission. My friend who was driving had never driven such a car, so we all got scared of our fate for the next two days, but we decided to go ahead with it, trusting our friend.</p>
<p><em>I too know driving, but like every other aspect of my life, I never gained enough confidence to go on such a long drive. It was a similar case this time as well.</em></p>
<p>The way to Chikmagalur from Bengaluru is the well-maintained NH75 (it has a total of four tolls, so maintenance is expected). We started early on the morning of Saturday, 22nd June to avoid Bengaluru&rsquo;s traffic. Nature was accommodating that day, and the Sun 🌞 stayed hidden behind clouds for most of our journey. That made our 6-hour drive very enjoyable.</p>



    <link rel="stylesheet" href="/css/hugo-easy-gallery.css">
    


<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2019-06-29/bdiyaFI.jpg" alt="Somewhere on NH75"/>
        </div>
        <a href="/images/2019-06-29/bdiyaFI.jpg" itemprop="contentUrl"></a>
            <figcaption>
                    <p>Somewhere on NH75</p>
            </figcaption>
    </figure>
</div>

<p>We were not in any hurry and wanted to enjoy every moment of our trip to the fullest. With Punjabi beats playing in our car, we stopped at various places on the highway.</p>
<blockquote>
<p>Chikmagalur means &ldquo;The town of the younger daughter&rdquo; in the Kannada. The town is said to have been given as a dowry to the younger daughter of Rukmangada, the legendary chief of Sakkarepatna and hence the name.</p>
<p>&mdash; Wikipedia</p>
</blockquote>
<p>We stopped at Adyar Ananda Bhavan 🏨 for breakfast. I have tasted sweets from A2B, and the taste was the best that I could get in the South. So I decided to eat Masala Dosai and Idli Sambhar there. The food did not disappoint me at all.</p>
<p>After breakfast, we resumed our journey. The first stop in our trip was the gorgeous Sri Chennakeshava Temple. <em>Chenna</em> means beautiful and <em>Keshava</em> refers to Lord Vishnu. That should give you an idea, the presiding deity of the temple is the <em>Handsome Vishnu</em>.</p>
<p>The whole premises of the temple is filled with sheer poetry on the walls in the form of stone sculptures. I was completely mesmerized by its intricate but aesthetically pleasing carvings.</p>
<p>On the entrance of the temple, a vast golden Gopuram welcomes the devotees. I
was amazed by the level of details on the sculptures engraved on the Gopuram. My phone&rsquo;s camera will not be able to do justice to this intricate artistry.</p>



<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2019-06-29/V6AAfuv.jpg" alt="The Gopuram of Sri Chennakeshava Temple"/>
        </div>
        <a href="/images/2019-06-29/V6AAfuv.jpg" itemprop="contentUrl"></a>
            <figcaption>
                    <p>The Gopuram of Sri Chennakeshava Temple</p>
            </figcaption>
    </figure>
</div>

<p>The one specialty of the main temple is that it does not feature a dome. I have not seen any major Hindu temple without a dome over the idol of the main deity. It seems like an aberration to me, but a welcoming one. A disclaimer, I am not an architecture buff, so I do not know how correct my facts are here.</p>



<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2019-06-29/OhzIghs.jpg" alt="Sri Chennakeshava Temple, from outside"/>
        </div>
        <a href="/images/2019-06-29/OhzIghs.jpg" itemprop="contentUrl"></a>
            <figcaption>
                    <p>Sri Chennakeshava Temple, from outside</p>
            </figcaption>
    </figure>
</div>

<p>The inside of the temple is pretty dark. There are several pillars inside the temple. Each of the pillars is decorated with various types of sculptors.</p>



<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2019-06-29/jhqoSTE.jpg" alt="A pillar inside the temple"/>
        </div>
        <a href="/images/2019-06-29/jhqoSTE.jpg" itemprop="contentUrl"></a>
            <figcaption>
                    <p>A pillar inside the temple</p>
            </figcaption>
    </figure>
</div>

<p>However, the fascinating thing is at the ceiling. The carvings done on the ceiling of the temple is just amazing.</p>



<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2019-06-29/074g3uO.jpg" alt="The ceiling of the temple"/>
        </div>
        <a href="/images/2019-06-29/074g3uO.jpg" itemprop="contentUrl"></a>
            <figcaption>
                    <p>The ceiling of the temple</p>
            </figcaption>
    </figure>
</div>

<blockquote>
<p>If you zoom in a little bit, you will see a depiction of Narasimha avatar of Lord Vishnu in the center of the ceiling.</p>
</blockquote>
<p>As I mentioned above, I am not an architecture buff, so I would not be able to write a lot about the architecture of the temple. However, enjoy some more photos.</p>






<div class="gallery caption-position-bottom caption-effect-slide hover-effect-zoom hover-transition" itemscope itemtype="http://schema.org/ImageGallery">
        
  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/KknscQQm.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/KknscQQm.jpg" alt="A Ganesha statue"/>
        </div>
        <a href="/images/2019-06-29/KknscQQ.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/00jHoa8m.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/00jHoa8m.jpg" alt="Cravings on walls"/>
        </div>
        <a href="/images/2019-06-29/00jHoa8.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/jb3McxQm.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/jb3McxQm.jpg" alt="Cravings on walls"/>
        </div>
        <a href="/images/2019-06-29/jb3McxQ.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/r1unZAgm.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/r1unZAgm.jpg" alt="Ruin"/>
        </div>
        <a href="/images/2019-06-29/r1unZAg.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/BB759kWm.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/BB759kWm.jpg" alt="A Hindu deity"/>
        </div>
        <a href="/images/2019-06-29/BB759kW.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/Tw9YP1Em.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/Tw9YP1Em.jpg" alt="A pillar in the center of temple"/>
        </div>
        <a href="/images/2019-06-29/Tw9YP1E.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/8bLIIC5m.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/8bLIIC5m.jpg" alt="A Hindu deity"/>
        </div>
        <a href="/images/2019-06-29/8bLIIC5.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/lPVAP1Hm.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/lPVAP1Hm.jpg" alt="Cravings on walls"/>
        </div>
        <a href="/images/2019-06-29/lPVAP1H.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/WQGjwurm.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/WQGjwurm.jpg" alt="Another temple"/>
        </div>
        <a href="/images/2019-06-29/WQGjwur.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/8JDPQZ7m.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/8JDPQZ7m.jpg" alt="Footprints"/>
        </div>
        <a href="/images/2019-06-29/8JDPQZ7.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/jUYDuQdm.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/jUYDuQdm.jpg" alt="Another temple"/>
        </div>
        <a href="/images/2019-06-29/jUYDuQd.jpg" itemprop="contentUrl"></a>
    </figure>
</div>


</div>
<p>After this temple, we continued our journey to Chikmagalur. We had booked a homestay option. The name of the homestay was Sunshine Palm Retreat, if I recall correctly. It was one of the best stays I have experienced on any trip till now. It was not crowded, the staff was co-operative, and the ambiance was excellent.</p>



<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2019-06-29/JUTwVEN.jpg" alt="The Silver Palm Retreat Homestay"/>
        </div>
        <a href="/images/2019-06-29/JUTwVEN.jpg" itemprop="contentUrl"></a>
            <figcaption>
                    <p>The Silver Palm Retreat Homestay</p>
            </figcaption>
    </figure>
</div>

<p>On the evening of Saturday, we decided to go for our second destination of the day - the so-called <em>shooting point</em>. When we searched on Google maps, we found one location with a similar name. We started driving in that direction. However, it turned out that we were going to the wrong place. We tried asking locals, but language was an issue. Most of the signboards are also in Kannada only. Somehow we ended up getting on the right track and reached the correct location on time. After reaching there, Google Maps shows that the place is called Bagmane Sunrise Point. Even this name does not seem to be right.</p>
<p>As soon we reached there, I realized that all the efforts that we put in reaching there were worthwhile. It was an open ground area on top of a small hill at one end of a small village. I started roaming here and there, enjoying the serenity of nature. I am not a very photogenic person, so I prefer to click pictures of objects and nature more than standing in front of a camera at different angles.</p>






<div class="gallery caption-position-bottom caption-effect-slide hover-effect-zoom hover-transition" itemscope itemtype="http://schema.org/ImageGallery">
        
  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/CcvBJyEm.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/CcvBJyEm.jpg" alt="nature"/>
        </div>
        <a href="/images/2019-06-29/CcvBJyE.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/ttrEWMPm.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/ttrEWMPm.jpg" alt="nature"/>
        </div>
        <a href="/images/2019-06-29/ttrEWMP.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/c84g6tXm.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/c84g6tXm.jpg" alt="nature"/>
        </div>
        <a href="/images/2019-06-29/c84g6tX.jpg" itemprop="contentUrl"></a>
    </figure>
</div>


</div>
<p>We spent around 1.5 hours there and then came back. <a href="https://www.cricbuzz.com/live-cricket-scorecard/20264/ind-vs-afg-match-28-icc-cricket-world-cup-2019">India vs. Afghanistan</a> cricket match was live on TV, and we fixed ourselves in front of the TV for the next 4 hours. India somehow won that match. Thank God!</p>
<p>The next day, it was raining from the early morning. We did not want to take any risk by driving on the steep and narrow zig-zag roads. So we dropped our plan to go to Butter Milk Waterfalls and instead decided to go to Mullayanagiri peaks as our last destination. We again lost our way, but somehow managed to reach the place.</p>
<p>It was drizzling there. However, we were at such a high altitude that we had to bring our sweaters out. Surprisingly, I found vendors selling Maggi there. I was not expecting the taste to be good, but I was wrong. For that sort of place, the Maggi was delicious.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/F9SpC8nFF0A" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>Despite the weather conditions, we decided to climb to the top of the hill. As we were going up, the weather was turning more and bleaker. Out of five of us, only three managed to reach the top, including me. The view from the top of the hill was just amazing. Wherever I saw, I saw just the mountain mist. My clothes were wet, and my spectacles were completely covered in fog.</p>






<div class="gallery caption-position-bottom caption-effect-slide hover-effect-zoom hover-transition" itemscope itemtype="http://schema.org/ImageGallery">
        
  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/WSP3EE6m.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/WSP3EE6m.jpg" alt="An inscription"/>
        </div>
        <a href="/images/2019-06-29/WSP3EE6.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/PwLILXbm.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/PwLILXbm.jpg" alt="Ganesha statue on the highest peak"/>
        </div>
        <a href="/images/2019-06-29/PwLILXb.jpg" itemprop="contentUrl"></a>
    </figure>
</div>

  


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2019-06-29/E6Vd1nXm.jpg');">
            <img itemprop="thumbnail" src="/images/2019-06-29/E6Vd1nXm.jpg" alt="Temple on the peak"/>
        </div>
        <a href="/images/2019-06-29/E6Vd1nX.jpg" itemprop="contentUrl"></a>
    </figure>
</div>


</div>
<p>I shot a video when we were coming down from the hilltop.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/So_UD2tpRic" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<!-- raw HTML omitted -->
<hr>
<p>To summarise, the timing of this trip was not appropriate, but I do not regret it. I have gone to other hill stations after the monsoons get over, but it is a different experience altogether to go in a rainy season. Chikmagalur is worth more than one visit. Do try to go at an appropriate time if you want to visit more places.</p>
<p>Thanks for reading. Cheers 😄</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/travelouge" term="travelouge" label="Travelouge" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/trip" term="trip" label="Trip" />
                             
                                <category scheme="https://yashagarwal.in/tags/hill-stations" term="hill-stations" label="Hill Stations" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Go + gRPC + OPA - A Perfect Union - Part 3]]></title>
            <link href="https://yashagarwal.in/posts/2019/02/go-grpc-opa-a-perfect-union-part-3/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2019/02/go-grpc-opa-a-perfect-union-part-2/?utm_source=atom_feed" rel="related" type="text/html" title="Go &#43; gRPC &#43; OPA - A Perfect Union - Part 2" />
                <link href="https://yashagarwal.in/posts/2019/02/go-grpc-opa-a-perfect-union-part-1/?utm_source=atom_feed" rel="related" type="text/html" title="Go &#43; gRPC &#43; OPA - A Perfect Union - Part 1" />
            
                <id>https://yashagarwal.in/posts/2019/02/go-grpc-opa-a-perfect-union-part-3/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2019-02-18T06:47:15+05:30</published>
            <updated>2019-02-18T06:47:15+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>I finished my last <a href="/posts/2019/02/go-grpc-opa-a-perfect-union-part-2/">post</a> with the following issue -</p>
<blockquote>
<p>Now, here one problem arises, how to make sure that the search results will not return any book which the user is not
authorized to access. We will solve this problem using OPA in the next and last post of this series.</p>
</blockquote>
<p>Let&rsquo;s solve this issue now. We will use OPA&rsquo;s declarative language, Rego, to implement policies which will decide on the
basis of some user-provided data, which all objects are to be returned to the user.</p>
<p>We will also define a list of all the users who are part of this library. Here we are hardcoding this data, as I did
not want to waste my time in implementing a user registration service, but this functionality is not very important from
our point of view. We will require only one field from this users data - the <code>user_type</code> field. This field will
determine what the access level for the user is. We have already added the <code>access_level</code> field in the <code>Book</code> definition
of our proto file.</p>
<p>When the user wants to search for a particular book, it will provide its <code>user_type</code> the ISBN of the book to our service. Our service
will take that ISBN and pass it to the OPA server. OPA server already has the <code>Book</code> data and the <code>User</code> data. Now it has
the required ISBN to query the Book data. The Rego policy will query the Book data by ISBN. It will also
check for the <code>access_level</code> condition. Moreover, after this operation, it will return the resultant set of books that satisfy both the requirements.</p>
<p>Here is the Rego policy -</p>
<div class="highlight"><pre class="chroma"><code class="language-ruby" data-lang="ruby"><span class="n">package</span> <span class="n">library</span>

<span class="n">import</span> <span class="n">data</span><span class="o">.</span><span class="n">books</span>
<span class="n">import</span> <span class="n">data</span><span class="o">.</span><span class="n">users</span>
<span class="n">import</span> <span class="n">input</span>

<span class="n">search_books</span><span class="o">[</span><span class="n">book</span><span class="o">]</span> <span class="p">{</span>
  <span class="n">input</span><span class="o">.</span><span class="n">book</span><span class="o">.</span><span class="n">isbn</span> <span class="o">==</span> <span class="n">books</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">isbn</span>
  <span class="n">input</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">user_type</span> <span class="o">&gt;=</span> <span class="n">books</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">access_level</span>
  <span class="n">book</span> <span class="o">=</span> <span class="n">books</span><span class="o">[</span><span class="n">i</span><span class="o">]</span>
<span class="p">}</span>

<span class="n">list_all_books</span><span class="o">[</span><span class="n">books</span><span class="o">[</span><span class="n">i</span><span class="o">]]</span> <span class="p">{</span>
  <span class="n">input</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">user_type</span> <span class="o">&gt;=</span> <span class="n">books</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">access_level</span>
<span class="p">}</span></code></pre></div>
<p>The user data is <a href="https://github.com/yashhere/go-library-service/blob/master/OPA/users.json">here</a> and the book data is <a href="https://github.com/yashhere/go-library-service/blob/master/add_books.sh">here</a>.</p>
<p>A sample <code>input</code> request is shown below -</p>
<div class="highlight"><pre class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
    <span class="nt">&#34;input&#34;</span><span class="p">:</span> <span class="p">{</span>
        <span class="nt">&#34;book&#34;</span><span class="p">:</span> <span class="p">{</span>
            <span class="nt">&#34;isbn&#34;</span><span class="p">:</span> <span class="s2">&#34;1128959038&#34;</span>
        <span class="p">},</span>
        <span class="nt">&#34;user&#34;</span><span class="p">:</span> <span class="p">{</span>
            <span class="nt">&#34;user_type&#34;</span><span class="p">:</span> <span class="mi">3</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span></code></pre></div>
<p>The <code>input</code> is the data that the user is providing. In <code>search_books</code> function, the input ISBN is matched with the ISBN
of all books one by one. Then the resultant set of books is filtered by <code>user_type</code> and <code>access_level</code> (these
two fields are essentially the same). In the last, the resultant set of books is assigned to the variable <code>book</code> which
will be returned to the gRPC service.</p>
<p>The <code>list_all_books</code> function is implemented similarly. The only difference is that we do not need to filter the books
by ISBN. Filtering by <code>access_level</code> is enough.</p>
<p>Now our library service is completed. It is a very basic service. The intention was to show that the decision-making process can be offloaded to the OPA to reduce the complexity of the services. In this example, the advantages might not
be obvious, but in large production environments, where many services are running, it can make a significant
difference.</p>
<p>The code for this series can be found on my <a href="https://github.com/yashhere/go-library-service">Github</a> account.</p>
<p>I hope you liked the article. Share your views and suggestions in the comments.</p>
<p>Thanks for reading. Cheers :)</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/series/go-&#43;-grpc-&#43;-opa" term="go-&#43;-grpc-&#43;-opa" label="Go &#43; gRPC &#43; OPA" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/grpc" term="grpc" label="GRPC" />
                             
                                <category scheme="https://yashagarwal.in/tags/opa" term="opa" label="OPA" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Go + gRPC + OPA - A Perfect Union - Part 2]]></title>
            <link href="https://yashagarwal.in/posts/2019/02/go-grpc-opa-a-perfect-union-part-2/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2019/02/go-grpc-opa-a-perfect-union-part-1/?utm_source=atom_feed" rel="related" type="text/html" title="Go &#43; gRPC &#43; OPA - A Perfect Union - Part 1" />
            
                <id>https://yashagarwal.in/posts/2019/02/go-grpc-opa-a-perfect-union-part-2/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2019-02-17T14:44:56+05:30</published>
            <updated>2019-02-17T14:44:56+05:30</updated>
            
            
            <content type="html"><![CDATA[



    

    
    

    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.css" integrity="sha256-sCl5PUOGMLfFYctzDW3MtRib0ctyUvI9Qsmq2wXOeBY=" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/default-skin/default-skin.min.css" integrity="sha256-BFeI1V+Vh1Rk37wswuOYn5lsTcaU96hGaI7OUVCLjPc=" crossorigin="anonymous" />

    
    <link rel="stylesheet" href="/css/photoswipe.min.d780348a887d97b4d6cc664301a2941706e4a02aeb1533524fcce3b7b9b64b4f.css">

    

    
    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
        
        <div class="pswp__bg"></div>
        
        <div class="pswp__scroll-wrap">
            
            <div class="pswp__container">
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
            </div>
            
            <div class="pswp__ui pswp__ui--hidden">
                <div class="pswp__top-bar">
                    
                    <div class="pswp__counter"></div>
                    <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                    <button class="pswp__button pswp__button--share" title="Share"></button>
                    <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                    <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>
                    
                    
                    <div class="pswp__preloader">
                        <div class="pswp__preloader__icn">
                            <div class="pswp__preloader__cut">
                                <div class="pswp__preloader__donut"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                    <div class="pswp__share-tooltip"></div>
                </div>
                <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
                </button>
                <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
                </button>
                <div class="pswp__caption">
                    <div class="pswp__caption__center"></div>
                </div>
            </div>
        </div>
    </div>

<p>In the last <a href="/posts/2019/02/go-grpc-opa-a-perfect-union-part-1/">post</a>, we discussed about the structure of our library
application. In this post, we will define the data definitions using protobuf, and then we will use these definitions to
create a Go service. We will also add a REST interface to the service. So let&rsquo;s get started.</p>
<h2 id="defining-proto-definitions">Defining Proto Definitions</h2>
<p>gRPC uses protocol buffers for serializing structured data. To define the structure of the data that you want to serialize, we use a <em>proto</em> file - it is a simple text file that contains all the logical pieces of your data in the form of <em>messages</em>, and the methods that will be called over the network. To know more about the syntax of proto files, visit <a href="https://grpc.io/docs/guides/">this</a> link.</p>
<p>I have defined the following proto file -</p>
<div class="highlight"><pre class="chroma"><code class="language-proto" data-lang="proto"><span class="n">syntax</span> <span class="o">=</span> <span class="s">&#34;proto3&#34;</span><span class="p">;</span><span class="err">
</span><span class="err"></span><span class="kn">package</span> <span class="nn">library</span><span class="p">;</span><span class="err">
</span><span class="err"></span><span class="k">import</span> <span class="s">&#34;google/api/annotations.proto&#34;</span><span class="p">;</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="kd">service</span> <span class="n">LibraryService</span> <span class="p">{</span><span class="err">
</span><span class="err"></span>  <span class="k">rpc</span> <span class="n">ListAllBooks</span><span class="p">(</span><span class="n">QueryFormat</span><span class="p">)</span> <span class="k">returns</span> <span class="p">(</span><span class="n">Books</span><span class="p">)</span> <span class="p">{</span><span class="err">
</span><span class="err"></span>    <span class="k">option</span> <span class="p">(</span><span class="n">google.api.http</span><span class="p">)</span> <span class="o">=</span> <span class="p">{</span><span class="err">
</span><span class="err"></span>      <span class="n">post</span> <span class="o">:</span> <span class="s">&#34;/listBooks&#34;</span><span class="err">
</span><span class="err"></span>      <span class="n">body</span> <span class="o">:</span> <span class="s">&#34;*&#34;</span><span class="err">
</span><span class="err"></span>    <span class="p">};</span><span class="err">
</span><span class="err"></span>  <span class="p">};</span><span class="err">
</span><span class="err"></span>  <span class="k">rpc</span> <span class="n">AddBook</span><span class="p">(</span><span class="n">QueryFormat</span><span class="p">)</span> <span class="k">returns</span> <span class="p">(</span><span class="n">Response</span><span class="p">)</span> <span class="p">{</span><span class="err">
</span><span class="err"></span>    <span class="k">option</span> <span class="p">(</span><span class="n">google.api.http</span><span class="p">)</span> <span class="o">=</span> <span class="p">{</span><span class="err">
</span><span class="err"></span>      <span class="n">post</span> <span class="o">:</span> <span class="s">&#34;/addBook&#34;</span><span class="err">
</span><span class="err"></span>      <span class="n">body</span> <span class="o">:</span> <span class="s">&#34;*&#34;</span><span class="err">
</span><span class="err"></span>    <span class="p">};</span><span class="err">
</span><span class="err"></span>  <span class="p">};</span><span class="err">
</span><span class="err"></span>  <span class="k">rpc</span> <span class="n">SearchBook</span><span class="p">(</span><span class="n">QueryFormat</span><span class="p">)</span> <span class="k">returns</span> <span class="p">(</span><span class="n">Response</span><span class="p">)</span> <span class="p">{</span><span class="err">
</span><span class="err"></span>    <span class="k">option</span> <span class="p">(</span><span class="n">google.api.http</span><span class="p">)</span> <span class="o">=</span> <span class="p">{</span><span class="err">
</span><span class="err"></span>      <span class="n">post</span> <span class="o">:</span> <span class="s">&#34;/searchBook&#34;</span><span class="err">
</span><span class="err"></span>      <span class="n">body</span> <span class="o">:</span> <span class="s">&#34;*&#34;</span><span class="err">
</span><span class="err"></span>    <span class="p">};</span><span class="err">
</span><span class="err"></span>  <span class="p">};</span><span class="err">
</span><span class="err"></span><span class="p">}</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="c1">// the library
</span><span class="c1"></span><span class="kd">message</span> <span class="nc">Library</span> <span class="p">{</span> <span class="n">Books</span> <span class="n">books</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="kd">message</span> <span class="nc">Books</span> <span class="p">{</span> <span class="k">repeated</span> <span class="n">Book</span> <span class="n">books</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="c1">// metadata about a book
</span><span class="c1"></span><span class="kd">message</span> <span class="nc">Book</span> <span class="p">{</span><span class="err">
</span><span class="err"></span>  <span class="kt">string</span> <span class="n">title</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span><span class="err">
</span><span class="err"></span>  <span class="kt">string</span> <span class="n">author</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span><span class="err">
</span><span class="err"></span>  <span class="kt">string</span> <span class="n">isbn</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span><span class="err">
</span><span class="err"></span>  <span class="kt">int32</span> <span class="n">no_of_copies</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span><span class="err">
</span><span class="err"></span>  <span class="kt">int32</span> <span class="n">access_level</span> <span class="o">=</span> <span class="mi">6</span><span class="p">;</span><span class="err">
</span><span class="err"></span><span class="p">}</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="c1">// details about a user
</span><span class="c1"></span><span class="kd">message</span> <span class="nc">User</span> <span class="p">{</span><span class="err">
</span><span class="err"></span>  <span class="kd">enum</span> <span class="n">UserType</span> <span class="p">{</span><span class="err">
</span><span class="err"></span>    <span class="c1">// https://github.com/golang/protobuf/issues/258
</span><span class="c1"></span>    <span class="n">GARBAGE</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span><span class="err">
</span><span class="err"></span>    <span class="n">Student</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span><span class="err">
</span><span class="err"></span>    <span class="n">Administration</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span><span class="err">
</span><span class="err"></span>    <span class="n">Faculty</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span><span class="err">
</span><span class="err"></span>  <span class="p">}</span><span class="err">
</span><span class="err">
</span><span class="err"></span>  <span class="kt">string</span> <span class="n">name</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span><span class="err">
</span><span class="err"></span>  <span class="kt">int32</span> <span class="n">id_no</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span><span class="err">
</span><span class="err"></span>  <span class="n">UserType</span> <span class="n">user_type</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span><span class="err">
</span><span class="err"></span><span class="p">}</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="kd">message</span> <span class="nc">QueryFormat</span> <span class="p">{</span><span class="err">
</span><span class="err"></span>  <span class="n">Book</span> <span class="n">book</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span><span class="err">
</span><span class="err"></span>  <span class="n">User</span> <span class="n">user</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span><span class="err">
</span><span class="err"></span><span class="p">}</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="kd">message</span> <span class="nc">Response</span> <span class="p">{</span><span class="err">
</span><span class="err"></span>  <span class="kt">string</span> <span class="n">action</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span><span class="err">
</span><span class="err"></span>  <span class="kt">int32</span> <span class="n">status</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span><span class="err">
</span><span class="err"></span>  <span class="kt">string</span> <span class="kd">message</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span><span class="err">
</span><span class="err"></span>  <span class="k">oneof</span> <span class="n">value</span> <span class="p">{</span><span class="err">
</span><span class="err"></span>    <span class="n">Book</span> <span class="n">book</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span><span class="err">
</span><span class="err"></span>    <span class="n">User</span> <span class="n">user_data</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span><span class="err">
</span><span class="err"></span>  <span class="p">}</span><span class="err">
</span><span class="err"></span><span class="p">}</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="kd">message</span> <span class="nc">Empty</span> <span class="p">{}</span></code></pre></div>
<p>To compile it, run the following commands -</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">protoc -I/usr/local/include -I. <span class="se">\
</span><span class="se"></span>-I<span class="nv">$GOPATH</span>/src <span class="se">\
</span><span class="se"></span>-I<span class="nv">$GOPATH</span>/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis <span class="se">\
</span><span class="se"></span>--go_out<span class="o">=</span><span class="nv">plugins</span><span class="o">=</span>grpc:. <span class="se">\
</span><span class="se"></span>api/library.proto</code></pre></div>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">protoc -I/usr/local/include -I. <span class="se">\
</span><span class="se"></span>  -I<span class="nv">$GOPATH</span>/src <span class="se">\
</span><span class="se"></span>  -I<span class="nv">$GOPATH</span>/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis <span class="se">\
</span><span class="se"></span>  --grpc-gateway_out<span class="o">=</span><span class="nv">logtostderr</span><span class="o">=</span>true:. <span class="se">\
</span><span class="se"></span>  api/library.proto</code></pre></div>
<p>It will generate corresponding Golang definitions of the messages and services defined in the Proto file. These
definitions can be used by the server and client stubs to communicate with each other.</p>
<h2 id="implementation-of-go-service">Implementation of Go service</h2>
<p>Now we can start implementing the code for our services <code>AddBook()</code>, <code>ListAllBooks()</code> and <code>SearchBook()</code>. It is going to
be a very naive implementation of a library system, but it will be sufficient to learn all the concepts.</p>
<p>My implementation of the server stub is hosted
<a href="https://github.com/yashhere/go-library-service/blob/master/pkg/librarylib/server.go">here</a>. A basic flow diagram of
this implementation will look like this -</p>



    <link rel="stylesheet" href="/css/hugo-easy-gallery.css">
    


<div class="box fancy-figure caption-position-bottom caption-effect-appear" style="max-width:650px" itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2019-02-17/OPA_Service_Flow_Diagram.jpeg#center" alt="Architecture"/>
        </div>
        <a href="/images/2019-02-17/OPA_Service_Flow_Diagram.jpeg#center" itemprop="contentUrl"></a>
    </figure>
</div>

<p>The gRPC server will listen on port <code>:50051</code>, and a REST HTTP server will listen on port <code>:8181</code>. The OPA server is
running on port <code>:8182</code>. The REST server is
implemented using <a href="https://github.com/grpc-ecosystem/grpc-gateway">gRPC-Gateway</a>. There are three methods - <code>AddBook()</code>,
<code>ListAllBooks()</code>, and <code>SearchBook()</code>. These methods can be called using either gRPC methods or using the REST endpoints
<code>/addBook</code>, <code>/listBooks</code> and <code>/searchBook</code>. By design, the library gRPC service will not implement the authentication
part of the service. The main purpose of using gRPC here is to provide a scalable and secure medium where all the
communication between client and server is happening in binary format, which is slightly more secure than the
traditional mediums. In the current form, this gRPC server will accept requests from everyone and execute the desired
functions. That is not desirable. What if a student tries to add a book to the library. Only Admins should be allowed to
execute such functions. What if someone who is not a student of the University tries to access the service. How to stop
them?</p>
<p>There are two steps to solve this issue -</p>
<ol>
<li>
<p><strong>Authentication</strong> - It mainly deals with the question - who are you? It is a way to gain access to the system by verifying your identity. In our case, a user will provide its username and password to access the library service.
Without this authentication, the user will not be able to access the system. We will not be implementing authentication
functionality in our application.</p>
</li>
<li>
<p><strong>Authorization</strong> - It deals with the question - which resources are you allowed to use? OPA can be used here to define various rights based on the access levels of the users.</p>
</li>
</ol>
<p>If you have noticed, I have defined an <code>access_level</code> field in the proto definition of the <code>Book</code>. This field will tell
us what is the minimum access level required for a user to access this book.</p>
<p>Again, in the proto definition of the <code>User</code>, I have defined a <code>user_type</code> field. This field will serve as an indicator of
the access rights of the user. In the real world, these access rights will be decided after the user has authenticated
herself to
the system, but here, we will hardcode the access rights.</p>
<p>So, only users with access rights equal to <code>Administration</code> will be allowed to add books to the system. Here we do not
care who the user is. If the user is supplying the correct access right, she will be allowed to operate.
The authentication logic in real-world scenarios will determine the <em>who</em> part.</p>
<p>There are some books in the library, which have access rights equal to that of a <code>Faculty</code>. It means that only faculties
will be allowed to access those books. The students will not be able to access these books, even while searching for
books using ISBN. This kind of mechanism can be implemented using OPA very quickly. We will see the implementation of the OPA
part in the next post.</p>
<p>While querying the service, users are required to supply their identity (at least <code>user_type</code>) and the book ISBN if
they are searching for some book. The administrators are supposed to provide the name, author, access level, number of copies, and ISBN while adding the books. I have not added the error checking functionality in the code, but it should be
easy enough to implement such functionality.</p>
<p>The <a href="https://github.com/yashhere/go-library-service/blob/master/cmd/main.go">main.go</a> file is the starting point of this service. It will spawn two servers in two Go Routines. Ideally, some synchronization mechanisms should be implemented in the code to avoid race conditions in some cases - for example, what will happen if two or more clients are trying to add the same book simultaneously. Here in our case, nothing serious
will happen, as OPA will take only one book per ISBN, and discard all the other books with the same ISBN even if the other
metadata is different (I designed the service in this way to keep the code easy enough to understand), but if there are
other operations like DeleteBook and IssueBook, then the race conditions can cause issues.</p>
<p>In the <code>AddBook()</code> function, the user provided book details will be sent to the OPA server using a REST call. OPA will
store this information in its in-memory store at a unique place determined by the ISBN of the book. In actual cases, the data should be stored in some persistent
storage, such as a DB. OPA will take the information from the DB. Again, to keep the implementation easy enough to
understand, we are not using any such persistent storage. If any other book with different metadata but the same ISBN comes,
then OPA will overwrite the existing book with the new one.</p>
<p>In the <code>SearchBook()</code> function, the user will provide the ISBN of the desired book. The gRPC service will call
the OPA using REST API and find if any such book exists or not.</p>
<p>The <code>ListAllBooks()</code> is different in the way that it does not need any ISBN.</p>
<p>Now, here one problem arises, how to make sure that the search results will not return any book which the user is not
authorized to access. We will solve this problem using OPA in the next and last post of this series.</p>
<p>I hope that this post was helpful. If you have any doubts or want to say anything else, please comment. It will be a great
motivation and appreciation for me.</p>
<p>Thanks for reading. Cheers 😄</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/series/go-&#43;-grpc-&#43;-opa" term="go-&#43;-grpc-&#43;-opa" label="Go &#43; gRPC &#43; OPA" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/grpc" term="grpc" label="GRPC" />
                             
                                <category scheme="https://yashagarwal.in/tags/opa" term="opa" label="OPA" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Go + gRPC + OPA - A Perfect Union - Part 1]]></title>
            <link href="https://yashagarwal.in/posts/2019/02/go-grpc-opa-a-perfect-union-part-1/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2019/02/go-grpc-opa-a-perfect-union-part-1/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2019-02-10T14:29:08+05:30</published>
            <updated>2019-02-10T14:29:08+05:30</updated>
            
            
            <content type="html"><![CDATA[<p><strong>TL;DR</strong> &ndash; In a series of blog posts, I will be implementing a simple library application supporting both gRPC and REST interfaces using Go, gRPC, and
OPA. My approach might not be the most optimal one, but I am learning these technologies currently. Please give your
valuable suggestions and be kind :)</p>
<p>I have been learning the basics of microservices and Golang lately. On the work front, I got a chance to work on Go, gRPC, and Open
Policy Agent as my first professional project. In this post, I will be demonstrating what I learned in the last few months.
We will be implementing a simple gRPC based library service, which will be able to serve
requests using both gRPC and REST calls. It will also incorporate the Open Policy Agent (OPA) to provide the authorization
to users. Let&rsquo;s begin with a quick introduction to gRPC and OPA.</p>
<h2 id="grpc">gRPC</h2>
<p>gRPC is Google&rsquo;s implementation for Remote Procedure Calls(RPC). RPC is mainly used in building scalable distributed systems. While REST has a limited set of verbs, RPC can define any function calls, including synchronous and asynchronous calls.</p>
<p>In gRPC, the client can make procedure calls as if the requests are made to some local function. However, the underlying client
stub (auto-generated) will send the call to the server. The server will have a similar server stub, which will be able to
handle the requests coming from the client. The server will send the response to the client using similar mechanisms
over the network. All the communication is serialized to binary format, so it is ideal for distributed systems as binary format
tends to be on the faster side for large amounts of data.</p>
<p>For more info about gRPC, visit the official <a href="https://grpc.io/">website</a>.</p>
<h2 id="open-policy-agent-opa">Open Policy Agent (OPA)</h2>
<p>OPA gives us the ability to define a fine-grained policy control mechanism. However, I think the most critical benefit of
using OPA is that it gives you the ability to decouple your services and the definition of policies from the enforcement
of it.</p>
<p>There are mainly two parts of OPA -</p>
<ol>
<li>A JSON document store where you can define anything from your users, access roles,
permission levels, etc.</li>
<li>A policy is written in a declarative language. This policy gives you new derivative data from the original JSON document store evaluated by the policy. The declarative language is called Rego, and these policies are also documents that generate results according to the defined policy. The users query these results.</li>
</ol>
<p>This info will be sufficient for our use case. More info about it can be found at the official
<a href="https://www.openpolicyagent.org/">website</a>.</p>
<h2 id="the-skeleton-of-our-application">The skeleton of our Application</h2>
<p>We will be building a command-line library application. This application will support adding, deleting, searching, issuing, and returning of
books. There are three types of users &ndash; student, faculties, and staff. Not all users have a similar kind of access level. There are some books which are only reserved for students, and some are exclusively reserved for faculties and so on.</p>
<p>I think emulating the <a href="https://harrypotter.fandom.com/wiki/Hogwarts_Library">library</a> at Hogwarts will be a good idea here. Students and ordinary people were not allowed inside
the restricted section of the library. We will emulate that restricted section using the authorization mechanisms
provided by OPA.</p>
<p>The gRPC protocol will handle the communications part in our app, but not everyone in Hogwarts is using gRPC. Wizards
are still in love with REST (not a bad thing, though), so we will provide them alike the REST interface to interact
with our service. We do not want to face the wrath of the wizards, after all.</p>
<p>OPA can either be used as a standalone application or be embedded in the Go service as well. Both approaches have
their pros and cons. I have decided to use OPA as an independent service, as it will be more comfortable that way for us to push
authorization data and policies to it if such a need arises in the future.</p>
<p>One more issue remains - where to store the added books. Shall we persist them? In practical scenarios, persistence is
always a good idea, but here I do not want to complicate things too much. We could use any Object storage servers (e.g., Minio) to
store the JSON data generated from our gRPC methods, but that will unnecessarily add complexity to our simple scenario.
Wizards do not like complicate stuff, you know!</p>
<p>In the next posts, we will define our gRPC proto file and build the Go service around it. Then we will add a REST
interface to our service for simple CRUD operations in our application. Then we will add OPA authorization to restrict
our users from adding and viewing books which they are not supposed to access.</p>
<p>Thank you for reading. Cheers 😊</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/series/go-&#43;-grpc-&#43;-opa" term="go-&#43;-grpc-&#43;-opa" label="Go &#43; gRPC &#43; OPA" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/grpc" term="grpc" label="GRPC" />
                             
                                <category scheme="https://yashagarwal.in/tags/opa" term="opa" label="OPA" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[2018 - Year in Review]]></title>
            <link href="https://yashagarwal.in/posts/2018/12/2018-year-in-review/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2018/12/2018-year-in-review/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-12-31T22:02:08+05:30</published>
            <updated>2018-12-31T22:02:08+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>The year 2018 has been quite a roller coaster year for me. I saw many ups and downs, many successes, and many failures faced many
challenges on the personal front and struggled to keep myself on track. I have been working hard on improving my lifestyle
(not materialistically) for the last few years, and the benefits have begun to show up now. This year was a pinnacle in
that aspect. A lot of micro changes happened in my life this year.</p>
<p>I often read my blog posts from last year. Reading these posts give me a good feeling about
the improvements that I could bring in myself during the previous three years. Writing year <a href="/posts/2017/12/2017-the-best-till-now/">reviews</a> and posts like <a href="/posts/2018/08/beginning-a-new-journey/">this</a>,
<a href="/posts/2018/06/mistakes-that-i-made-in-nitc/">this</a> and <a href="/posts/2018/03/deactivated-my-facebook-account/">this</a> serve
as documents of my deeds from past for my future. It helps me in not repeating the same mistakes. As a human being, I
cannot run away from committing mistakes, but I can always make sure that I do not repeat the same mistakes.</p>
<blockquote>
<p>Those who cannot remember the past are condemned to repeat it.</p>
</blockquote>
<h2 id="blogging--writing">Blogging &amp; Writing</h2>
<p>I had set a target to write 15 blog articles at the beginning of this year. In the end, I managed to achieve this goal.
I managed to write 17 blog posts and six book reviews. My blog managed to get much traffic this year, mainly thanks to some of my technical posts.</p>
<p>I got some good responses from people about my technical blog posts. My aim to start writing technical posts was to keep an account
of what I learn. It feels very nice when I go back to my posts to read how I did something last time. So I consider
myself successful that at least I could benefit from my writing.</p>
<p>Though, in 2018, after leaving college, the frequency
of technical posts on this blog has dipped to almost zero. It is probably because I am not exploring enough after
joining the corporate world. In
college, I used Linux all the time, but now it is nearly four months since I last booted Linux in my system. I think it
is yet another phase of my learning, and I will take some time adjusting with this. I have some <em>lovely</em> technical post ideas, and I hope that I will be able to articulate them soon next year.</p>
<h2 id="reading">Reading</h2>
<p>For most of the year, I did not pay any heed to books, and I was never very interested in buying
books. However, at the end of October, I purchased a Kindle Paperwhite. I
consider this to be the <a href="https://twitter.com/yash__here/status/1075396841267752963">best</a> investment done by me this year. Since buying it, I have read eight books. I finally managed to
finish my <a href="https://www.goodreads.com/user_challenges/10979019">Goodreads reading challenge</a> of 10 books. Although I
could not finish one book and included one <a href="https://www.goodreads.com/book/show/31284204-the-millionaire-booklet">audiobook</a> to this challenge to complete my target on time.</p>
<p>This year, I discovered my interest in Economics. I am reading some economics-related literature lately. It is a subtle shift
from my all-CS life. I plan to read a lot of economics-related books in 2019 to gain more expertise in this domain. But
I still need to figure out a way to stop it from interfering with my first (or second, maybe!) love.</p>
<p>Some of my favorite reads from this year (not in any particular order) -</p>
<ul>
<li>
<p><strong>Technology / CS</strong></p>
<ol>
<li><a href="https://danluu.com/branch-prediction/">Branch Prediction</a></li>
<li><a href="http://infolab.stanford.edu/~backrub/google.html">The Anatomy of a Large-Scale Hypertextual Web Search Engine</a></li>
<li><a href="https://chrisdown.name/2018/01/02/in-defence-of-swap.html">In defence of swap: common misconceptions</a></li>
<li><a href="https://jvns.ca/blog/2018/03/05/things-ive-learned-networking/">A few things I&rsquo;ve learned about computer networking</a></li>
<li><a href="https://blog.cloudflare.com/using-go-as-a-scripting-language-in-linux/">Using Go as a scripting language in Linux</a></li>
<li><a href="https://rcoh.me/posts/cache-oblivious-datastructures/">Maximize Cache Performance with this One Weird Trick: An Introduction to Cache-Oblivious Data
Structures</a></li>
<li><a href="https://www.cl.cam.ac.uk/~mgk25/mswish/ut-rtc.html">IBM PC Real Time Clock should run in UT</a></li>
<li><a href="http://c-faq.com/decl/spiral.anderson.html">The ``Clockwise/Spiral Rule&rsquo;'</a></li>
<li><a href="https://nvie.com/posts/a-successful-git-branching-model/">A successful Git branching model</a></li>
<li><a href="http://mattjolson.github.io/2017/12/07/benefits-of-a-classical-education.html">So, should you do a CS degree?</a></li>
<li><a href="http://beza1e1.tuxen.de/articles/accidentally_turing_complete.html">Accidentally Turing-Complete</a></li>
</ol>
<!-- raw HTML omitted -->
<ol start="13">
<li><a href="https://www.xda-developers.com/apple-new-iphone-xr-influence-android-trends">How Apple’s New Lineup and iPhone XR will Influence Android Trends, for Better and
Worse</a></li>
<li><a href="https://scotthelme.co.uk/perfect-forward-secrecy/">Perfect Forward Secrecy - An Introduction</a></li>
<li><a href="https://blogs.dropbox.com/tech/2012/04/zxcvbn-realistic-password-strength-estimation/">zxcvbn: realistic password strength
estimation</a></li>
<li><a href="https://askubuntu.com/q/638382">How can I turn photos of paper documents into a scanned document?</a></li>
<li><a href="https://medium.com/swlh/chatbots-were-the-next-big-thing-what-happened-5fc49dd6fa61">Chatbots were the next big thing: what
happened?</a></li>
<li><a href="https://arstechnica.com/gadgets/2018/07/the-ai-revolution-has-spawned-a-new-chips-arms-race/">The AI revolution has spawned a new chips arms
race</a></li>
<li><a href="https://www.theverge.com/2018/6/13/17446660/mozilla-firefox-pocket-recommendations-ceo-nate-weiner-interview-converge-podcast">How Firefox is using Pocket to try to build a better news feed than
Facebook</a></li>
<li><a href="https://www.diamandis.com/blog/countdown-to-the-singularity">Countdown to the Singularity</a></li>
<li><a href="https://qz.com/1366350/what-the-hell-is-going-on-with-apple/">What the hell is going on with Apple?</a></li>
<li><a href="https://interestingengineering.com/why-chinese-artificial-intelligence-will-run-the-world">Why Chinese Artificial Intelligence Will Run The
World</a></li>
<li><a href="https://www.technologyreview.com/s/612327/europes-quest-for-an-unhackable-quantum-internet/">Inside Europe’s quest to build an unhackable quantum internet</a></li>
<li><a href="https://spectrum.ieee.org/computing/hardware/the-case-against-quantum-computing">The Case Against Quantum
Computing</a></li>
</ol>
<!-- raw HTML omitted -->
</li>
<li>
<p><strong>Economics</strong></p>
<ol>
<li><a href="https://www.wired.com/story/why-hard-escape-amazons-long-reach/">Why It&rsquo;s Hard to Escape Amazon&rsquo;s Long Reach</a></li>
<li><a href="https://www.aboveavalon.com/notes/2018/7/11/the-race-to-a-trillion">The Race to a Trillion</a></li>
<li><a href="https://www.bloombergquint.com/opinion/ambani-is-ready-for-his-triple-play-close-up">Ambani Is Ready for His Triple Play Close-Up</a></li>
<li><a href="https://www.livemint.com/Opinion/M0oJYwIP1OxJWnzaz6Eo8H/Penalty-kicks-and-behavioural-economics.html">Penalty kicks and behavioural
economics</a></li>
<li><a href="https://www.collaborativefund.com/blog/the-psychology-of-money/">The Psychology of Money</a></li>
<li><a href="https://www.bloomberg.com/features/2018-apple-trillion-dollar-world/">Apple’s Trillion-Dollar World</a></li>
<li><a href="https://hbr.org/2018/08/how-to-beat-mid-career-malaise">How to Beat Mid-Career Malaise</a></li>
<li><a href="https://www.theguardian.com/news/2018/jul/10/the-staggering-rise-of-indias-super-rich">The staggering rise of India’s
super-rich</a></li>
<li><a href="https://www.theatlantic.com/business/archive/2018/08/the-problem-with-bezos-billions/566552/">Jeff Bezos’s $150 Billion Fortune Is a Policy
Failure</a></li>
<li><a href="https://www.washingtonpost.com/business/2018/08/06/how-year-old-roads-predict-modern-day-prosperity">How 2,000-year-old roads predict modern-day prosperity</a></li>
<li><a href="https://25iq.com/2018/08/11/how-subscription-business-models-are-changing-business-and-investing-the-microeconomics-of-subscriptions/">How Subscription Business Models are Changing Business and Investing (the Microeconomics of
Subscriptions)</a></li>
<li><a href="https://www.getrichslowly.org/income-vs-wealth/">What it means to be rich: The difference between income and
wealth</a></li>
<li><a href="https://seekingalpha.com/article/4205122-dark-decade-ahead">The Dark Decade Ahead</a></li>
<li><a href="https://stratechery.com/2018/the-iphone-franchise/">The iPhone Franchise</a></li>
<li><a href="https://www.newyorker.com/magazine/2018/09/17/the-real-cost-of-the-2008-financial-crisis">The Real Cost of the 2008 Financial
Crisis</a></li>
<li><a href="https://twitter.com/naval/status/1002103360646823936?lang=en">How to Get Rich (without getting lucky)</a></li>
<li><a href="https://zandercutt.com/2018/08/23/the-approval-economy/">The Approval Economy</a></li>
<li><a href="https://www.washingtonpost.com/outlook/five-myths/five-myths-about-capitalism/2018/09/27/3f0b72f6-c06f-11e8-90c9-23f963eea204_story.html">Five myths about
capitalism</a></li>
<li><a href="https://www.theverge.com/2018/10/23/17970466/amazon-prime-shopping-behavior-streaming-alexa-minimum-wage">How Amazon’s Retail Revolution Is Changing The Way We Shop</a></li>
<li><a href="http://evonomics.com/wealth-power-productivity-laurie-macfarlane/">Why Wealth Is Determined More by Power Than
Productivity</a></li>
<li><a href="https://justinjackson.ca/costs">Let&rsquo;s Talk About Startup Costs</a></li>
<li><a href="https://www.bloomberg.com/news/articles/2018-11-16/how-companies-get-you-to-pay-more-for-the-same-product">How Companies Get You to Pay More for the Same
Product</a></li>
<li><a href="https://www.vox.com/the-goods/2018/10/31/18048340/art-market-expensive-ai-painting">Why is art so expensive?</a></li>
<li><a href="https://www.nytimes.com/2018/12/18/business/bond-market-risks.html">Stock Markets Are Wild, but Bond Markets Can Be Dangerous</a></li>
<li><a href="https://www.livemint.com/Companies/HNZA71LNVNNVXQ1eaIKu6M/British-Raj-siphoned-out-45-trillion-from-India-Utsa-Patna.html">British Raj siphoned out $45 trillion from India: Utsa
Patnaik</a></li>
<li><a href="https://theweek.com/articles/809324/how-spot-next-recession">How to spot the next recession</a></li>
</ol>
</li>
</ul>
<!-- raw HTML omitted -->
<ul>
<li><strong>Misc</strong>
<ol>
<li><a href="https://www.nytimes.com/2018/02/21/technology/personaltech/smart-things-dumb-stuff.html">In an Era of ‘Smart’ Things, Sometimes Dumb Stuff Is
Better</a></li>
<li><a href="https://www.theladders.com/career-advice/einstein-aristotle-and-ockham-on-how-real-geniuses-solve-difficult-problems">Einstein, Aristotle, and Ockham on how real geniuses solve difficult problems</a></li>
<li><a href="https://www.theglobeandmail.com/technology/your-smartphone-is-making-you-stupid/article37511900/">Your smartphone📱is making you👈 stupid, antisocial 🙅 and unhealthy 😷. So why can&rsquo;t you put it
down❔⁉️</a></li>
<li>Indian Nationalism: The Memories Of History – <a href="https://swarajyamag.com/ideas/indian-nationalism-the-memories-of-history-part-i">Part
I</a>, <a href="https://swarajyamag.com/ideas/indian-nationalism-nehruvian-and-marxist-conception-of-india-part-ii">Part
II</a>, <a href="https://swarajyamag.com/ideas/indian-nationalism-the-nationalist-conception-of-india-part-iii">Part
III</a></li>
<li><a href="https://blog.ncase.me/take-your-time/">Take Your Time</a></li>
<li><a href="https://www.nytimes.com/2016/02/28/magazine/what-google-learned-from-its-quest-to-build-the-perfect-team.html">What Google Learned From Its Quest to Build the Perfect Team</a></li>
<li><a href="https://www.newyorker.com/magazine/2018/12/10/the-friendship-that-made-google-huge">The Friendship That Made Google Huge</a></li>
<li><a href="https://www.linkedin.com/pulse/you-what-write-harry-shum/">You are what you write</a></li>
<li><a href="https://swarajyamag.com/ideas/being-dk-in-the-age-of-msd">Being DK In The Age Of MSD</a></li>
<li><a href="https://scroll.in/field/868038/post-retirement-rahul-dravid-is-now-getting-the-unconditional-love-he-always-deserved-as-under-19-world-cup-triumph-showed">The growing legacy of Rahul Sharad Dravid</a></li>
<li><a href="https://medium.com/@ztrana/the-only-real-way-to-acquire-wisdom-7489a10c8f8e">The Only Real Way to Acquire Wisdom</a></li>
<li><a href="https://praxis.fortelabs.co/personal-sprints-applying-design-thinking-to-your-life/">Personal Sprints: Applying Design Thinking to Your Life</a></li>
<li><a href="https://fs.blog/2018/06/succeed-at-work/">Smarter, Not Harder: How to Succeed at Work</a></li>
<li><a href="https://www.quantamagazine.org/real-life-schrodingers-cats-probe-the-boundary-of-the-quantum-world-20180625/">Real-Life Schrödinger’s Cats Probe the Boundary of the Quantum World</a></li>
<li><a href="https://www.economist.com/graphic-detail/2018/06/15/which-traits-predict-graduates-earnings">Which traits predict graduates’ earnings?</a></li>
<li><a href="https://andrewchen.co/power-user-curve/">The Power User Curve: The best way to understand your most engaged users</a></li>
<li><a href="https://www.economist.com/the-world-if/2018/07/07/what-if-people-were-paid-for-their-data">What if people were paid for their data?</a></li>
<li><a href="https://www.quantamagazine.org/graduate-student-solves-quantum-verification-problem-20181008/">Graduate Student Solves Quantum Verification Problem</a></li>
<li><a href="https://www.spectator.co.uk/2018/07/it-doesnt-matter-how-hard-you-work-just-how-busy-you-look/">It doesn’t matter how hard you work – just how busy you look</a></li>
<li><a href="http://www.paulgraham.com/love.html">How to Do What You Love</a></li>
<li><a href="https://www.nytimes.com/2018/08/14/style/how-can-i-focus-better.html">Finding It Hard to Focus? Maybe It’s Not Your Fault</a></li>
<li><a href="https://avc.com/2018/08/first-mover-disadvantage/">First Mover Disadvantage</a></li>
<li><a href="https://medium.com/@gettinadmin/the-sharechat-phenomenon-6dfff8244af1">The ShareChat Phenomenon</a></li>
<li><a href="https://scroll.in/article/890631/vinod-mehta-on-atal-behari-vajpayee-and-the-1998-nuclear-tests-how-a-tired-pm-became-a-bold-pm">Atal Bihari Vajpayee and his Achilles heel: Excerpts from Vinod Mehta’s memoirs</a></li>
<li><a href="https://qz.com/work/1373353/work-life-balance-is-an-unhealthy-myth/">Work-life balance is an unhealthy myth</a></li>
<li><a href="https://www.engadget.com/2018/09/04/who-controls-your-data/">Who controls your data?</a></li>
<li><a href="https://www.newyorker.com/humor/daily-shouts/your-first-ninety-days-in-hell">Your First Ninety Days in Hell</a></li>
<li><a href="https://qz.com/1422925/the-public-internet-was-almost-a-democracy/">The internet can’t handle functioning like a democracy</a></li>
<li><a href="https://waitbutwhy.com/2018/04/picking-career.html">How to Pick a Career (That Actually Fits You)</a></li>
<li><a href="https://fs.blog/2018/10/long-game/">The Surprising Power of The Long Game</a></li>
<li><a href="https://www.jotform.com/blog/the-world-needs-polymaths/">Why the world needs deep generalists, not specialists</a></li>
<li><a href="https://waitbutwhy.com/2014/12/10-types-odd-friendships-youre-probably-part.html">10 Types of Odd Friendships You’re Probably Part Of</a></li>
</ol>
</li>
</ul>
<p>I used <a href="https://www.instapaper.com">Instapaper</a> extensively throughout the year to manage and save the articles that I liked. Although I was never
very consistent in reading those saved articles, it was still a good exercise. I finished all my pending pile of
saved articles by the end of the year. Moreover, for this post, it became straightforward for me to recollect those
links. This list grew excessively large, but I did not want to lose any of these links because of some random third-party
service shutting down, so I am adding them here for easy reference in the future.</p>
<p>Next year onwards, I plan to read one academic paper from my favorite areas of CS in every two weeks and summarise them to improve my
understanding of the domain (the <a href="/readings">readings</a> section of my blog was initially intended for this purpose). Moreover, seeing my experience in the last two months, I feel encouraged to increase my Goodreads
reading challenge to 20 books.</p>
<h2 id="work">Work</h2>
<p>The year 2018 was a pivotal year for me on this front. It was the year when I had to come out of the comfort zone of my
parents&rsquo; protection. My professional life began this year, and I started earning MONEY. It feels delightful when you see the money gets deposited to your bank account every month for the hard(!) work that you
have done for the last one month. But</p>
<blockquote>
<p>With great power comes great responsibility.</p>
</blockquote>
<p>I believe that I have been able to control this feeling of power quite nicely until now. Probably being an <em>Agarwal</em> helped :P</p>
<p>Coming back to work, those who do not know, I joined Cisco Systems this year as a Software Engineer. The job is pretty good for my initial expectations. I made some good friends. First time in my life, I managed to make a group of friends.</p>
<p>Quite an achievement.</p>
<h2 id="studies">Studies</h2>
<p>This year was officially my last year in formal education. <!-- raw HTML omitted --> Although I failed to finish my bachelors with a satisfactory final GPA (at least I am not happy with it), I am very much satisfied with all my learnings from college. I learned many life lessons, kept myself in
check, built some useful contacts, learned a lot about many CS-related things, and ended up with a decent job in the
end.</p>
<p>However, I sense that this is not the happy ending of my journey towards learning, and I have a lot more to learn. I
recently read the book &ldquo;The Alchemist,&rdquo; and the central theme of this book is to keep looking for your legend. I am
still searching for my legend. In 2019, I expect to find new ways to keep learning and explore new areas both in CS and other fields of life.</p>
<h2 id="relationships">Relationships</h2>
<p>Before this year, I had an assumption that I lack social skills. I hesitated in talking to people. I decided to change
it this year. I was waiting for a change in my life, probably because NITC had become too monotonous for me. It was one of my
new year&rsquo;s resolution that I will change myself and become more approachable to people.</p>
<p>I do not know if I have changed or not, but I feel much more confident now than ever in communicating with people. I hope I will continue to improve in 2019 as well.</p>
<h2 id="social-media">Social Media</h2>
<p>I was trying to get rid of Facebook for quite some time. This year, I finally managed to control my addiction. For a
good part of the year, either my Facebook account remained deactivated, or I was logged out of it. In the past, I used to feel a
strong urge to open Facebook every ten minutes, but this year, I was able to keep this urge in control. When my account was not
deactivated, I kept myself so busy in other works, that I did not even think of Facebook.</p>
<p>Moreover, the good thing is that I
did not notice any symptoms of withdrawal symptoms because of this sudden quitting of Facebook. A friend&rsquo;s advice worked
nicely. It was quite tricky, indeed.</p>
<p>I was never addicted to any other social media platform, but I decided that I can use Twitter for my benefit. I feel
Twitter is a useful tool if utilized correctly. I followed many people who tweet regularly about CS related stuff. I open
Twitter once every 2-3 days for a very short duration to collect some articles and tips. Nowadays, these articles, along with a few blog articles from Feedly, mainly form my Instapaper feed. Though Instapaper recently switched to
commercial model again, I decided to keep using it for the time being until I find some other alternative.</p>
<h2 id="miscellaneous">Miscellaneous</h2>
<p>I had decided to exercise for at least 90% part of 2018. I failed miserably. Leave alone every day; I could not even do it
continuously for one month. I need to make this a top priority. Otherwise, it is going to create trouble for me soon.</p>
<p>For the last two years, I am trying to get up early in the morning every day. My body does not seem to care, though. It seems a classic
example of the struggle between mind and body. My brain says that I am an early bird, but my body straightforwardly rejects
this idea. I have felt the positives of waking up early, so I am still trying my best so that my body can
adjust to this change. I will keep working on this habit in 2019 as well.</p>
<p>I noticed a bad habit in myself - procrastination. I procrastinated a lot in 2018. Things that I could have finished well
within the deadlines took me ages to complete. I was always late in my BTech project deadlines, I could not finish one of my
hobby projects, I could not finish my study targets on time, and many other such examples haunted me this year. It is one
of my most important goals of 2019 that I need a way to find how to concentrate on one thing at a time. Many things distract me while I am working. Technology itself is a significant distraction, but because I am a CS
professional, this is one thing from which I cannot run away. However, I will still try to avoid getting distracted
by my <em>curiosity</em> and put more focus on doing work.</p>
<p>I am writing more than ever. However, with my increased writing, my English vocabulary is not enough anymore. This year, it
happened many times that I wanted to write something, but because of the lack of proper words in my vocabulary, I had to
settle with <em>inferior</em> words. I tried multiple times this year to work on improving my vocabulary, but I failed badly.
I will increase my focus on improving my knowledge of English in 2019 so that such small issues do not stop me from adding something to my skills.</p>
<p>This year, I experimented and tried to organize myself with to-do lists. It was a fruitful exercise, and it had a lot of sound effects on my productivity. The days when I made a to-do list, I felt very energetic and encouraged to
finish all the tasks on my list. However, then I noticed one thing, I could not continue doing this for more than a few days at
once. For initial days, I felt encouraged to complete my tasks, but soon it began to appear as a
burden, and I felt exhausted. So it seems that something in the middle will work for me. This year, I will continue
using to-do lists (I use Google Keep for this) but for short durations of time. I will refrain from using it every day
to avoid getting exhausted. I am considering a switch to <a href="https://www.notion.so">Notion</a> to maintain my monthly and long-term goals.
Probably that will also help me in keeping track of my goals without feeling the heat.</p>
<p>All of my friends love to travel. It seems a common habit in most of my friends. However, I am an exception. I&rsquo;m not particularly eager to go on trips. I attribute it to my issues with motion sickness. For the whole year of 2018, I do not have a single
trip memory other than my travels to Bengaluru and Jaipur airports. Oh yeah, after thinking for some time, I recalled that I went on one trip
from Bengaluru to Calicut to attend my convocation ceremony. That&rsquo;s all! I will <em>consider</em> accepting trip invitations
from my friends in 2019. Up until now, I keep refusing to join them in their trips due to my health issues, my desire to
stay in solitude and partially because of my unwillingness to explore anything outside technology. However, it is time I start changing
myself.</p>
<p>It was a grave mistake that during my four-year stay in Kerala, I did not try to learn Malayalam. I feel that I
missed an excellent opportunity to learn a new language. Although I am as bad as other north Indians when it comes to
knowing multiple languages (correct me if I am wrong, I do not intend to generalize all north Indians), I think that learning a new language can be very beneficial for <em>some parts of my brain</em>. Now I am in Karnataka, yet
another south Indian state and with yet another language. It is an excellent opportunity, and I am not going to repeat
my mistake this time. Even if I do not succeed in learning Kannada, it will provide enough challenges to my brain for the short term.
Who knows, it might also give me a new skill!</p>
<p><strong>Welcome 2019, I hope that you will help me in taking a step closer to discovering myself. Give me new experiences, keep me grounded and help me in
contributing to the progress of my India.</strong> 😊</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/write-ups" term="write-ups" label="Write-ups" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/review" term="review" label="Review" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Beginning a New Journey]]></title>
            <link href="https://yashagarwal.in/posts/2018/08/beginning-a-new-journey/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2018/08/beginning-a-new-journey/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-08-25T21:16:41+05:30</published>
            <updated>2018-08-25T21:16:41+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>When I was in eighth (or was it ninth?) class, one of our teachers asked in the class, what do you want to become in your life? People said a lot of things. When my turn came up, I stood up and said, <em>“Mein software engineer banana chahta hu”</em> (I want to become a software engineer). It was not that I was genuinely interested in Computers. When I look back now, I realize that it was my cousins who affected my choice (in an indirect way), and their achievements fascinated me to aim at this particular career choice.</p>
<p>My whole life for the last seven years was revolving around this one dream(!) of getting a job in an MNC. I got my chance when I got placed in Cisco last Monsoon. I was super excited about joining Cisco since then. Perhaps because of the MacBook on which I am typing this article right now 😄 and partly because of the monotonicity of the NIT-C environment. I wanted to break out of the comfort zone that I had built there around myself in NIT-C. Changing place seemed the only viable option.</p>
<p>I have been doing a self-introspection for the last four to five months. My blog posts from the previous few months reflect some hints about my introspections. I have mentioned my observations here and there in a few of my blog posts. I discovered some unique aspects of my personality. On the other hand, I found out some traits which are pretty weird (in my opinion :) ). I am not going to publish all of my findings, but one thing became apparent, my social anxiety requires my immediate attention.</p>
<p>It is quite difficult to change some aspects of our personality; usually those we are born with. But most of the qualities that define someone keeps changing. Life experiences play an essential role in determining a person’s character. Success and failure define a person. I firmly believe that no person ever remains the same. People continuously go through phases of realizations and the ups and downs in the career, academics, broken trusts, dampening creativity, growing age, success, glory, hatred, and betrayals. People become what they are because of the world around them. These realizations come from experiences and experiences that come from bad experiences.</p>
<p>I learned this the hard way!</p>
<p>So, I decided, I will not commit those similar set of mistakes again. I will make new mistakes 😜. I realized that there exists a world outside computers and tech. I need to go and talk to people. If not random strangers, I should talk to my friends, take part in various activities, play some sport, focus on my fitness and mental health, and go on trips. And of course, perform well in work and maintain a good work-life balance if it is not a <a href="https://theascent.pub/is-work-life-balance-a-myth-c328377966de">myth</a>.</p>
<p>I cannot change the past now. It is only the future that is yet in my power. I am eager to see how my current actions are going to affect my future.</p>
<p>At last, let me finish this article by quoting Winston Churchill (Although I am not a big fan of him, this quote is worth sharing).</p>
<blockquote>
<p>If we open a quarrel between past and present, we shall find that we have lost the future.</p>
</blockquote>
<p>Cheers. 😄</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/write-ups" term="write-ups" label="Write-ups" />
                            
                        
                    
                 
                    
                 
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[The Good and Bad about CSED of NIT-C]]></title>
            <link href="https://yashagarwal.in/posts/2018/06/the-good-and-bad-about-csed-of-nit-c/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2018/06/mistakes-that-i-made-in-nitc/?utm_source=atom_feed" rel="related" type="text/html" title="Mistakes That I Made in NITC" />
                <link href="https://yashagarwal.in/posts/2016/04/searching-the-goal/?utm_source=atom_feed" rel="related" type="text/html" title="Searching the goal" />
                <link href="https://yashagarwal.in/posts/2018/03/so-i-applied-for-gsoc/?utm_source=atom_feed" rel="related" type="text/html" title="So I Applied for GSoC" />
                <link href="https://yashagarwal.in/posts/2018/03/fossmeet18/?utm_source=atom_feed" rel="related" type="text/html" title="FOSSMeet&#39;18" />
                <link href="https://yashagarwal.in/posts/2018/03/deactivated-my-facebook-account/?utm_source=atom_feed" rel="related" type="text/html" title="Deactivated My Facebook Account" />
            
                <id>https://yashagarwal.in/posts/2018/06/the-good-and-bad-about-csed-of-nit-c/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-06-14T17:59:28+05:30</published>
            <updated>2018-06-14T17:59:28+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>Four years ago, in this very month of June, JEE Mains results were out. I had screwed up my JEE Advanced, so I had to settle for an NIT. My AIR was good enough to get me a seat of Computer Science and Engineering in any of the NITs except the first three (at that time Trichy, Warangal, and Surathkal). I was skeptical about going to <a href="http://nitc.ac.in/">NIT Calicut</a> because of its distance from my native place, so NIT Allahabad was the most suitable choice. However, in the end, I decided to give preference to NIT Calicut over NIT Allahabad. One of the many reasons for this decision was an excellent <a href="http://dsanghi.blogspot.com/2011/05/my-2011-list-of-recommended-csit.html">article</a> by Dr. Dheeraj Sanghi, a retired professor from IIT Kanpur. His blog post was the primary reason; I decided to go with NIT Calicut. Now that I have graduated from NIT Calicut, I think it is the right time to document my observations about the CSE department of NIT Calicut from the perspective of a student.</p>
<p>My exposure to the CSE department was limited to the facilities provided to undergraduate students only (almost everything except some academic facilities), so I am not entirely sure if this article will help any of the postgraduate students out there. However, some points below might help you decide about the non-academic activities of the department.</p>
<h2 id="faculties">Faculties</h2>
<p>Like every other NIT, NIT Calicut also suffers from the lack of permanent faculties. Most of the faculties in the department are recruited on a contract basis (ad-hoc). It is <strong>not</strong> necessarily a <a href="http://dsanghi.blogspot.com/2018/05/teaching-by-temps-it-is-budget-issue-too.html">bad</a> thing, but many a time, an ad-hoc faculty gets to teach a subject where one does not hold strong command. In that case, the subject becomes a burden for both student and teacher. It happened to me many times when I was stuck in a situation that I ended up losing my interest in the subject as well as grades.</p>
<p>Most of the core subjects are taught by permanent faculties who are very good at their subjects. These faculties are very experienced and are alumni of some of India&rsquo;s top IITs and IISc. The department used to <a href="http://dsanghi.blogspot.com/2011/05/my-2011-list-of-recommended-csit.html">ask</a> new hires to get a postgraduate degree from some IIT or IISc, but this does not seem to be the case anymore.</p>
<p>Most of the professors prefer to teach traditional computer science subjects, so if you are interested in AI, Data Science, or any other such areas of computer science, then you might have to depend on self-study.</p>
<h2 id="club-activities">Club Activities</h2>
<p><a href="http://assoc.cse.nitc.ac.in">CSEA</a> is the main departmental club that organizes almost every co-curricular activity in the department. In my opinion, CSEA is the best department association in NIT Calicut. I was not a member of CSEA, so all of my views are from the perspective of an outsider. CSEA organizes talks and workshops for the freshers from time to time. I attended all the lectures and seminars arranged by CSEA in my initial years, and I feel that those workshops were quite beneficial for me as a student.</p>
<p>FOSSCell is a group of students who contribute to open-source software. FOSSCell organizes workshops related to Linux and open source contributions. It also organizes <a href="http://fossmeet.in/">FOSSMeet</a>, the yearly free and open-source software conference organized in NIT-C. It is one of the largest gatherings of open source enthusiasts in South India. I have written two posts about my experience as a part of the organizing team of FOSSMeet. You can read them <a href="/posts/2017/03/fossmeet17/">here</a> and <a href="/posts/2018/03/fossmeet18/">here</a>. Attending and organizing FOSSMeet is one of the best experiences of my college life. The current executives of FOSSCell are actively working on improving the state of open source contributions in NIT-C. I hope the situation will change in the coming years.</p>
<p>The students manage all the labs in the department. The <a href="http://athena.nitc.ac.in">Software Systems Lab</a> is assigned to undergraduate students. This lab is probably the crown jewel and pride of every CS student of NIT Calicut. It remains open most of the time. All the department servers are kept in this lab and are managed independently by the student administrators chosen by the student administrators. The student administrators are given the responsibility to maintain all the department websites. I do not know if any other university or college in India provides such independence to its students. I was one of the student administrators in this lab, and I consider that this was the best thing that happened to me during my graduation.</p>
<h2 id="the-infrastructure">The Infrastructure</h2>
<p>A traditional computer science course does not require many types of equipment except a laptop and a fast enough internet connection. Internet speed is not extraordinary in NIT-C, but it was sufficient for me. The network administrators blocked many websites, but if the site is related to coursework, sending a short mail was enough in most cases to get it unblocked.</p>
<p>The labs are equipped with modern computer systems, and Ubuntu is installed on almost every department system. The particular emphasis on the use of open-source software is a big plus point for the department.</p>
<h2 id="courses">Courses</h2>
<p>The curriculum was last updated in 2010. Since then, six batches have graduated. I think it is an excellent time to consider revising it. The current curriculum is good enough for most traditional CS subjects, but its focus on the present buzzwords of the CS world is very less. I heard that the department changed the curriculum for the batches joining 2017 onwards, but I doubt that there are any significant changes.</p>
<!-- raw HTML omitted -->
<p>The academics are taken quite seriously in the department (apparently). The level of question papers in examinations is generally very tough. I always felt the heat, at least. However, teachers are quite friendly and will help you with any of your queries.</p>
<p>The situation of lab courses (except OS, Compilers, and DSA lab) in the department is very pathetic. Operating Systems lab and Compiler lab have a well-defined structure, and the feeling of developing your tiny OS or compiler is one of the best feelings ever. Data Structure and Algorithms lab runs in parallel to the corresponding theory course, and that helps students in understanding theory by practice.</p>
<p>I cannot say the same about any other lab in the department; most of the students end up learning nothing new from these lab courses. The problem is in the way these courses are handled. There does not seem to be a proper structure of teaching in these courses. Students are expected to learn on their own and come to the lab and give exams. Although most of the time, the corresponding theory course carries marks for a mini project which compensates for the lab course, these lab courses do have some scope for improvements.</p>
<h2 id="placements--higher-studies">Placements &amp; Higher Studies</h2>
<p>The department does not handle placements, but the quality of education and the focus on industry-oriented courses do affect the placements. The placement department of NIT-C has been doing an excellent job of maintaining a track record of over 90% placements from computer science every year.</p>
<p>Department, as such, does not focus on placements much. I feel that the department is more interested in making researchers than software engineers. Most of the courses are very heavily inclined towards theory. From my batch, I know at least ten people who are planning to go to the USA for higher studies in the next two years. The faculties also encourage students to pursue higher education (and subsequently research). Perhaps, it is one of the reasons that the state of competitive coding is not very good in the department.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Despite continuous lack of good permanent faculties and its location disadvantages, CSED of NIT-C has managed to produce competent engineers year by year. Spending four years in Kerala can be a different experience for outsiders, especially North Indians, but it is an experience worth gaining. If you have a good rank in JEE Mains and do not mind going too far from home, CSED of NIT Calicut is an excellent choice. I hope you will not regret the decision, though I will not say the same about other departments of NIT-C.</p>
<p>If you decide to join NIT-C, do read my article about my <a href="/posts/2018/06/mistakes-that-i-made-in-nitc/">experience</a> at NIT Calicut.</p>
<p>Thanks to my friends <a href="https://www.linkedin.com/in/aashishsatya">Aashish</a>, <a href="https://www.linkedin.com/in/mahaveer-chouhan-575abba7/">Mahaveer</a> and <a href="https://www.facebook.com/faris.shajahan.1">Faris</a> for reading the drafts of this article and providing their suggestions.</p>
<p>Best wishes. Cheers 😄</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/write-ups" term="write-ups" label="Write-ups" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/cse" term="cse" label="CSE" />
                             
                                <category scheme="https://yashagarwal.in/tags/review" term="review" label="review" />
                             
                                <category scheme="https://yashagarwal.in/tags/nitc" term="nitc" label="NITC" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Battery Notifications in i3]]></title>
            <link href="https://yashagarwal.in/posts/2018/06/battery-notifications-in-i3/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-2/?utm_source=atom_feed" rel="related" type="text/html" title="Arch Linux Installation Guide Part 2" />
                <link href="https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-1/?utm_source=atom_feed" rel="related" type="text/html" title="Arch Linux Installation Guide Part 1" />
                <link href="https://yashagarwal.in/posts/2017/12/setting-up-ssh-agent-in-i3/?utm_source=atom_feed" rel="related" type="text/html" title="Setting Up SSH Agent in i3" />
                <link href="https://yashagarwal.in/posts/2018/02/syncing-time-on-windows-gnu/linux-dual-boot-setups/?utm_source=atom_feed" rel="related" type="text/html" title="Syncing Time on Windows &amp; GNU/Linux Dual Boot Setups" />
                <link href="https://yashagarwal.in/posts/2017/12/setting-up-alm-octane-with-docker-compose/?utm_source=atom_feed" rel="related" type="text/html" title="Setting up ALM Octane with Docker Compose" />
            
                <id>https://yashagarwal.in/posts/2018/06/battery-notifications-in-i3/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-06-12T09:45:46+05:30</published>
            <updated>2018-06-12T09:45:46+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>I am using <em>i3</em> window manager for the last seven months, and it has been a pleasant and productive experience so far. There were a few hiccups here and there, but that is expected with such minimalistic setups. One thing that I never noticed was the lack of notifications on critical battery levels. For the last few months, my laptop battery was discharging to 0% all the time. Probably this proved to be too fatal for my battery. According to this <a href="https://lifehacker.com/5875162/how-often-should-i-charge-my-gadgets-battery-to-prolong-its-lifespan">article</a>, lithium-ion batteries are not expected to go from 100% to 0% frequently. I recently bought a new battery, and I did not want to reduce the lifespan of this battery too. So I decided to set up battery notifications for my i3 setup.</p>
<p>I <a href="https://agorf.gr/2016/06/29/low-battery-notification-in-i3wm/">found</a> a bash script which shows a notification using <em>notify-send</em> when battery charge level reaches or drops below a configured threshold. However, I had to do some additional steps to make this script work on my system.</p>
<p>The first issue was the <em>lockfile</em> program, which was not installed in my system. I installed it using the following command.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo apt install procmail</code></pre></div>
<p>The second issue was more difficult to solve. I planned to set up the script to run every minute using <em>cron</em>. However, it turns out that cron operates in a very <a href="http://askubuntu.com/a/23438/173003">minimalistic</a> environment and notify-send requires the presence of some special variables in the environment. These variables are <strong>DBUS_SESSION_BUS_ADDRESS</strong>, <strong>XAUTHORITY</strong> and <strong>DISPLAY</strong>. To provide the values of these variables to the cron environment, I modified the script and sourced a new file <code>.bat_envs</code>.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash
</span><span class="cp"></span>
. /home/yash/.bat_envs

<span class="nv">THRESHOLD</span><span class="o">=</span><span class="m">15</span>

<span class="nv">lock_path</span><span class="o">=</span><span class="s1">&#39;/tmp/battery.lock&#39;</span>

lockfile -r <span class="m">0</span> <span class="nv">$lock_path</span> 2&gt;/dev/null <span class="o">||</span> <span class="nb">exit</span>

<span class="nv">acpi_path</span><span class="o">=</span><span class="k">$(</span>find /sys/class/power_supply/ -name <span class="s1">&#39;BAT*&#39;</span> <span class="p">|</span> head -1<span class="k">)</span>
<span class="nv">charge_now</span><span class="o">=</span><span class="k">$(</span>cat <span class="s2">&#34;</span><span class="nv">$acpi_path</span><span class="s2">/charge_now&#34;</span><span class="k">)</span>
<span class="nv">charge_full</span><span class="o">=</span><span class="k">$(</span>cat <span class="s2">&#34;</span><span class="nv">$acpi_path</span><span class="s2">/charge_full&#34;</span><span class="k">)</span>
<span class="nv">charge_status</span><span class="o">=</span><span class="k">$(</span>cat <span class="s2">&#34;</span><span class="nv">$acpi_path</span><span class="s2">/status&#34;</span><span class="k">)</span>
<span class="nv">charge_percent</span><span class="o">=</span><span class="k">$(</span><span class="nb">printf</span> <span class="s1">&#39;%.0f&#39;</span> <span class="k">$(</span><span class="nb">echo</span> <span class="s2">&#34;</span><span class="nv">$charge_now</span><span class="s2"> / </span><span class="nv">$charge_full</span><span class="s2"> * 100&#34;</span>
 <span class="p">|</span> bc -l<span class="k">))</span>
<span class="nv">message</span><span class="o">=</span><span class="s2">&#34;Battery running critically low at </span><span class="nv">$charge_percent</span><span class="s2">%!&#34;</span>

<span class="k">if</span> <span class="o">[[</span> <span class="nv">$charge_status</span> <span class="o">==</span> <span class="s1">&#39;Discharging&#39;</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="o">[[</span> <span class="nv">$charge_percent</span> -le <span class="nv">$THRE</span>
SHOLD <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
  /usr/bin/notify-send -u critical <span class="s2">&#34;Low battery&#34;</span> <span class="s2">&#34;</span><span class="nv">$message</span><span class="s2">&#34;</span>

  <span class="nv">current_date_time</span><span class="o">=</span><span class="s2">&#34;`date +%Y%m%d%H%M%S`&#34;</span><span class="p">;</span>
  <span class="nb">echo</span> <span class="s2">&#34;[BATTERY LOG] = </span><span class="nv">$charge_percent</span><span class="s2">% on </span><span class="nv">$current_date_time</span><span class="s2">&#34;</span>
<span class="k">fi</span>

rm -f <span class="nv">$lock_path</span></code></pre></div>
<p>Read this blog <a href="https://agorf.gr/2016/06/29/low-battery-notification-in-i3wm/">post</a> to understand how this script works.</p>
<p>As the notify-send requires some special X session environmental variables, we will need a method to provide these variables to notify-send in cron environment. The safest way to get X session related environmental variables is to get them from the environment of a process of the user who is logged on to X. The following script will run every time a user logs in and stores these variables in a file <code>.bat_envs</code>.</p>
<!-- raw HTML omitted -->
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash
</span><span class="cp"></span>
<span class="nv">env_path</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$HOME</span><span class="s2">/.bat_envs&#34;</span>

rm -f <span class="s2">&#34;</span><span class="si">${</span><span class="nv">env_path</span><span class="si">}</span><span class="s2">&#34;</span>
touch <span class="s2">&#34;</span><span class="si">${</span><span class="nv">env_path</span><span class="si">}</span><span class="s2">&#34;</span>

<span class="nv">copy_envs</span><span class="o">=</span><span class="s2">&#34;XAUTHORITY DISPLAY DBUS_SESSION_BUS_ADDRESS&#34;</span>

<span class="k">for</span> env_name in <span class="nv">$copy_envs</span>
<span class="k">do</span>
    env <span class="p">|</span> grep <span class="s2">&#34;</span><span class="si">${</span><span class="nv">env_name</span><span class="si">}</span><span class="s2">&#34;</span> &gt;&gt; <span class="s2">&#34;</span><span class="si">${</span><span class="nv">env_path</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">;</span>
    <span class="nb">echo</span> <span class="s2">&#34;export </span><span class="si">${</span><span class="nv">env_name</span><span class="si">}</span><span class="s2">&#34;</span> &gt;&gt; <span class="s2">&#34;</span><span class="si">${</span><span class="nv">env_path</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">;</span>
<span class="k">done</span>

chmod <span class="m">600</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">env_path</span><span class="si">}</span><span class="s2">&#34;</span></code></pre></div>
<p>To run this script at startup, I added this file to the i3 config file with the following command.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">exec</span> --no-startup-id <span class="s2">&#34;path to your script&#34;</span></code></pre></div>
<p>Then at the end of cron file, I added a new entry for the battery monitoring script.</p>
<p>To open cron file:</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">crontab -e</code></pre></div>
<p>Now add the following line to the end of the file and save the file.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">* * * * * bash <span class="s2">&#34;path to your script&#34;</span> &gt;&gt; <span class="s2">&#34;path to your log file&#34;</span></code></pre></div>
<p>Replace the <em>path to your script</em> (with double quotes) with your script path and the <em>path to your log file</em> with a path where you want to save your log file.</p>
<p>Now every minute, this script will be executed, and if your battery percent drops below the threshold value, you will be notified with a notification bubble.</p>
<p>I tested this procedure on <em>Ubuntu 18.04 with i3</em>. It should work on Arch Linux and other non-Debian distributions also, but the steps might be slightly different due to various reasons. Please comment if you face any issues with the setup.</p>
<p>Thank you for reading the article. Cheers 😄</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/hacks" term="hacks" label="Hacks" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/arch-linux" term="arch-linux" label="Arch Linux" />
                             
                                <category scheme="https://yashagarwal.in/tags/i3" term="i3" label="i3" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Mistakes That I Made in NITC]]></title>
            <link href="https://yashagarwal.in/posts/2018/06/mistakes-that-i-made-in-nitc/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2016/04/searching-the-goal/?utm_source=atom_feed" rel="related" type="text/html" title="Searching the goal" />
                <link href="https://yashagarwal.in/posts/2018/03/so-i-applied-for-gsoc/?utm_source=atom_feed" rel="related" type="text/html" title="So I Applied for GSoC" />
                <link href="https://yashagarwal.in/posts/2018/03/fossmeet18/?utm_source=atom_feed" rel="related" type="text/html" title="FOSSMeet&#39;18" />
                <link href="https://yashagarwal.in/posts/2018/03/deactivated-my-facebook-account/?utm_source=atom_feed" rel="related" type="text/html" title="Deactivated My Facebook Account" />
                <link href="https://yashagarwal.in/posts/2018/01/why-a-sanskrit-shloka/?utm_source=atom_feed" rel="related" type="text/html" title="Why a Sanskrit Shloka?" />
            
                <id>https://yashagarwal.in/posts/2018/06/mistakes-that-i-made-in-nitc/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-06-01T10:21:45+05:30</published>
            <updated>2018-06-01T10:21:45+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>Now that I am graduated from NIT Calicut, one more chapter of my life is over. It is time to move on to the next page, but before I begin that phase, I thought it would be nice, to sum up, the experience that I gathered in NIT Calicut. The last four years have been great for me. I learned a lot of new life lessons, but there were some decisions that I could have avoided. I take full responsibility for my actions and do not blame anybody for the same. Although I do not regret taking any of those decisions, I feel it is crucial to document all those lessons before they vanish from my <em>otherwise</em> average memory. This post is intended to serve as a document for my future self, but most of the content here should be able to help anyone who happens to read this post. Most of this content has been taken from my journal, which I maintained (not consistently) over the last two years.</p>
<h2 id="studies">Studies</h2>
<p>From the first year itself, I had an impression from various online QA sites and some seniors that studies are not a big deal in college. That was a grave mistake which cost me a lot during my college life. I tried to compensate for it in the latter half of my graduation, but that was not enough.</p>
<p>While my friends used to learn by teaching each other, I never enjoyed studying in groups. I wish I had participated more in such group learning activities.</p>
<p>Most of the courses taught in traditional colleges like NITC are useless, in my opinion. However, Data Structures and Algorithms(DSA) was one subject which shows its importance again and again. It is one of those subjects where I should have put more attention. Although I was suffering from a fracture at the time of this course, some more efforts from my side could have changed things as they are today.</p>
<h2 id="wrong-learning-methods">Wrong learning methods</h2>
<p>I always tended to learn anything new using the tutorials available on the Internet. It is fine, but I never tried to do any projects/practicals to strengthen my learning. In my experience, it is always better to learn any programming language by doing projects in it.</p>
<p>My first programming language was C, which was taught in an introductory course in the first year. C is a relatively low-level language, and it helped me in understanding many concepts and working on many systems related stuff. Still, I feel that it is also one of the reasons that I am not able to think in higher-level abstraction. When I started learning Python, I was not able to think anything in abstract terms. I wish I had put more effort into learning Python or any other OOP language early in my college life.</p>
<h2 id="communication">Communication</h2>
<p>I have always been an introvert person when it comes to communicating with people. I wish I had worked on improving this aspect of my personality. For the first two years, I never asked any seniors for advice, never asked any questions in the classroom, never discussed project ideas with any faculty. I tried to improve myself in the last two years, and I feel satisfied with my efforts. In my opinion, it is always better to ask a more experienced person for their advice than to take blind steps and regret later.</p>
<p>I was hesitant about talking to people from different linguistic backgrounds in my first and second years. Again thanks to my inability to communicate with new people. I improved this later, but first impressions are crucial, if not everything.</p>
<h2 id="friends-and-seniors">Friends and seniors</h2>
<p>In my first year, I made a mistake by choosing to befriend some people who identified themselves as <em>state seniors</em> (people from the same north Indian state as I am). I was naive in identifying people at that time, but when I look back now, I feel that if I had avoided those people and invested that time in learning something related to CS, I could have gained more out of college. For a person who was entirely new for CS, that one year&rsquo;s time was very crucial, and I completely wasted it. It took me two years to rectify my mistake.</p>
<h2 id="not-taking-breaks">Not taking breaks</h2>
<p>I never took breaks from learning new things. I always put my work ahead of my personal life. That was the wrong approach. However, I do not blame myself for this. I was new to such work-life equations, and I did not realize the requirement to maintain a proper work-life balance. I wanted to learn a lot of new things, and college provided me a suitable environment, but I feel that I exhausted myself many times. That resulted in my loss of interest from Computer Science also in the second year.</p>
<h2 id="writing-and-reading">Writing and Reading</h2>
<p>I was never a voracious reader in my childhood. I never tried to spend my free time with books. After coming to college, I saw many people reading books day and night. That inspired me to develop a new hobby of <strong>Reading</strong>. Although I still do not read a lot (just 5-6 books a year), it is better than reading none.</p>
<p>I started this blog in the second year. My intention was <em>not</em> to write. I just wanted to learn how to set up Wordpress and Jekyll. However, slowly I developed the habit of writing. I now consider it the biggest takeaway from college. Writing a blog has helped me learn new things and systematically explain things.</p>
<p>I tried to write a journal to document significant events in life, but I could not maintain it regularly. That is one thing which I would like to improve in the coming years.</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/write-ups" term="write-ups" label="Write-ups" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/nitc" term="nitc" label="NITC" />
                             
                                <category scheme="https://yashagarwal.in/tags/cse" term="cse" label="CSE" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Proxy Your Requests to the Backend Server With Grunt]]></title>
            <link href="https://yashagarwal.in/posts/2018/05/proxy-your-requests-to-the-backend-server-with-grunt/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2018/02/syncing-time-on-windows-gnu/linux-dual-boot-setups/?utm_source=atom_feed" rel="related" type="text/html" title="Syncing Time on Windows &amp; GNU/Linux Dual Boot Setups" />
                <link href="https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-2/?utm_source=atom_feed" rel="related" type="text/html" title="Arch Linux Installation Guide Part 2" />
                <link href="https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-1/?utm_source=atom_feed" rel="related" type="text/html" title="Arch Linux Installation Guide Part 1" />
                <link href="https://yashagarwal.in/posts/2018/01/my-own-configuration-manager/?utm_source=atom_feed" rel="related" type="text/html" title="My Own Configuration Manager" />
            
                <id>https://yashagarwal.in/posts/2018/05/proxy-your-requests-to-the-backend-server-with-grunt/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-05-15T17:14:13+05:30</published>
            <updated>2018-05-15T17:14:13+05:30</updated>
            
            
            <content type="html"><![CDATA[<p><em>This article was originally published on <a href="https://www.zeolearn.com/magazine/proxy-your-requests-to-the-backend-server-with-grunt">zeolearn</a>.</em></p>
<p>If you are working on large projects, it is undoubtedly a good idea to have a build script or some task scripts to help to automate some of the repetitive parts of the development process.
For JavaScript projects, <code>Grunt</code> serves a similar purpose. It is a JavaScript task/build runner that is written on top of NodeJS. Grunt can help you with automatically minifying your JavaScript or CSS files, or reload your browser on every file change. It can show you a comprehensive list of JavaScript errors, compile your <code>SASS/LESS</code> files into CSS files automatically, and many other things.</p>
<p>However, the most significant advantage of Grunt that I am going to discuss today is its ability to proxy your requests. For example, when you are developing your backend with anything other than JavaScript, you will face difficulty in accessing the backend data in your frontend without having to compile and deploy the code every time you make any changes. It is not possible with a typical web server setup because <a href="https://en.wikipedia.org/wiki/XMLHttpRequest">XHR</a> requests are not allowed to be cross-domain by browsers due to <a href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing">Cross-origin resource sharing</a> (CORS) limitations.</p>
<p>So, the problem here is as follows,</p>
<blockquote>
<p>you are developing the UI of your applications using some frontend JavaScript framework (say Angular) with Grunt as the build runner, and the backend of your application is being designed in some backend framework other than JavaScript/NodeJS (say Laravel), you might face problems accessing the backend while running Grunt server.</p>
</blockquote>
<p>It happens because the backend Laravel service runs on port 8000, and the front end development server runs on port 8080. The requests from the frontend server to the backend-server will result in <a href="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy">same-origin policy</a> errors due to the port difference. To fix this issue, we can set up CORS through a proxy on Grunt. This proxy will stand in front of your frontend server and the backend server and get the required data from the backend and pass it to your frontend while letting your browser think that you are all in the same domain.</p>
<p>Grunt has a module <a href="https://github.com/drewzboto/grunt-connect-proxy">grunt-connect-proxy</a> that exists to help to solve this issue. It delegates requests that match a given URL to the backend of your choice. So for example, you want to access your backend using the URL <a href="http://localhost:8080/api">http://localhost:8080/api</a>, you can write a proxy rule so that whenever your user tries to access this URL in a browser, the proxy will get the data from your backend and server it at this particular URL.</p>
<p>The procedure to set up the proxy is simple. First, you will have to add the proxy configuration to your <code>Gruntfile.js</code>. In this example, I am assuming that the backend server is running on the port 8000, and the Grunt server is running on the port 8080. This configuration will delegate all requests to <a href="http://localhost:8080/api">http://localhost:8080/api</a> to <a href="http://localhost:8000/backend">http://localhost:8000/backend</a>.</p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="nx">connect</span><span class="o">:</span> <span class="p">{</span>
  <span class="nx">server</span><span class="o">:</span> <span class="p">{</span>
    <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
      <span class="nx">port</span><span class="o">:</span> <span class="mi">8080</span><span class="p">,</span>
      <span class="nx">base</span><span class="o">:</span> <span class="s1">&#39;public&#39;</span><span class="p">,</span>
      <span class="nx">hostname</span><span class="o">:</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span>
      <span class="nx">livereload</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
      <span class="nx">middleware</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">connect</span><span class="p">,</span> <span class="nx">options</span><span class="p">,</span> <span class="nx">middlewares</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">middlewares</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;grunt-connect-proxy/lib/utils&#39;</span><span class="p">).</span><span class="nx">proxyRequest</span><span class="p">);</span>
        <span class="k">return</span> <span class="nx">middlewares</span><span class="p">;</span>
      <span class="p">}</span>
    <span class="p">},</span>
    <span class="nx">proxies</span><span class="o">:</span> <span class="p">[</span>
      <span class="p">{</span>
        <span class="nx">context</span><span class="o">:</span> <span class="s1">&#39;/api&#39;</span><span class="p">,</span>
        <span class="nx">host</span><span class="o">:</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span>
        <span class="nx">port</span><span class="o">:</span> <span class="mi">8000</span><span class="p">,</span>
        <span class="nx">https</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
        <span class="nx">rewrite</span><span class="o">:</span> <span class="p">{</span>
            <span class="s1">&#39;^/api&#39;</span><span class="o">:</span> <span class="s1">&#39;/backend&#39;</span>
        <span class="p">}</span>
      <span class="p">}</span>
    <span class="p">]</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>
<p>Now register your Grunt server task to run the proxy on Grunt execution.</p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;server&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">target</span><span class="p">)</span> <span class="p">{</span>
   <span class="nx">grunt</span><span class="p">.</span><span class="nx">task</span><span class="p">.</span><span class="nx">run</span><span class="p">([</span>
       <span class="s1">&#39;configureProxies:server&#39;</span><span class="p">,</span>
       <span class="s1">&#39;connect:server&#39;</span><span class="p">,</span>
   <span class="p">]);</span>
<span class="p">});</span>
</code></pre></div>
<p>Let me explain the above two scripts line by line. In the connect section of your <code>Gruntfile</code>, we add a new section called <code>proxies</code>. The options defined in the proxies section are explained below.</p>
<ul>
<li><strong>context</strong>: This is the context against which the incoming requests will be matched. Matching requests will be proxied to the backend server.</li>
<li><strong>host</strong>: The host address where the backend server is running. The incoming requests will be proxied to this host.</li>
<li><strong>port</strong>: The port where the backend server is running.</li>
<li><strong>https</strong>: If your backend server is an https endpoint, then set this value to <code>true</code>.</li>
<li><strong>rewrite</strong>: This option allows rewriting of URL when proxying. What this means is that when trying to proxy <a href="http://localhost:8080/api">http://localhost:8080/api</a> to the backend server, the URL will be rewritten as <a href="http://localhost:8000/backend">http://localhost:8000/backend</a>. The object&rsquo;s key serves as the regex used in the replacement operation, and the object&rsquo;s value is the context of your backend server&rsquo;s service.</li>
</ul>
<p>More options can be found in the <a href="https://github.com/drewzboto/grunt-connect-proxy#grunt-connect-proxy">documentation</a> of <code>grunt-connect-proxy</code>.</p>
<p>You will also need to set up the proxy&rsquo;s middleware in the <code>options</code> section of the <code>connect</code>. The relevant code is as follows.</p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="p">...</span>
<span class="nx">middleware</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">connect</span><span class="p">,</span> <span class="nx">options</span><span class="p">,</span> <span class="nx">middlewares</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">middlewares</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;grunt-connect-proxy/lib/utils&#39;</span><span class="p">).</span><span class="nx">proxyRequest</span><span class="p">);</span>
  <span class="k">return</span> <span class="nx">middlewares</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">...</span>
</code></pre></div>
<p>Finally, include your proxy task in the server task. It is necessary to append the proxy task before the connect task. Also, make sure to specify the connection target in the <code>configureProxies</code> section. In our case, the connect target is <code>server</code>.</p>
<p>Now you can start your Grunt server via this configured proxy by typing <code>Grunt server</code> in the command line. You should see something like this in the console.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ grunt server
...
Running <span class="s2">&#34;configureProxies:server&#34;</span> <span class="o">(</span>configureProxies<span class="o">)</span> task
Rewrite rule created <span class="k">for</span>: <span class="o">[</span>/^<span class="se">\/</span>api/ -&gt; /backend<span class="o">]</span>.
Proxy created <span class="k">for</span>: /api to localhost:8000

Running <span class="s2">&#34;connect:server&#34;</span> <span class="o">(</span>connect<span class="o">)</span> task
Started connect web server on http://localhost:8080
...</code></pre></div>
<p>The above output confirms that the proxy is working fine.
Some of the example URLs are:</p>
<table>
<thead>
<tr>
<th>Grunt Server</th>
<th>Backend Server</th>
</tr>
</thead>
<tbody>
<tr>
<td>http://127.0.0.1:8080/api</td>
<td>http://127.0.0.1:8000/backend</td>
</tr>
<tr>
<td>http://127.0.0.1:8080/api/x/y</td>
<td>http://127.0.0.1:8000/backend/x/y</td>
</tr>
</tbody>
</table>
<p>That&rsquo;s all. Now you will not face any problems getting data from any backend of your choice.</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/configuration" term="configuration" label="configuration" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Writing Drozer Modules]]></title>
            <link href="https://yashagarwal.in/posts/2018/05/writing-drozer-modules/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2018/05/writing-drozer-modules/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-05-13T17:10:13+05:30</published>
            <updated>2018-05-13T17:10:13+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>This post is a result of my experimentation with Drozer. Drozer is a security testing framework for Android, developed by MWR Labs. According the Drozer&rsquo;s official <a href="https://labs.mwrinfosecurity.com/assets/BlogFiles/mwri-drozer-user-guide-2015-03-23.pdf">documentation</a>:</p>
<blockquote>
<p>Drozer allows you to assume the role of an Android app and interact with other apps. It can do anything that an
installed application can do, such as making use of Android&rsquo;s Inter-Process Communication (IPC) mechanism and
interact with the underlying operating system.</p>
</blockquote>
<p>Drozer modules are written in Python. The module performs operations on an Android device with the help of an agent app installed on the device. The agent app, by default, has permission to use the internet connection only. This permission is required so that the agent can open a ServerSocket on port 31415 (default). The agent will listen for the incoming connections on this port. The console will connect to the agent on this port.</p>
<p>Drozer modules are inherited Python classes. The parent class is defined in <a href="https://github.com/mwrlabs/drozer/blob/develop/src/drozer/modules/base.py">drozer.modules.Module</a>. Drozer console provides commands to create a custom module repository, which is very useful for the local development of modules.</p>
<p>You can read more about the structure of a Drozer module <a href="https://github.com/mwrlabs/drozer/wiki/Writing-a-Module">here</a>.</p>
<p>I will explain all the critical parts of a Drozer module with the help of a sample module. I will be implementing a module to record and save the sound from the inbuilt mic of an Android device.</p>
<p>I initialized a new module repository using the Drozer console using the following command.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">dz&gt; module repository create custom
Initialised repository at custom.</code></pre></div>
<p>You will see a new directory <code>custom</code> in your current directory after executing above command. Navigate to this directory and create a new folder with any name. I prefer to name this folder same as my module name. In this folder, create a file <code>__init__.py</code>. Drozer identifies the folder as a module directory if <code>__init__.py</code> is present in the directory. Now you can implement your module in this directory.</p>
<p>To begin implementing our module, create a new file <code>record.py</code> in the module directory. Drozer has many different utility classes, which we can use to simplify our implementation. To use these utility classes (<a href="https://github.com/mwrlabs/drozer/wiki/Using-mixins">mixins</a>), our module class must extend <em>mixins</em> using Python&rsquo;s multiple inheritance feature.</p>
<p>We first need to import all the required mixins. The mixins are stored in <code>modules.common</code> package in the Drozer source tree. After importing mixins and extending our class, the code will look like this. You can also import any other standard Python module here.</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">drozer.modules</span> <span class="kn">import</span> <span class="n">common</span><span class="p">,</span> <span class="n">Module</span>
<span class="kn">import</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">subprocess</span><span class="o">,</span> <span class="nn">time</span>

<span class="k">class</span> <span class="nc">Record</span><span class="p">(</span><span class="n">Module</span><span class="p">,</span> <span class="n">common</span><span class="o">.</span><span class="n">Shell</span><span class="p">,</span> <span class="n">common</span><span class="o">.</span><span class="n">FileSystem</span><span class="p">,</span> <span class="n">common</span><span class="o">.</span><span class="n">ClassLoader</span><span class="p">):</span></code></pre></div>
<p>Now we will set up the metadata for our module. This information will help Drozer to organize and list our module correctly. We can define the name, description, author, date, license, path, permissions, and examples. Most of the available options are self-explanatory. But <em>path</em> and <em>permissions</em> require some explanation.</p>
<p>The <em>path</em> variable defined here is an array that contains the values for the namespace of the module. Drozer supports separate namespaces for each module. We can combine similar modules in the same namespace using this feature.</p>
<p>The <em>permissions</em> array variable contains all the permissions that this module will require for proper functioning. For example, our module will need permission to record audio on the device to work correctly. So we define this permission in the permissions array. The agent app on the device is required to have this permission. Otherwise, our module will throw an error.</p>
<p>The following snippet shows the metadata section of our module.</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">name</span> <span class="o">=</span> <span class="s2">&#34;Record sound from the inbuilt mic of an Android device.&#34;</span>
<span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;Record sound from the inbuilt mic of an Android device. The default save format is 3GPP. Relies on the agent having the RECORD_AUDIO permission.&#34;</span>
<span class="n">examples</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;
</span><span class="s2">dz&gt; run custom.record.record
</span><span class="s2">Setting up recorder configuration...
</span><span class="s2">Recording started
</span><span class="s2">Press any key to stop recording
</span><span class="s2">
</span><span class="s2">Recording stopped...downloading recording
</span><span class="s2">Screenshot captured. Saved at location /home/yash/work/drozer/1524201166.3gp
</span><span class="s2">&#34;&#34;&#34;</span>
<span class="n">author</span> <span class="o">=</span> <span class="s2">&#34;Yash Agarwal&#34;</span>
<span class="n">date</span> <span class="o">=</span> <span class="s2">&#34;2018-04-14&#34;</span>
<span class="n">license</span> <span class="o">=</span> <span class="s2">&#34;BSD (3 clause)&#34;</span>
<span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;custom&#34;</span><span class="p">,</span> <span class="s2">&#34;record&#34;</span><span class="p">]</span>
<span class="n">permissions</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;android.permission.RECORD_AUDIO&#34;</span><span class="p">,</span> <span class="s2">&#34;com.mwr.dz.permissions.GET_CONTEXT&#34;</span><span class="p">]</span></code></pre></div>
<p>Now we can start implementing the heart of our module, the <code>execute()</code> function. This function will be invoked by Drozer when the module is run. Every action that the module is expected to perform should be implemented in this method.</p>
<p>The implementation of <code>execute()</code> method is slightly tricky and requires an understanding of different classes and methods provided by the Android API. As we are writing a module to record sound, we will look into the documentation of <a href="https://developer.android.com/guide/topics/media/mediarecorder.html">MediaRecorder</a> class. Before reading further, go through the documentation about the use of reflection API in Drozer <a href="https://github.com/mwrlabs/drozer/wiki/Using-Reflection">here</a>.</p>
<p>The <code>execute()</code> function is given below.</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">execute</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">arguments</span><span class="p">):</span>
    <span class="c1"># unique file names</span>
    <span class="n">filename</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()))</span> <span class="o">+</span> <span class="s2">&#34;.3gp&#34;</span>

    <span class="c1"># current working directory of Drozer console</span>
    <span class="n">cwd</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">workingDir</span><span class="p">()</span>

    <span class="c1"># Magic of Reflection API !!!</span>
    <span class="n">recorder</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&#34;android.media.MediaRecorder&#34;</span><span class="p">)</span>
    <span class="n">AudioSource</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">klass</span><span class="p">(</span><span class="s2">&#34;android.media.MediaRecorder$AudioSource&#34;</span><span class="p">)</span>
    <span class="n">OutputFormat</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">klass</span><span class="p">(</span><span class="s2">&#34;android.media.MediaRecorder$OutputFormat&#34;</span><span class="p">)</span>
    <span class="n">AudioEncoder</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">klass</span><span class="p">(</span><span class="s2">&#34;android.media.MediaRecorder$AudioEncoder&#34;</span><span class="p">)</span>

    <span class="n">recorder</span><span class="o">.</span><span class="n">setAudioSource</span><span class="p">(</span><span class="n">AudioSource</span><span class="o">.</span><span class="n">MIC</span><span class="p">)</span>
    <span class="n">recorder</span><span class="o">.</span><span class="n">setOutputFormat</span><span class="p">(</span><span class="n">OutputFormat</span><span class="o">.</span><span class="n">THREE_GPP</span><span class="p">)</span>
    <span class="n">recorder</span><span class="o">.</span><span class="n">setAudioEncoder</span><span class="p">(</span><span class="n">AudioEncoder</span><span class="o">.</span><span class="n">AMR_NB</span><span class="p">)</span>
    <span class="n">recorder</span><span class="o">.</span><span class="n">setOutputFile</span><span class="p">(</span><span class="s2">&#34;</span><span class="si">%s</span><span class="s2">/recording.3gp&#34;</span> <span class="o">%</span> <span class="n">cwd</span><span class="p">)</span>
    <span class="n">recorder</span><span class="o">.</span><span class="n">prepare</span><span class="p">()</span>

    <span class="bp">self</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&#34;Recording started</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>
    <span class="n">recorder</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
    <span class="nb">raw_input</span><span class="p">(</span><span class="s2">&#34;Press any key to stop recording</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>
    <span class="n">recorder</span><span class="o">.</span><span class="n">stop</span><span class="p">()</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&#34;Recording stopped...</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>
    <span class="n">recorder</span><span class="o">.</span><span class="n">reset</span><span class="p">()</span>
    <span class="n">recorder</span><span class="o">.</span><span class="n">release</span><span class="p">()</span>

    <span class="c1"># Download file from device to PC</span>
    <span class="n">length</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">downloadFile</span><span class="p">(</span><span class="s2">&#34;</span><span class="si">%s</span><span class="s2">/recording.3gp&#34;</span> <span class="o">%</span> <span class="n">cwd</span><span class="p">,</span> <span class="n">filename</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">length</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">:</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&#34;Recording saved</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>

    <span class="k">else</span><span class="p">:</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">stderr</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&#34;Recording could not be fetched from the device.</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span></code></pre></div>
<p>I followed the sample use case given on <a href="https://developer.android.com/reference/android/media/MediaRecorder.html">this</a> page, to instantiate and use the <em>MediaRecorder</em> object.</p>
<p>After the recording is finished, we want to save this recorded media file to our computer. Drozer provides a method, <a href="https://github.com/mwrlabs/drozer/blob/c92d74024c653b6dc7de3378a24e51d276ae2c62/src/drozer/modules/common/file_system.py">downloadFile</a> exactly for this purpose. This method returns the length of the data downloaded on success and <code>None</code> otherwise. We can use this information to test the success or failure of the fetching of the recording.</p>
<p>That&rsquo;s all. We have successfully implemented a Drozer module which can record the sound on an Android device without the knowledge of the user. Do you smell something fishy here? The whole idea here depends on that particular <code>android.permission.RECORD_AUDIO</code> permission that our agent app had. It allowed our module to record without <em>user consent</em> (actually, the user gave her consent unknowingly while installing agent app). Many apps nowadays ask for arbitrarily random permissions. Those permissions might not be related to the functionality of the app in any way, but because there is no method to install apps without granting these permissions, the users grant all permissions to these apps. That can be exploited very easily. This tutorial tried to show one of such exploitations.</p>
<p>Here are some exercises that you should try if you want to learn more about Drozer module development.</p>
<ul>
<li>A module to initiate a call on a device.</li>
<li>A module to get the clipboard values on a device</li>
<li>Try finding a public exploit on Android forums such as XDA and implement that exploit as a Drozer module.</li>
</ul>
<p>Slightly tougher one.</p>
<ul>
<li>A module to terminate a call without user intervention (I do not know if it is possible to do this programmatically. If you implement this successfully, do let me know in the comments section.)</li>
</ul>
<p>Thanks for reading. Cheers :)</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/drozer" term="drozer" label="Drozer" />
                             
                                <category scheme="https://yashagarwal.in/tags/android" term="android" label="android" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[So I Applied for GSoC]]></title>
            <link href="https://yashagarwal.in/posts/2018/03/so-i-applied-for-gsoc/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2018/03/fossmeet18/?utm_source=atom_feed" rel="related" type="text/html" title="FOSSMeet&#39;18" />
                <link href="https://yashagarwal.in/posts/2017/03/fossmeet17/?utm_source=atom_feed" rel="related" type="text/html" title="FOSSMeet&#39;17" />
                <link href="https://yashagarwal.in/posts/2016/04/searching-the-goal/?utm_source=atom_feed" rel="related" type="text/html" title="Searching the goal" />
            
                <id>https://yashagarwal.in/posts/2018/03/so-i-applied-for-gsoc/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-03-28T20:58:26+05:30</published>
            <updated>2018-03-28T20:58:26+05:30</updated>
            
            
            <content type="html"><![CDATA[



    

    
    

    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.css" integrity="sha256-sCl5PUOGMLfFYctzDW3MtRib0ctyUvI9Qsmq2wXOeBY=" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/default-skin/default-skin.min.css" integrity="sha256-BFeI1V+Vh1Rk37wswuOYn5lsTcaU96hGaI7OUVCLjPc=" crossorigin="anonymous" />

    
    <link rel="stylesheet" href="/css/photoswipe.min.d780348a887d97b4d6cc664301a2941706e4a02aeb1533524fcce3b7b9b64b4f.css">

    

    
    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
        
        <div class="pswp__bg"></div>
        
        <div class="pswp__scroll-wrap">
            
            <div class="pswp__container">
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
            </div>
            
            <div class="pswp__ui pswp__ui--hidden">
                <div class="pswp__top-bar">
                    
                    <div class="pswp__counter"></div>
                    <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                    <button class="pswp__button pswp__button--share" title="Share"></button>
                    <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                    <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>
                    
                    
                    <div class="pswp__preloader">
                        <div class="pswp__preloader__icn">
                            <div class="pswp__preloader__cut">
                                <div class="pswp__preloader__donut"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                    <div class="pswp__share-tooltip"></div>
                </div>
                <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
                </button>
                <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
                </button>
                <div class="pswp__caption">
                    <div class="pswp__caption__center"></div>
                </div>
            </div>
        </div>
    </div>

<p>I first heard about Google Summer of Code (GSoC) in my second year (2016). It was quite fascinating to know that such a program exists (possibly because of that super attractive amount of money, $5500 at that time). I researched about it and sent emails to some mentors. The replies were mostly encouraging, but I still could not gather the courage to apply as I used to doubt my capabilities. Then last year (2017) again, I decided that I should try for GSoC one more time. I looked for the projects, started reading codebase of one project, but due to my lack of determination, I again did not apply.</p>
<p>In the summers of 2017, I got some time to think about it. I decided that for the next year, I will try everything to make sure that I apply for GSoC 2018. I started coding as much as possible and pushing my code to GitHub to build an impressive profile.</p>
<p>Now I can say that I am satisfied with my efforts to some extent. I did start some good <a href="https://github.com/yashhere/BeautifyMP3">open</a> <a href="https://github.com/yashhere/ConMan">source</a> <a href="https://github.com/yashhere/Goofy">projects</a>. They are not very extraordinary, but something is better than nothing. I dived into Debian packaging also and volunteered for a FOSS event. Spreading awareness about FOSS is also contributing to FOSS. Isn&rsquo;t it?</p>
<p>Coming back to GSoC, this year, I have successfully submitted a proposal to the Debian Project. It does not matter whether I get it or not. I overcame one of my biggest fears of doubting my capabilities. It is something that I was trying to do for the last two years. This moment is worth celebrating.</p>
<p>Read about my GSoC project on <a href="https://wiki.debian.org/SummerOfCode2018/Projects#SummerOfCode2018.2FProjects.2FBootTorrent.Boot_many_machines_via_bittorrent">Boot Many Machines via Bittorrent</a>. It is related to something which I learned in <a href="http://athena.nitc.ac.in/">SSL</a> as SSL admin.</p>
<p>Read my project proposal on <a href="https://docs.google.com/document/d/1N7wcc6rwFuauTS-jH2JuLDnZIX0w79AzTPSvSJU3PtA/edit?usp=sharing">Google Drive</a> or <a href="https://wiki.debian.org/YashAgarwal/GSoCProposal">Debian Wiki</a>.</p>



    <link rel="stylesheet" href="/css/hugo-easy-gallery.css">
    


<div class="box"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2018-03-28/gsoc-timeline.png#center" alt="gsoc timeline"/>
        </div>
        <a href="/images/2018-03-28/gsoc-timeline.png#center" itemprop="contentUrl"></a>
    </figure>
</div>

<p>Eagerly waiting for the results. 😄</p>
<p><strong>Update(24/04/2018)</strong>: Finally, I did not get into GSoC this time too. No worries. I anticipated the results and prepared backup plans. Looking forward to a productive summer. :)</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/write-ups" term="write-ups" label="Write-ups" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/cse" term="cse" label="CSE" />
                             
                                <category scheme="https://yashagarwal.in/tags/foss" term="foss" label="FOSS" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[FOSSMeet'18]]></title>
            <link href="https://yashagarwal.in/posts/2018/03/fossmeet18/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2017/03/fossmeet17/?utm_source=atom_feed" rel="related" type="text/html" title="FOSSMeet&#39;17" />
                <link href="https://yashagarwal.in/posts/2018/03/deactivated-my-facebook-account/?utm_source=atom_feed" rel="related" type="text/html" title="Deactivated My Facebook Account" />
                <link href="https://yashagarwal.in/posts/2018/01/why-a-sanskrit-shloka/?utm_source=atom_feed" rel="related" type="text/html" title="Why a Sanskrit Shloka?" />
                <link href="https://yashagarwal.in/posts/2016/04/searching-the-goal/?utm_source=atom_feed" rel="related" type="text/html" title="Searching the goal" />
            
                <id>https://yashagarwal.in/posts/2018/03/fossmeet18/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-03-26T11:57:14+05:30</published>
            <updated>2018-03-26T11:57:14+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>I know I am very late in writing this post. It has been almost one and a half months since the last edition of FOSSMeet is over. I have been a part of FOSSMeet both as a participant and a volunteer. I want to share some of my observations, views, and suggestions through this post. I intend to keep a memory of my most favorite event of NIT Calicut. Juniors can read this post and think about ways to improve FOSSCell and FOSSMeet. I did the same by reading Kartik&rsquo;s <a href="http://techglider.in/post/2013/04/14/of-fossmeets-at-nit-calicut/"><em>post</em></a>.</p>
<p>Before I start, if you have not read my <em>post</em> on the 2017 edition of the FOSSMeet, it is a good time to read that first. This post is going to be a follow up from where I stopped that post. <a href="/posts/2017/03/fossmeet17/">Here</a> is the link to that post.</p>
<p>I&rsquo;ll start by quoting some lines from the last paragraph of that article.</p>
<blockquote>
<p>I hope that I will find time next year for FOSSMeet, although I would prefer to attend FOSSMeet as a participant observing everything silently rather than being a part of the organizing team.</p>
</blockquote>
<p>These were my views after last year&rsquo;s FOSSMeet. I felt that I was not getting any benefit from volunteering for FOSSMeet. It is one thing that you help conducting an event, but on a personal level, I was not learning much. I wanted to attend talks and learn about free software philosophies, but because I was busy volunteering for workshops in <em>SSL</em>, I could not participate in any lecture. So I wanted to make sure that in my last FOSSMeet, I do attend all the talks and learn something new.</p>
<p>But fate had its plans for me. Few days after writing that post, Simsar, the coordinator of FOSSMeet &lsquo;17, came to my room and asked me if I would like to become the next secretary of FOSSCell. Those who don&rsquo;t know, FOSSCell is the group of people in NITC, who are supposed to work on free and open-source contribution. But it is not very active for the last few years. Probably the seniors decided to give me a chance because I was quite active in providing my suggestions for the FOSSCell when I was in the third year and had shown my intentions to reinitiate FOSSCell. Anyway, I was not very enthusiastic about this opportunity and <em>refused</em> to accept it. I thought that the topic was closed and did not bother about it much.</p>
<p>Fast forward two months, I was at home thinking about the reasons that I could not get an internship were. I figured out some reasons (a topic reserved for a later post!) and decided that whatever happens, I will not commit these mistakes again. A few days later, Simsar messaged me on WhatsApp, asking whether I am still interested in the post of secretary. This time, I immediately accepted his offer. I was under the influence of my learnings from past mistakes. And that&rsquo;s how I became the unexpected (at least for my batchmates) secretary of FOSSCell.</p>
<p>I was placed in the first few days of placement season, so I was free on that front. CSEA had conducted a Debian packaging workshop at the very beginning of the semester, but I could not attend that workshop. So I messaged Pirate Praveen sir privately and asked him whether he can guide me about Debian packaging. As with most of the senior open source contributors, he was very enthusiastic about helping me. So that&rsquo;s how I restarted my journey in open source. It was a fun time learning about free software ideology from Pirate Praveen. We decided to conduct a small Debian Packaging hackathon in NITC. As it is a norm in CSE NITC nowadays about any such activity, people did not turn up at all for this hackathon. Only five people showed up for the hackathon. That was disappointing. Though, on a personal level, I was satisfied. I submitted two packages to the Debian unstable repository. We did not have any other activity for the remaining of that semester.</p>
<p>Okay, enough of the background!</p>
<h2 id="my-observations">My Observations</h2>
<p>We opted for the <a href="https://talkfunnel.com">HasGeek&rsquo;s Funnel</a> for the proposal acceptance this time also. The funnel works quite well for our workflow. We did not get many <a href="https://fossmeet-nitc.talkfunnel.com/2018">proposals</a> in the beginning. I had read somewhere on the web that FOSSMeet had a MiniDebConf once. That seemed like an excellent idea to the team. So I talked with Praveen sir, about the possibility of a separate Debian track during FOSSMeet. I thought that Debian packaging might be a good and easy way to introduce NITC students to Open-source software.</p>
<p>In previous editions of FOSSMeets, the organizers used to receive the <a href="http://techglider.in/post/2013/04/14/of-fossmeets-at-nit-calicut/">feedback</a> that the student audience is entirely novice for some sessions and the supposedly advanced session turned out to be a beginner session. We were well aware of this problem and thought of a way to solve this. The solution may be a controversial one because even I have mixed feelings about this solution. We decided to look at the GitHub profiles of each participant and then select a few participants rather than allowing each and everyone who is paying money to attend the FOSSMeet. Our experience from last year was awful in this aspect. Students from various colleges of Kerala came to FOSSMeet just to get the certificate. Such an audience was not contributing anything to FOSSMeet.</p>
<p>Now, let me explain why I think that this is not the right way to filter good participants. If I am not wrong, one motive behind organizing such <em>student run conferences</em> is to inspire beginners and college students to learn about free and open-source software and to allow them to learn about new technologies. Now, it should not matter if the person has any prior experience or not. In our case, we prioritized the <em>previous experience</em> part and neglected <em>the will to learn</em>. I know that it is tough to identify if a person is really interested in the event or just coming for the certificate, but still, there must be some better way to solve this issue. For now, this method is the best option available, and it worked well enough for our purpose.</p>
<p>The decision to allow only 150 participants was an excellent move. We had decided not to have parallel workshops and talks. This decision was a direct outcome of some of the bad feedback from the previous FOSSMeets. The decisions to check GitHub profiles and to restrict the number of participants made sure that this edition of FOSSMeet has the most appropriate (read qualified) audience for any session.</p>
<p>We publicized the event among CSED&rsquo;s first years. We even had a beginner level Git workshop for them. We were expecting that they will come to take part in the event. These events provide excellent opportunities for newcomers to learn about Computer Science and its various fields. I used to give priority to a CSEA event over any cultural event when I was in my first year. But, the turnout of first-year students for FOSSMeet was very less. I sometimes worry, how are these people going to continue organizing FOSSMeet. In the end, conducting this event will become a burden (of carrying a legacy) for them, and they will hold this event just like any other useless event that happens in NITC every weekend. We even made the entry, free for them; still, if they don&rsquo;t feel interested in the event, then they are at an apparent loss.</p>
<p>One other complaint that we received from the community was that the procedure of selecting proposals from the funnel is not transparent. <em>In my opinion</em>, it is true. The organizing team of FOSSMeet sit together and choose the topics based on the relevance of the topics and its relation to FOSS ideologies. Most of the proposals in the funnel were related to some technology or programming language. We aimed to give a chance to the talks which explain more about free software in general. Most of the proposals selected this year revolved around this theme with one or two exceptions. But I think it might be a good idea to publicly tell the factors that are taken into account while selecting proposals. FOSSMeet is an event about free software and the community, and it is the responsibility of the organizers to make sure that they adhere to the ideologies of free software, including transparency.</p>
<p>The decision to select philosophical topics might seem like a great thing. Still, in reality, the student audience is not very interested in listening to some random guy preaching about something which is not very relevant to them. Students want more technical knowledge, which they can get only from technical talks and workshops. I hope that future FOSSMeet organizers will be more careful about maintaining the right balance between technical and not technical discussions and workshops.</p>
<p>Some students from Amrita college complained about our selection of the same speakers every year. In my opinion, it is a very valid complaint. In my last three FOSSMeets, almost 3-5 speakers are giving talks/workshops every year. I am not saying that it is bad in any way, but the organizing team can start a bit early and invite some other prominent faces of the field from different parts of the country. The issue is that we begin contacting speakers very late and the people coming from far corners of the country or from abroad get very little time for making arrangements.</p>
<p>We used to have panel discussions in FOSSMeet. For the last two years, we stopped having one. I think that a panel discussion is a great way to learn about different viewpoints of experienced people. It will be good if the future organizers can squeeze one such panel discussion in the FOSSMeet schedule.</p>
<p>Now coming to my memories of this edition of the event, I liked the video conference by Bradley M Kuhn, the president of the Software Freedom Conservancy. The way he explained current issues in software freedom was fascinating. I was amazed by his humbleness. I was looking forward to the talk by RMS, but he could not deliver his speech due to some technical issues.</p>
<p><strong>On a lighter note</strong>, It feels strange when you are working in a team where everyone except you speaks a language that you don&rsquo;t understand. I know that it is a very natural behavior, and I have no <em>complains</em> about it. But in my opinion, language is a tool of communication, and when you are not able to communicate your views to others, then there is some problem. When I think about these issues, I admire the forefathers of India for their farsightedness to make a <em>foreign</em> but <em>universal</em> language, one of the official languages of the Republic of India.</p>
<h2 id="conclusion">Conclusion</h2>
<p>I feel at a loss because I got the chance to attend only three FOSSMeets (2015 edition never came to reality). It has been a great experience both as a participant and a volunteer for me over the last three years. I have written two posts about FOSSMeets and have tried to cover everything which I liked or disliked about this event. I might be very <em>biased</em> in the views expressed here as I was very disappointed with the lack of any activity from the FOSSCell side to introduce students about open source contributions. My <em>lack</em> of good communication skills made sure that the trend continues in my tenure also. I wish good luck to the next office bearers and hope that they will not continue this trend. 😄</p>
<p>Thanks to all fourth years &ndash; Sajmal, <strong>Navaneeth</strong>, Nithin, Kumar, Pavithra, Vrushabh, Nitin, and others for making the FOSSMeet a success. All the best to all juniors &ndash; Abhiram, Archana, Olive, Amruth, Gazala, Abhirami, Anupam, Madhumita, Adil, Vysakh, Arun, and others. Special mention to some second years also &ndash; Nirmal, Faris, Darshana, Kavitha, Naina, Vishnu, and others for helping us out in a smooth organization of the event.</p>
<p>Feeling relieved now, as this long overdue post is finally complete. If you find the article interesting, share your views in the comments section. Thanks for reading. ☺</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/write-ups" term="write-ups" label="Write-ups" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/nitc" term="nitc" label="NITC" />
                             
                                <category scheme="https://yashagarwal.in/tags/fossmeet" term="fossmeet" label="FOSSMeet" />
                             
                                <category scheme="https://yashagarwal.in/tags/foss" term="foss" label="FOSS" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Deactivated My Facebook Account]]></title>
            <link href="https://yashagarwal.in/posts/2018/03/deactivated-my-facebook-account/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2018/01/why-a-sanskrit-shloka/?utm_source=atom_feed" rel="related" type="text/html" title="Why a Sanskrit Shloka?" />
                <link href="https://yashagarwal.in/posts/2017/03/fossmeet17/?utm_source=atom_feed" rel="related" type="text/html" title="FOSSMeet&#39;17" />
                <link href="https://yashagarwal.in/posts/2016/04/searching-the-goal/?utm_source=atom_feed" rel="related" type="text/html" title="Searching the goal" />
            
                <id>https://yashagarwal.in/posts/2018/03/deactivated-my-facebook-account/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-03-23T21:00:44+05:30</published>
            <updated>2018-03-23T21:00:44+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>Today, I deactivated my Facebook account again. For the last few days, I was feeling that I am using Facebook excessively. It was affecting my work, my <em>public life</em>. I was using Facebook day in and day out. Today when I woke up in the morning, I first opened Facebook and didn&rsquo;t leave my bed for one hour. I realized that I had wasted one hour merely browsing through useless stuff. Immediately, I decided to deactivate the account for some time and analyze how much my life changes by one less distraction.</p>
<p>Coincidentally, it is the time of <a href="http://ragam.org.in/Main/">Ragam</a>, the annual cultural festival of NIT Calicut. I <em>introspect</em> myself every year at the same time. For the last two years, this introspection is resulting in the deactivation of my Facebook account. It is the reason why I could finish all my pending projects in the summers.</p>
<p>I sometimes feel that after coming to NITC, I have become much more socially awkward and even more of a loner than I was before. I never enjoyed going into public events, but in college, that tendency seems to have increased a lot. Now, I do not feel comfortable with this state. I want to change this, but every time I try, there is some <em>invisible force</em> which pulls me back from expressing myself. NITC&rsquo;s environment was entirely different for a person like me, who always preferred to stay alone. So, I built a <em>bubble</em> around myself, where there is no one to disturb or doubt me. It was okay in the initial years of my campus life when circumstances were not in my favor, but now this bubble is an obstacle for me. I feel difficulty in coming out of this bubble.</p>
<p>There are only one and a half months left of my undergraduate life. I might not overcome this fear at this time. But I hope that the change of environment will help me cross this barrier. I have learned a lot of lessons from my mistakes in the past, and I hope that I will not repeat one of the biggest mistakes of my life.</p>
<p>I will write again about the changes I feel after deactivating Facebook. In the meantime, I will try to spend more time with my friends and less on my laptop. 😌</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/write-ups" term="write-ups" label="Write-ups" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/nitc" term="nitc" label="NITC" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Develop a Theme for Hugo]]></title>
            <link href="https://yashagarwal.in/posts/2018/03/develop-a-theme-for-hugo/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2017/02/setting-up-hugo-automatic-deployment-to-github-with-wercker/?utm_source=atom_feed" rel="related" type="text/html" title="Setting up Hugo automatic deployment to Github with Wercker" />
            
                <id>https://yashagarwal.in/posts/2018/03/develop-a-theme-for-hugo/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-03-02T11:27:05+05:30</published>
            <updated>2018-03-02T11:27:05+05:30</updated>
            
            
            <content type="html"><![CDATA[<p><em>This article was originally published on <a href="https://www.zeolearn.com/magazine/develop-a-theme-for-hugo">zeolearn</a>.</em></p>
<h2 id="introduction">Introduction</h2>
<p>In this tutorial, I will show you how to create a basic Hugo theme. I assume that you are familiar with basic HTML, and how to write content in markdown. I will be explaining the working of Hugo and how it uses Go templating language and how you can use these templates to organize your content. As this post will be focusing mainly on Hugo&rsquo;s working, I will not be covering CSS here.</p>
<p>We will be starting with some necessary information about the terminology used in Hugo. Then we will create a Hugo site with a very basic template. Then we will add new templates and posts to our site as we delve further into Hugo. With very slight variations to what you will learn here, you will be able to create different types of real-world websites.</p>
<p>Now, a short tutorial about the flow of this post. The commands that start with <code>$</code> are meant to be run in the terminal or command line. The output of the command will follow immediately. Comments will begin with <code>#</code>.</p>
<h2 id="some-terminology">Some Terminology</h2>
<h3 id="configuration-file">Configuration File</h3>
<p>Hugo uses a configuration file to identify common settings for your site. It is located in the root of your site. This file can be written in TOML, YAML or JSON formats. Hugo identifies this file using the extension.</p>
<p>By default, Hugo expects to find Markdown files in your <code>content/</code> directory and template files in your <code>themes/</code> directory. It will create HTML files in your <code>public/</code> directory. You can change this by specifying alternate locations in the configuration file.</p>
<h3 id="content">Content</h3>
<p>The content files will contain the metadata and text about your posts. A content file can be divided into two sections, the top section being frontmatter and the next section is the markdown that will be converted to HTML by Hugo. The content files reside in <code>/content</code> directory.</p>
<h3 id="frontmatter">Frontmatter</h3>
<p>The frontmatter section contains information about your post. It can be written in JSON, TOML or YAML. Hugo identifies the type of frontmatter used with the help of identifying tokens(markers). TOML is surrounded by <code>+++</code>, YAML is by <code>---</code> and JSON is enclosed in curly braces <code>{</code> and <code>}</code>. The information in the front matter of a content type will be parsed to be used in the template for that specific content type while converting to HTML.</p>
<p>I prefer to use YAML, so you might need to translate your configurations if you are using JSON or TOML.</p>
<p>This is an example of frontmatter written in YAML.
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml">---<span class="w">
</span><span class="w"></span><span class="k">date</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;2018-02-11T11:45:05+05:30&#34;</span><span class="w">
</span><span class="w"></span><span class="k">title</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Basic Hugo Theming Tutorial.&#34;</span><span class="w">
</span><span class="w"></span><span class="k">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;A primer about theme development for Hugo, a static site generator written in Golang.&#34;</span><span class="w">
</span><span class="w"></span><span class="k">categories</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- Hugo<span class="w">
</span><span class="w">    </span>- Customization<span class="w">
</span><span class="w"></span><span class="k">tags</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- Theme<span class="w">
</span><span class="w"></span>---</code></pre></div></p>
<p>You can read more about different configuration options available for frontmatter <a href="https://gohugo.io/content-management/front-matter/#readout">here</a>.</p>
<h3 id="markdown">Markdown</h3>
<p>The markdown section is where you will write your actual post. The content written here will automatically be converted to HTML by Hugo with the help of a Markdown engine.</p>
<h3 id="templates">Templates</h3>
<p>In Hugo, templates govern the way; your content will be rendered to HTML. Each template provides a consistent layout when rendering the markdown content. The templates reside in the <code>/layouts</code> directory.</p>
<p>There are three types of templates: <em>single</em>, <em>list</em> and <em>partial</em>. Each kind of template take some content as input and transform it according to the way defined in the template.</p>
<h4 id="single-template">Single Template</h4>
<p>A single template is used to render a single page. The best example of this is <em>about</em> page.</p>
<h4 id="list-template">List Template</h4>
<p>A list template renders a group of related content. It can be all recent posts or all posts belonging to a particular category.</p>
<p>The homepage template is a specific type of list template. Hugo assumes that the homepage will serve as a bridge to all the other content on your website.</p>
<h3 id="partials">Partials</h3>
<p>Partials are short code snippets that can be injected in any other template type. They are instrumental when you want to repeat some content on every page of your website. The header and footer content are good candidates to be included in separate partials. It is a good practice to use partials liberally in your Hugo site as it adheres to <a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself">DRY</a> principle.</p>
<h2 id="okay-lets-start">Okay, Let&rsquo;s Start</h2>
<p>So now that you have a basic understanding of Hugo, we will create a new site using Hugo. Hugo provides a command to generate new sites. We will use that command to scaffold our site. It will create a basic skeleton of your site and will give you a basic configuration file.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ hugo new site ~/zeo
$ <span class="nb">cd</span> ~/zeo
$ ls -l
total <span class="m">28</span>
drwxr-xr-x <span class="m">2</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 11:13 archetypes
-rw-r--r-- <span class="m">1</span> yash hogwarts   <span class="m">82</span> Feb <span class="m">11</span> 11:13 config.toml
drwxr-xr-x <span class="m">2</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 11:13 content
drwxr-xr-x <span class="m">2</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 11:13 data
drwxr-xr-x <span class="m">2</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 11:13 layouts
drwxr-xr-x <span class="m">2</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 11:13 static
drwxr-xr-x <span class="m">2</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 11:13 themes</code></pre></div></p>
<p><strong>Note:</strong> I will use YAML format for the config file. Hugo, By default, uses TOML format.</p>
<p>A small description of this directory structure:</p>
<ul>
<li>
<p><strong>archetypes</strong>: The archetypes contains predefined frontmatter format for your website&rsquo;s content types. It facilitates consistent metadata format across all the content of your site.</p>
</li>
<li>
<p><strong>content</strong>: The content directory contains the markdown files that will be converted to HTML and served to the user.</p>
</li>
<li>
<p><strong>data</strong>: From Hugo documentation</p>
<blockquote>
<p>The data folder is where you can store additional data for Hugo to use when generating your site. Data files are not used to generate standalone pages; rather, they are meant to be supplemental to content files. This feature can extend the content in case your front matter fields grow out of control. Or perhaps you want to show a larger dataset in a template (see example below). In both cases, it is a good idea to outsource the data in their files.</p>
</blockquote>
</li>
<li>
<p><strong>layouts</strong>: The layouts folder stores all the templates files which form the presentation of the content files.</p>
</li>
<li>
<p><strong>static</strong>: The static folder will contain all the static assets such as <code>CSS</code>, <code>JS</code> and <code>image</code> files.</p>
</li>
<li>
<p><strong>themes</strong>: The themes folder is where we will be storing our theme.</p>
</li>
</ul>
<p>We will edit the <code>config.yaml</code> file to edit some basic configuration of the site.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ vim config.yaml
baseURL: /
title: <span class="s2">&#34;My First Blog&#34;</span>
defaultContentLanguage: en
languages:
  en:
    lang: en
    languageName: English
    weight: <span class="m">1</span>
MetaDataFormat: <span class="s2">&#34;yaml&#34;</span></code></pre></div></p>
<p>Now when you run your site, Hugo will show some errors. It is normal because our layouts and themes directories are still empty.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ hugo --verbose
INFO 2018/02/11 11:20:59 Using config file: /home/yash/zeo/config.yaml
Building sites … INFO 2018/02/11 11:20:59 syncing static files to /home/yash/zeo/public/
WARN 2018/02/11 11:20:59 No translation bundle found <span class="k">for</span> default language <span class="s2">&#34;en&#34;</span>
WARN 2018/02/11 11:20:59 Translation func <span class="k">for</span> language en not found, use default.
WARN 2018/02/11 11:20:59 i18n not initialized, check that you have language file <span class="o">(</span>in i18n<span class="o">)</span> that matches the site language or the default language.
WARN 2018/02/11 11:20:59 <span class="o">[</span>en<span class="o">]</span> Unable to locate layout <span class="k">for</span> <span class="s2">&#34;taxonomyTerm&#34;</span>:
...
...</code></pre></div></p>
<p>This command will also create a new directory called <code>public/</code>. This is the directory where Hugo will save all the generated HTML files related to your site. It also stores all static data in this folder.</p>
<p>Let&rsquo;s have a look at the <code>public</code> folder.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ ls -l public/
total <span class="m">16</span>
drwxr-xr-x <span class="m">2</span> yash hogwarts <span class="m">4096</span> Feb  <span class="m">11</span> 11:22 categories
-rw-r--r-- <span class="m">1</span> yash hogwarts  <span class="m">400</span> Feb  <span class="m">11</span> 11:25 index.xml
-rw-r--r-- <span class="m">1</span> yash hogwarts  <span class="m">383</span> Feb  <span class="m">11</span> 11:25 sitemap.xml
drwxr-xr-x <span class="m">2</span> yash hogwarts <span class="m">4096</span> Feb  <span class="m">11</span> 11:22 tags</code></pre></div></p>
<p>Hugo generated some XML files, but there are no HTML files. It is because we have not created any content in our content directory yet.</p>
<p>At this point, you have a working site with you. All that is left is to add some content and a theme to your site.</p>
<h3 id="create-a-new-theme">Create a new theme</h3>
<p>Hugo doesn&rsquo;t ship with a default theme. There are a lot of themes available on Hugo website. Hugo also ships with a command to create new themes.</p>
<p>In this tutorial, we will be creating a theme called <code>zeo</code>. As mentioned earlier, my aim is to show you how to use Hugo&rsquo;s features to fill out your HTML files from the markdown content, I will not be focusing on CSS. So the theme will be ugly but functional.</p>
<p>Let&rsquo;s create a basic skeleton of the theme. It will create the directory structure of the theme and place empty files for you to fill in.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># run it from the root of your site</span>
$ hugo new theme zeo
$ ls -l themes/zeo/
total <span class="m">20</span>
drwxr-xr-x <span class="m">2</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 11:30 archetypes
drwxr-xr-x <span class="m">4</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 11:30 layouts
-rw-r--r-- <span class="m">1</span> yash hogwarts <span class="m">1081</span> Feb <span class="m">11</span> 11:30 LICENSE.md
drwxr-xr-x <span class="m">4</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 11:30 static
-rw-r--r-- <span class="m">1</span> yash hogwarts  <span class="m">432</span> Feb <span class="m">11</span> 11:30 theme.toml</code></pre></div>
Fill out <code>LICENSE.md</code> and <code>theme.toml</code> file if you plan to distribute your theme to outside world.</p>
<p>Now we will edit our <code>config.yaml</code> file to use this theme.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ vim config.yaml
theme: <span class="s2">&#34;zeo&#34;</span></code></pre></div></p>
<p>Now that we have an empty theme, let&rsquo;s build the site.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ hugo --verbose
INFO 2018/02/11 11:34:14 Using config file: /home/yash/zeo/config.yaml
Building sites … INFO 2018/02/11 11:34:14 syncing static files to /home/yash/zeo/public/
WARN 2018/02/11 11:34:14 No translation bundle found <span class="k">for</span> default language <span class="s2">&#34;en&#34;</span>
WARN 2018/02/11 11:34:14 Translation func <span class="k">for</span> language en not found, use default.
WARN 2018/02/11 11:34:14 i18n not initialized, check that you have language file <span class="o">(</span>in i18n<span class="o">)</span> that matches the site language or the default language.

                   <span class="p">|</span> EN
+------------------+----+
  Pages            <span class="p">|</span>  <span class="m">3</span>
  Paginator pages  <span class="p">|</span>  <span class="m">0</span>
  Non-page files   <span class="p">|</span>  <span class="m">0</span>
  Static files     <span class="p">|</span>  <span class="m">0</span>
  Processed images <span class="p">|</span>  <span class="m">0</span>
  Aliases          <span class="p">|</span>  <span class="m">0</span>
  Sitemaps         <span class="p">|</span>  <span class="m">1</span>
  Cleaned          <span class="p">|</span>  <span class="m">0</span>

Total in <span class="m">12</span> ms</code></pre></div>
These warnings are harmless in our case, as we are developing our site in English only.</p>
<p>Hugo does two things while generating your website. It transforms all the content files to HTML using the defined templates, and its copies static files into the site. Static files are not transformed by Hugo. They are copied exactly as they are.</p>
<h3 id="the-cycle">The Cycle</h3>
<p>The usual development cycle when developing themes for Hugo is:</p>
<ul>
<li>Delete the <code>/public</code> folder</li>
<li>Run the built-in web server and open your site in the browser</li>
<li>Make changes to your theme files</li>
<li>View your changes in browser</li>
<li>Repeat step 3</li>
</ul>
<p>It is necessary to delete the <code>public</code> directory because Hugo does not try to remove any outdated files from this folder. So the old data might interfere with your workflow.</p>
<p>It is also a good idea to track changes in your theme with the help of a version control software. I prefer Git for this. You can use others according to your preference.</p>
<h3 id="run-your-site-in-the-browser">Run your site in the browser</h3>
<p>Hugo has a built-in web server which helps considerably while developing themes for Hugo. It also has a <em>live reload</em> and <em>watch</em> feature which watches for changes in your files and reloads the web page accordingly.</p>
<p>Run it with <code>hugo server</code> command.</p>
<p>Now open <a href="http://localhost:1313">http://localhost:1313</a> in your browser. By default, Hugo will not show anything, because it cannot find any HTML file in the public directory.</p>
<p>The command to load web server with <code>--watch</code> option is:
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ hugo server --watch --verbose
...
...
                   <span class="p">|</span> EN
+------------------+----+
  Pages            <span class="p">|</span>  <span class="m">4</span>
  Paginator pages  <span class="p">|</span>  <span class="m">0</span>
  Non-page files   <span class="p">|</span>  <span class="m">0</span>
  Static files     <span class="p">|</span>  <span class="m">0</span>
  Processed images <span class="p">|</span>  <span class="m">0</span>
  Aliases          <span class="p">|</span>  <span class="m">0</span>
  Sitemaps         <span class="p">|</span>  <span class="m">1</span>
  Cleaned          <span class="p">|</span>  <span class="m">0</span>

Total in <span class="m">11</span> ms
...
...</code></pre></div></p>
<h3 id="update-the-home-page-template">Update the Home page template</h3>
<p>Hugo looks for following directories in theme&rsquo;s <code>/layout</code> folder to search for <code>index.html</code> page.</p>
<ul>
<li>index.html</li>
<li>_default/list.html</li>
<li>_default/single.html</li>
</ul>
<p>It is always desirable to update the most specific template related to the content type. It is not a hard and fast rule, but a good generalization to follow.</p>
<p>We will first make a static page to see if our <code>index.html</code> page is rendered correctly.</p>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">$ vim themes/zeo/layouts/index.html
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Hello World!<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></div>
<p>Build the site and verify the results. You should see <em>Hello World!</em> when you open <a href="http://localhost:1313">http://localhost:1313</a>.</p>
<h3 id="building-a-functional-home-page">Building a functional Home Page</h3>
<p>Now we will create a home page which will reflect the content of our site every time we build it.</p>
<p>For that, we will first create some new posts. We will display these posts as a list on the home page and on their pages, too.</p>
<p>Hugo has a command for generating skeleton of posts, just like it did for sites and themes.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ hugo --verbose new post/first.md
INFO 2018/02/11 11:40:58 Using config file: /home/yash/zeo/config.yaml
INFO 2018/02/11 11:40:58 attempting to create <span class="s2">&#34;post/first.md&#34;</span> of <span class="s2">&#34;post&#34;</span> of ext <span class="s2">&#34;.md&#34;</span>
INFO 2018/02/11 11:40:58 curpath: /home/yash/zeo/archetypes/default.md
...
...
/home/yash/zeo/content/post/first.md created</code></pre></div></p>
<p>The <code>new</code> command uses an archetype to generate the frontmatter for new posts. When we created our site, hugo created a default archetype in the <code>/archetype</code> folder.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ cat archetypes/default.md
---
title: <span class="s2">&#34;{{ replace .Name &#34;</span>-<span class="s2">&#34; &#34;</span> <span class="s2">&#34; | title }}&#34;</span>
date: <span class="o">{{</span> .Date <span class="o">}}</span>

---</code></pre></div></p>
<p>It is a good idea to create a default archetype in the themes folder also so that users can override the theme&rsquo;s archetype with their archetype whenever they want.</p>
<p>We will create a new archetype for our posts&rsquo; frontmatter and delete the default <code>archetype/default.md</code>.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ rm -rf archetype/default.md
$ vim themes/zeo/archetypes/post.md
---
title: <span class="s2">&#34;{{ replace .Name &#34;</span>-<span class="s2">&#34; &#34;</span> <span class="s2">&#34; | title }}&#34;</span>
date: <span class="o">{{</span> .Date <span class="o">}}</span>
Description: <span class="s2">&#34;&#34;</span>
Tags: <span class="o">[]</span>
Categories: <span class="o">[]</span>

---</code></pre></div></p>
<p>Create one more post in <code>content/post</code> directory.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ hugo --verbose new post/second.md
INFO 2018/02/11 12:13:56 Using config file: /home/yash/zeo/config.yaml
INFO 2018/02/11 12:13:56 attempting to create <span class="s2">&#34;post/second.md&#34;</span> of <span class="s2">&#34;post&#34;</span> of ext <span class="s2">&#34;.md&#34;</span>
INFO 2018/02/11 12:13:56 curpath: /home/yash/zeo/themes/zeo/archetypes/post.md
...
...
/home/yash/zeo/content/post/second.md created</code></pre></div></p>
<p>See the difference. Hugo used the theme&rsquo;s archetype for generating the frontmatter this time.</p>
<p>By default, Hugo does not generate posts with an empty content section. So you will need to add some content before you try to build the site.</p>
<p>Let&rsquo;s look at the <code>content/post/first.md</code> file, after adding content to it.
<div class="highlight"><pre class="chroma"><code class="language-markdown" data-lang="markdown">$ cat content/post/first.md
---
title: &#34;First&#34;
date: 2018-02-11T11:35:58+05:30
draft: true
Tags: [&#34;first&#34;]
Categories: [&#34;Hugo&#34;]

---

Hi there. My first Hugo post</code></pre></div></p>
<p>Now that our posts are ready, we need to create templates to show them in a list on the home page and to show their content on separate pages for each post.</p>
<p>We will first edit the template for the home page that we created previously. We will then modify &ldquo;single&rdquo; templates which are used to generate output for a single content file. We also have &ldquo;list&rdquo; templates which are used to group similar type of content and render them as a list.
The home page will show a list of last ten posts that we have created. Let&rsquo;s update its template to add this logic.</p>
<h3 id="update-your-home-page-to-show-your-content">Update your home page to show your content</h3>
<p>Now add your template code to <code>themes/zeo/layouts/index.html</code>.
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">$ vim themes/zeo/layouts/index.html
$ cat !$
cat themes/zeo/layouts/index.html
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
  {{ range first 10 .Data.Pages }}
    <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
  {{ end }}
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></div></p>
<p>Hugo uses Go Template Engine. This engine scans the templates for commands that are enclosed between <code>{{</code> and <code>}}</code>. In this template, the commands are <code>range</code>, <code>first</code>, <code>.Data.Pages</code>, <code>.Title</code> and <code>end</code>.</p>
<p>The template implies that we are going to get first 10 latest pages from our content folder and render their title as <code>h1</code> heading.</p>
<p><code>range</code> is an iterator function. Hugo treats every HTML file created as a page, so <code>range</code> will loop through all the pages created. Here we are instructing <code>range</code> to stop after first ten pages.</p>
<p>The <code>end</code> command signals the end of the <em>range</em> iterator. The engine loops back to the next iteration as soon as it encounters the <em>end</em> command. Everything between <em>range</em> and <em>end</em> will be evaluated for each iteration of the loop.</p>
<p>Build the website and see the changes. The homepage now shows our two posts. However, you cannot click on the posts and read their content. Let&rsquo;s change that too.</p>
<h3 id="linking-your-posts-on-home-page">Linking your posts on Home Page</h3>
<p>Let&rsquo;s add a link to the post&rsquo;s page from home page.
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">$ vim themes/zeo/layouts/index.html
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
  {{ range first 10 .Data.Pages }}
    <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{{ .Permalink }}&#34;</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
  {{ end }}
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></div></p>
<p>Build your site and see the result. The titles are now links, but when you click on them, it takes you to a page which says <code>404 page not found</code>. That is expected because we have not created any template for the single pages where the content can be rendered. So Hugo could not find any template, and it did not output any HTML file. We will change that in a minute.</p>
<p>We want to render the posts, which are in <code>content/post</code> directory. That means that their section is post and their type is also post.</p>
<p>Hugo uses section and type information to identify the template file for each piece of content. It will first look for a template file which matches the section or type of the content. If it could not find it, then it will use <code>_default/single.html</code> file.</p>
<p>Since we do not have any other content type yet, we will just start by updating the <code>_default/single.html</code> file.</p>
<p>Remember that Hugo will use this file for every content type for which we have not created a template. However, for now, we will accept that cost as we do not have any other content type with us. We will refactor our templates to accommodate more content types, as we add more content.</p>
<p>Update the template file.
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">$ vim themes/zeo/layouts/_default/single.html
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
  {{ .Content }}
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></div></p>
<p>Build the site and verify the results. You will see that on clicking on <code>first</code>, you get the usual result, but clicking on <code>second</code> still produces the <code>404 page not found</code> error. It is because Hugo does not generate pages with empty content. Remember I mentioned it earlier.</p>
<p>Now that we have our home page and posts page ready, we will build a page to list all the posts, not just the recent ten posts. This page will be accessible at <a href="http://localhost:1313/post">http://localhost:1313/post</a>. Currently, this page is blank because there is no template defined for it.</p>
<p>This page will show the listings of all the posts, so the type of this page will be a list. We will again use the default <code>_default/list.html</code> as we do not have any other content type with us.</p>
<p>Update the list file.</p>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">$ vim themes/zeo/layouts/_default/list.html
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
  {{ range .Data.Pages }}
    <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{{ .Permalink }}&#34;</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
  {{ end }}
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></div>
<h3 id="add-date-published-to-the-posts">Add &ldquo;Date Published&rdquo; to the posts</h3>
<p>It is a standard practice to add the date on which the post was published on the blog. The front matter of our posts has a variable named <code>date</code>. We will use that variable to fetch the date. Our posts are using the default <em>single</em> template, so we will edit that file.</p>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">$ vim themes/zeo/layouts/_default/single.html
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;</span>{{ .Date.Format &#34;Sun, Feb 11, 2018&#34; }}<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
  {{ .Content }}
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></div>
<hr>
<h2 id="adding-top-level-pages">Adding top-level Pages</h2>
<p>Okay, so now that we have our homepage, post-list page and post content pages in place, we will add a new <em>about</em> page at the top level of our blog, not at a sublevel like we did for posts.</p>
<p>Hugo uses the directory structure of the content directory to identify the structure of the blog. Let&rsquo;s verify that and create a new <code>about</code> page in the content directory.</p>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">$ vim content/about.md
---
title: &#34;about&#34;
description: &#34;about this blog&#34;
date: &#34;2018-02-11&#34;
---

### about me

Hi there, you just reached my blog.</code></pre></div>
<p>Let&rsquo;s generate the site and view the results.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ hugo --verbose
$ ls -l public/
total <span class="m">36</span>
drwxr-xr-x <span class="m">2</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 12:43 about
drwxr-xr-x <span class="m">3</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 12:43 categories
drwxr-xr-x <span class="m">2</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 11:20 css
-rw-r--r-- <span class="m">1</span> yash hogwarts  <span class="m">187</span> Feb <span class="m">11</span> 12:43 index.html
-rw-r--r-- <span class="m">1</span> yash hogwarts <span class="m">1183</span> Feb <span class="m">11</span> 12:43 index.xml
drwxr-xr-x <span class="m">2</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 11:20 js
drwxr-xr-x <span class="m">4</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 12:43 post
-rw-r--r-- <span class="m">1</span> yash hogwarts <span class="m">1139</span> Feb <span class="m">11</span> 12:43 sitemap.xml
drwxr-xr-x <span class="m">3</span> yash hogwarts <span class="m">4096</span> Feb <span class="m">11</span> 12:43 tags</code></pre></div>
<p>Notice that Hugo created a new directory <code>about</code>. This directory contains only one file <code>index.html</code>. The about page will be rendered from <code>about/index.html</code>.</p>
<p>If you look carefully, the <code>about</code> page is listed with the posts on the homepage. It is not desirable, so let&rsquo;s change that first.</p>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">$ vim themes/zeo/layouts/index.html
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>posts<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
  {{ range first 10 .Data.Pages }}
    {{ if eq .Type &#34;post&#34;}}
      <span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{{ .Permalink }}&#34;</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
    {{ end }}
  {{ end }}

  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>pages<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
  {{ range .Data.Pages }}
    {{ if eq .Type &#34;page&#34; }}
      <span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{{ .Permalink }}&#34;</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
    {{ end }}
  {{ end }}
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></div>
<p>Now build the site and verify the results. The homepage now has two sections, one for posts and other for the pages. Click on the <em>about</em> page. You will see the page for <em>about</em>. Remember, I mentioned that Hugo would use the <em>single</em> template for each page, for which it cannot find a template file. There is still one issue. The <em>about</em> page shows the date also. We do not want to show the date on the <em>about</em> page.</p>
<p>There are a couple of ways to fix this. We can add an if-else statement to detect the type of the content and display date only if it is a post. However, let&rsquo;s use the feature provided by Hugo and create a new template type for the posts. Before we do that, let&rsquo;s learn to use one more template type which is <em>partials</em>.</p>
<h2 id="partials-1">Partials</h2>
<p>In Hugo, partials are used to store the shared piece of code which repeats in more than one templates. Partials are kept in <code>themes/zeo/layouts/partials</code> directory. Partials can be used to override the themes presentation. End users can use them to change the default behavior of a theme. It is always a good idea to use partials as much as possible.</p>
<h3 id="header-and-footer-partials">Header and Footer partials</h3>
<p>Header and footer of most of the posts and pages will follow a similar pattern. So they form an excellent example to be defined as a partial.
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">$ vim themes/zeo/layouts/partials/header.html
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>

$ vim themes/zeo/layouts/partials/footer.html
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></div></p>
<p>We can call a partial by including this path in the template
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="p">{{</span> <span class="nx">partial</span> <span class="s">&#34;header.html&#34;</span> <span class="p">.</span> <span class="p">}}</span></code></pre></div></p>
<h2 id="update-the-homepage-template">Update the Homepage template</h2>
<p>Let&rsquo;s update our homepage template to use these partials.
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">$ vim themes/zeo/layouts/index.html
{{ partial &#34;header.html&#34; . }}

  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>posts<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
  {{ range first 10 .Data.Pages }}
    {{ if eq .Type &#34;post&#34;}}
      <span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{{ .Permalink }}&#34;</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
    {{ end }}
  {{ end }}

  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>pages<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
  {{ range .Data.Pages }}
    {{ if or (eq .Type &#34;page&#34;) (eq .Type &#34;about&#34;) }}
      <span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{{ .Permalink }}&#34;</span><span class="p">&gt;</span>{{ .Type }} - {{ .Title }} - {{ .RelPermalink }}<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
    {{ end }}
  {{ end }}

{{ partial &#34;footer.html&#34; . }}</code></pre></div></p>
<h2 id="update-the-single-template">Update the single template</h2>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">$ vim themes/zeo/layouts/_default/single.html
{{ partial &#34;header.html&#34; . }}

  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;</span>{{ .Date.Format &#34;Sun, Feb 11, 2018&#34; }}<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
  {{ .Content }}

{{ partial &#34;footer.html&#34; . }}</code></pre></div>
<p>Build the website and verify the results. The title on the posts and the about page should both reflect the value from the markdown file.</p>
<h2 id="fixing-the-date-shown-on-about-page">Fixing the date shown on About page</h2>
<p>Remember, we had the issue that the date was showing on the <em>about</em> page also. We discussed one method to solve this issue. Now I will discuss a more <em>hugoic</em> way of solving this issue.</p>
<p>We will create a new section template to fix this issue.</p>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">$ mkdir themes/zeo/layouts/post
$ vim themes/zeo/layouts/post/single.html
{{ partial &#34;header.html&#34; . }}

  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;</span>{{ .Date.Format &#34;Mon, Jan 2, 2006&#34; }}<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
  {{ .Content }}

{{ partial &#34;footer.html&#34; . }}


$ vim themes/zeo/layouts/_default/single.html
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>{{ .Title }}<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
  {{ .Content }}
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></div>
<p>Note that we have changed the default <em>single</em> template and added that logic in post&rsquo;s <em>single</em> template.</p>
<p>Build the website and verify the results. The <em>about</em> page does not show the date now, but the posts page still show the date. We can also move the list template&rsquo;s logic to the <code>index.html</code> file of post section template.</p>
<h2 id="conclusion">Conclusion</h2>
<p>We have learnt, how Hugo harnesses the powerful yet simple Go template engine to create the static site generator. We also learnt about partials and their excellent utilization by Hugo in the spirit of <em>Don&rsquo;t Repeat Yourself</em> principle. Now that you know how to make themes in Hugo, go ahead and start creating new beautiful themes. Best of luck for your endaevour.</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/hugo" term="hugo" label="Hugo" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[My New Domain]]></title>
            <link href="https://yashagarwal.in/posts/2018/02/my-new-domain/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2018/02/my-new-domain/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-02-25T10:10:04+05:30</published>
            <updated>2018-02-25T10:10:04+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>I bought a new domain a few days back - <em>yashagarwal.in</em>. I was trying to buy this domain for the last two years, but it was already taken. My previous domain, <em>yashagarwal.me</em> that I got for free via GitHub education pack, was good enough for me, but the thought that I own a domain which is a top-level domain of some other country was in itself something which was not comfortable to me. So when I got the chance to buy this domain, I didn&rsquo;t delay. Hope this domain will remain my personal home on the web for years to come.</p>
<p>The domain is mapped with GitLab, and the SSL certificates are provided by <a href="https://letsencrypt.org">Let&rsquo;s Encrypt</a>. Let&rsquo;s Encrypt requires you to renew the SSL certificates every 90 days. That seems like a manual work to me. Moreover, my new registrar, GoDaddy, provides a complete API for their domain services. So I am planning to write a script that utilizes the APIs of <a href="https://gitlab.com/help/api/README.md">GitLab</a> and <a href="https://developer.godaddy.com/">GoDaddy</a> to deploy the SSL certificates automatically. I will probably use the DNS based authentication to verify the ownership of my domain, as that seems the only method that does not require any modification on the host side. I will write a post with all the details about the script, once I finish implementing it.</p>
<p>That&rsquo;s all for this post. See you next time. :)</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/write-ups" term="write-ups" label="Write-ups" />
                            
                        
                    
                 
                    
                 
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Syncing Time on Windows & GNU/Linux Dual Boot Setups]]></title>
            <link href="https://yashagarwal.in/posts/2018/02/syncing-time-on-windows-gnu/linux-dual-boot-setups/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-2/?utm_source=atom_feed" rel="related" type="text/html" title="Arch Linux Installation Guide Part 2" />
                <link href="https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-1/?utm_source=atom_feed" rel="related" type="text/html" title="Arch Linux Installation Guide Part 1" />
                <link href="https://yashagarwal.in/posts/2018/01/my-own-configuration-manager/?utm_source=atom_feed" rel="related" type="text/html" title="My Own Configuration Manager" />
                <link href="https://yashagarwal.in/posts/2017/12/setting-up-ssh-agent-in-i3/?utm_source=atom_feed" rel="related" type="text/html" title="Setting Up SSH Agent in i3" />
                <link href="https://yashagarwal.in/posts/2017/12/setting-up-alm-octane-with-docker-compose/?utm_source=atom_feed" rel="related" type="text/html" title="Setting up ALM Octane with Docker Compose" />
            
                <id>https://yashagarwal.in/posts/2018/02/syncing-time-on-windows-gnu/linux-dual-boot-setups/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-02-01T12:54:34+05:30</published>
            <updated>2018-02-01T12:54:34+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>This post is going to be one of those that I have written for my reference. Whatever I am going to mention in this post is not new. Everything has already been said and written many times on many websites and Linux forums.</p>
<p>So I will start by explaining the problem. When you try to dual boot your machine to run both GNU/Linux and Windows operating systems, you might have noticed that the time is not the same in both the operating systems. It is generally one operating system showing the correct time, and the other one showing the wrong time. It happens because Microsoft Windows thinks that the hardware clock (CMOS clock or BIOS clock) of the machine is using the local time (depends on your current time zone), and hence it doesn&rsquo;t do anything and shows you the same time. But most GNU/Linux operating systems (Ubuntu, Arch Linux, etc.) think that the hardware clock is set to track UTC. Hence the mismatch in the time happens. For example, assume that the current real-time is 10:22:51, and the hardware clock time is set to 10:22:51. Windows will interpret this time as local time and show 10:22:51, but Linux based systems will show 15:52:51 because they will understand this time as UTC. Of course, the above example is true if we assume time zone as India, which is +05:30 from UTC.</p>
<p>This issue can be fixed either from Windows or from GNU/Linux OS. I prefer to adjust the behavior of Windows to use UTC. It is much more convenient to use when traveling between different time zones. Please note that this method might not work or cause instability with older versions of Windows OS. I have tried this fix on Windows 10, and it works without any issues.</p>
<p>Open an Administrator Command Prompt by pressing <code>⊞ + x</code>, then type <code>a</code>. This method of opening the Administrator Command Prompt does not work on Windows 7.</p>
<p>Now execute the following command:
<div class="highlight"><pre class="chroma"><code class="language-batch" data-lang="batch">reg add <span class="s2">&#34;HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\TimeZoneInformation&#34;</span> /v RealTimeIsUniversal /d 1 /t REG_DWORD /f</code></pre></div></p>
<p>Windows Time Service, which keeps the clock in Windows OS accurate, will still write the local time to the Real-time clock (RTC) regardless of the registry settings on shutdown. So I prefer to disable the Windows Time Service.
<div class="highlight"><pre class="chroma"><code class="language-batch" data-lang="batch">sc config w32time start= disabled</code></pre></div></p>
<p>Now you may need to change the time in your BIOS to UTC time, although that depends on whether your Windows OS was showing the correct time before applying the above modifications. If yes, then changing BIOS time to UTC will make sure that both Windows and GNU/Linux convert hardware clock to local time.</p>
<hr>
<h2 id="references">References</h2>
<ol>
<li><a href="https://help.ubuntu.com/community/UbuntuTime#Multiple_Boot_Systems_Time_Conflicts">Multiple Boot Systems Time Conflicts</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Time#UTC_in_Windows">UTC in Windows</a></li>
</ol>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/hacks" term="hacks" label="Hacks" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/configuration" term="configuration" label="configuration" />
                             
                                <category scheme="https://yashagarwal.in/tags/arch-linux" term="arch-linux" label="Arch Linux" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Why a Sanskrit Shloka?]]></title>
            <link href="https://yashagarwal.in/posts/2018/01/why-a-sanskrit-shloka/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2017/03/fossmeet17/?utm_source=atom_feed" rel="related" type="text/html" title="FOSSMeet&#39;17" />
                <link href="https://yashagarwal.in/posts/2016/04/searching-the-goal/?utm_source=atom_feed" rel="related" type="text/html" title="Searching the goal" />
            
                <id>https://yashagarwal.in/posts/2018/01/why-a-sanskrit-shloka/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-01-30T20:29:00+05:30</published>
            <updated>2018-01-30T20:29:00+05:30</updated>
            
            
            <content type="html"><![CDATA[<blockquote>
<p>श्रूयतां धर्मसर्वस्वं श्रुत्वा चाप्यवधार्यताम् ।</p>
<p>आत्मनः प्रतिकूलानि परेषां न समाचरेत् ।।</p>
<p>If the entire Dharma can be said in a few words, then it is — that which is unfavorable to us, do not do that to others.<!-- raw HTML omitted --></p>
<p>—  Padmapuraana, shrushti 19/357–358</p>
</blockquote>
<p>So when you landed on this blog, the first thing you might have noticed is that the home page of this blog has a Sanskrit shloka. Many people ask me, why did I choose to display a Sanskrit shloka on my blog.</p>
<p>There is no one answer to this question. There have been several incidents in my undergraduate life, which have given me a lot of good and evil memories. This shloka summarizes all those experiences that I earned in NIT Calicut during my undergraduate course. It reminds me, how I should treat others to receive similar treatment.</p>
<p>It was my first time away from home and family when I got admission in NIT Calicut. I was very naive about judging people. I got to know many new people in NITC. That is when I learned that not everyone is helping you. People are here to exploit you, and they will do anything to achieve their goals and to get success, whether it comes at the price of someone else&rsquo;s loss. It is the harsh truth of life, and the sooner one understands this, the better. I realized this in my second year, and that is when my life changed. Thankfully, I did not find other such people after my first year. However, life is very long, and I am bound to find such people at some point in my life again. I hope the experience that I earned in NITC will help me face that time.</p>
<p>Now, to the second part of the question, why Sanskrit? A quick Google search reveals that this shloka represents the concept of <a href="https://en.wikipedia.org/wiki/Golden_Rule">Golden Rule</a>, which is common to most world religions, and Hinduism is no exception here. There is even a <a href="https://hinduism.stackexchange.com/questions/21431/what-all-hindu-scriptures-advocate-the-golden-rule-and-what-is-the-oldest-hindu">question</a> about the relation of this shloka with Hinduism. I studied Sanskrit for six years till my 10<!-- raw HTML omitted -->th<!-- raw HTML omitted --> standard and feel a connection to it. Besides, Hindi is my mother tongue, so Sanskrit was the obvious choice given that there is not much Hinduism related literature available in Hindi.</p>
<p><strong>Edit(23/03/2018)</strong>: I have removed the shloka from the front page now. I am keeping this post for historical purpose.</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/philosophy" term="philosophy" label="Philosophy" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/nitc" term="nitc" label="NITC" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Arch Linux Installation Guide Part 2]]></title>
            <link href="https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-2/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-1/?utm_source=atom_feed" rel="related" type="text/html" title="Arch Linux Installation Guide Part 1" />
                <link href="https://yashagarwal.in/posts/2017/12/setting-up-ssh-agent-in-i3/?utm_source=atom_feed" rel="related" type="text/html" title="Setting Up SSH Agent in i3" />
                <link href="https://yashagarwal.in/posts/2018/01/my-own-configuration-manager/?utm_source=atom_feed" rel="related" type="text/html" title="My Own Configuration Manager" />
                <link href="https://yashagarwal.in/posts/2017/12/setting-up-alm-octane-with-docker-compose/?utm_source=atom_feed" rel="related" type="text/html" title="Setting up ALM Octane with Docker Compose" />
                <link href="https://yashagarwal.in/posts/2017/10/fixing-hindi-fonts-in-arch-linux/?utm_source=atom_feed" rel="related" type="text/html" title="Fixing Hindi Fonts in Arch Linux" />
            
                <id>https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-2/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-01-26T15:45:27+05:30</published>
            <updated>2018-01-26T15:45:27+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>In this post, I will continue from my last <a href="https://yashhere.github.io/posts/2018/01/arch-linux-installation-guide-part-1/">post</a> and set up my newly installed Arch Linux for daily use. I am going to install some applications that I use on a day to day basis. Some of these applications are required for my current dotfile <a href="https://yashhere.github.io/posts/2018/01/my-own-configuration-manager/">configuration</a> setup to work properly. The choice of applications is highly opinionated and your preferences might be different.</p>
<div class="note">
    <div></div>
    
If you had gone for installation via SSH option, then I would suggest you to edit your `sshd_config` file and disable `root` login. It can be a security risk otherwise.

</div>
<h3 id="install-a-terminal-based-browser">Install a terminal based browser</h3>
<p>Terminal-based browsers are very handy in cases when you are required to login into a captive portal and you don&rsquo;t have access to a graphical browser. We will install two different browsers, <code>elinks</code> and <code>w3m</code>.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -S elinks w3m</code></pre></div></p>
<h3 id="install-x-server">Install X server.</h3>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -S xorg</code></pre></div>
<p>This will install minimal X desktop environment with fonts, in case, you want to test your system before installing any desktop environment.</p>
<h3 id="enable-multilib-repository-for-32-bit-package-support">Enable multilib repository for 32-bit package support</h3>
<p>To enable multilib repository, uncomment the <code>[multilib]</code> section in <code>/etc/pacman.conf</code>.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>multilib<span class="o">]</span>
<span class="nv">Include</span> <span class="o">=</span> /etc/pacman.d/mirrorlist</code></pre></div></p>
<p>Now upgrade your system.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -Syyu</code></pre></div></p>
<h3 id="install-video-and-touchpad-drivers">Install video and touchpad drivers</h3>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -S xf86-video-intel xf86-input-synaptics</code></pre></div>
<h3 id="install-pacaur-to-fetch-and-install-packages-from-aur">Install pacaur to fetch and install packages from AUR</h3>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -S expac yajl --noconfirm
<span class="nb">cd</span> /tmp
gpg --recv-keys --keyserver hkp://pgp.mit.edu:80 1EB2638FF56C0C53
curl -o PKGBUILD https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h<span class="o">=</span>cower
makepkg -i PKGBUILD --noconfirm
curl -o PKGBUILD https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h<span class="o">=</span>pacaur
makepkg -i PKGBUILD --noconfirm
cd</code></pre></div>
<h3 id="install-graphical-browsers">Install graphical browsers</h3>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">pacaur -S firefox chromium</code></pre></div>
<h3 id="install-code-editors">Install code editors</h3>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">pacaur -S sublime-text-dev atom-editor-git visual-studio-code-bin neovim neovim-drop-in leafpad</code></pre></div>
<h3 id="setup-lamp-stack">Setup LAMP stack</h3>
<h4 id="install-apache-server">Install Apache server</h4>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -S apache

<span class="c1"># Make your user-directory available to apache server</span>
mkdir ~/public_html
chmod o+x ~
chmod o+x ~/public_html
chmod -R o+r ~/public_html</code></pre></div>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># To enable virtualhosts, uncomment the following line in `/etc/httpd/conf/httpd.conf`</span>
Include conf/extra/httpd-vhosts.conf</code></pre></div>
<p>Add your virtualhost configuration in following file -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo vim /etc/httpd/conf/extra/httpd-vhosts.conf</code></pre></div></p>
<p>To test the virtual hosts on you local machine, add the virtual names to your <code>/etc/hosts</code> file.</p>
<h4 id="install-php">Install PHP:</h4>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -S php php-apache</code></pre></div>
<p>To use PHP with apache, open <code>/etc/httpd/conf/httpd.conf</code> and uncomment following line -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">LoadModule mpm_prefork_module modules/mod_mpm_prefork.so</code></pre></div></p>
<p>and comment out the following line -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># LoadModule mpm_event_module modules/mod_mpm_event.so</span></code></pre></div></p>
<p>Now add these lines to <code>/etc/httpd/conf/httpd.conf</code>:
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># Add these at the end of `LoadModule` section.</span>
LoadModule php7_module modules/libphp7.so
AddHandler php7-script .php

<span class="c1"># Place this at the end of the `Include` section:</span>
Include conf/extra/php7_module.conf</code></pre></div></p>
<h4 id="install-mysql-server">Install MySQL server</h4>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -S mariadb

<span class="c1"># Initialize the MariaDB data directory prior to starting the service. To do so, run:</span>
sudo mysql_install_db --user<span class="o">=</span>mysql --basedir<span class="o">=</span>/usr --datadir<span class="o">=</span>/var/lib/mysql

<span class="c1"># Then issue the commands to start the database server</span>
sudo systemctl <span class="nb">enable</span> mariadb.service
sudo systemctl start mariadb.service

<span class="c1"># To apply recommended security settings to your database, run</span>
sudo mysql_secure_installation</code></pre></div>
<h4 id="install-phpmyadmin">Install PHPMyAdmin</h4>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -S phpmyadmin php-mcrypt</code></pre></div>
<p>Enable <code>mysqli</code>, <code>mcrypt</code>, <code>zip</code> and <code>bz2</code> extensions in <code>/etc/php/php.ini</code>.</p>
<p>Create the apache configuration file <code>/etc/httpd/conf/extra/phpmyadmin.conf</code></p>
<div class="highlight"><pre class="chroma"><code class="language-ApacheConf" data-lang="ApacheConf"><span class="nb">Alias</span> <span class="sx">/phpmyadmin</span> <span class="s2">&#34;/usr/share/webapps/phpMyAdmin&#34;</span>
<span class="nt">&lt;Directory</span> <span class="s">&#34;/usr/share/webapps/phpMyAdmin&#34;</span><span class="nt">&gt;</span>
    <span class="nb">DirectoryIndex</span> index.php
    <span class="nb">AllowOverride</span> <span class="k">All</span>
    <span class="nb">Options</span> FollowSymlinks
    <span class="nb">Require</span> <span class="k">all</span> granted
<span class="nt">&lt;/Directory&gt;</span></code></pre></div>
<p>Then include following in <code>/etc/httpd/conf/httpd.conf</code>
<div class="highlight"><pre class="chroma"><code class="language-ApacheConf" data-lang="ApacheConf"><span class="c"># phpMyAdmin configuration</span>
<span class="nb">Include</span> conf/extra/phpmyadmin.conf</code></pre></div></p>
<p>Now restart <code>httpd</code> service to apply settings.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo systemctl restart httpd</code></pre></div>
Once all these steps are done, your LAMP stack should be working.</p>
<h3 id="setup-power-management">Setup power management</h3>
<p>Install <code>tlp</code> and some of its optional dependencies
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -S tlp tlp-rdw bash-completion ethtool lsb-release smartmontools</code></pre></div></p>
<p>Then enable <code>tlp</code> services
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo systemctl <span class="nb">enable</span> tlp.service
sudo systemctl <span class="nb">enable</span> tlp-sleep.service

<span class="c1"># mask some services for tlp to work properly</span>
sudo systemctl mask systemd-rfkill.service
sudo systemctl mask systemd-rfkill.socket</code></pre></div></p>
<h3 id="install-i3-and-other-tools">Install i3 and other tools</h3>
<p>All these tools are part of my <code>i3</code> config with exception of the theme related packages. So installing them here will help me later while setting up the <code>i3</code> window manager.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">pacaur -S i3 rofi polybar xautolock powerline-fonts-git i3lock-fancy-git compton scrot feh dunst unclutter xfce4-power-manager numlockx lxappearance adapta-gtk-theme gtk-engine-murrine gnome-themes-standard termite</code></pre></div></p>
<h3 id="fix-ugly-fonts-1">Fix Ugly Fonts <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></h3>
<p>Fonts rendering is one area where Linux still lags behind Windows and OSX. It can be a nightmare for users to setup fonts properly in Linux. In Arch Linux, this is even worse. I found some tricks to improve the quality of font rendering on Arch Linux. Though this is far from perfect, it is manageable. Follow these <a href="https://www.reddit.com/r/archlinux/comments/5r5ep8/make_your_arch_fonts_beautiful_easily/">steps</a> on Reddit to fix font rendering. I use Noto Sans, Adobe Source Code Pro, and Microsoft fonts. My apologies, but I can&rsquo;t help here. Some websites still use Microsoft fonts.</p>
<h3 id="setup-python-environment">Setup Python Environment</h3>
<p>I use Python extensively and virtual environments are a must for my development setup. I use <code>pipenv</code> to manage my virtual environments. To install <code>pipenv</code>, you need to install <code>virtualenv</code> first. To install it, run the following command.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -S python-virtualenv</code></pre></div></p>
<p>Now you are ready to install <code>pipenv</code>. Follow <a href="http://pipenv.readthedocs.io/en/latest/install/#fancy-installation-of-pipenv">these</a> instructions to install the tool.</p>
<h3 id="install-some-other-common-tools">Install some other common tools</h3>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -S vlc openssh npm imagemagick git la-capitaine-icon-theme-git</code></pre></div>
<p>Do not forget to <a href="https://stackoverflow.com/a/13021677">setup</a> <code>npm</code> to install packages globally without requiring <code>sudo</code>.</p>
<p>That&rsquo;s all! Your system should be in working condition now. Do check out my <a href="https://yashhere.github.io/posts/2018/01/my-own-configuration-manager/">dotfiles</a> if you want to set up your system like mine.</p>
<p>Hope you enjoyed the article. Cheers 😄</p>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p><a href="https://www.reddit.com/r/archlinux/comments/5r5ep8/make_your_arch_fonts_beautiful_easily/">Make your Arch fonts beautiful easily!</a> <a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/hacks" term="hacks" label="Hacks" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/series/arch-linux-installation" term="arch-linux-installation" label="Arch Linux Installation" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/configuration" term="configuration" label="configuration" />
                             
                                <category scheme="https://yashagarwal.in/tags/arch-linux" term="arch-linux" label="Arch Linux" />
                             
                                <category scheme="https://yashagarwal.in/tags/i3" term="i3" label="i3" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Arch Linux Installation Guide Part 1]]></title>
            <link href="https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-1/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2017/12/setting-up-ssh-agent-in-i3/?utm_source=atom_feed" rel="related" type="text/html" title="Setting Up SSH Agent in i3" />
                <link href="https://yashagarwal.in/posts/2018/01/my-own-configuration-manager/?utm_source=atom_feed" rel="related" type="text/html" title="My Own Configuration Manager" />
                <link href="https://yashagarwal.in/posts/2017/12/setting-up-alm-octane-with-docker-compose/?utm_source=atom_feed" rel="related" type="text/html" title="Setting up ALM Octane with Docker Compose" />
                <link href="https://yashagarwal.in/posts/2017/10/fixing-hindi-fonts-in-arch-linux/?utm_source=atom_feed" rel="related" type="text/html" title="Fixing Hindi Fonts in Arch Linux" />
                <link href="https://yashagarwal.in/posts/2017/03/mounting-ntfs-partitions-on-arch-linux/?utm_source=atom_feed" rel="related" type="text/html" title="Mounting NTFS partitions on Arch Linux" />
            
                <id>https://yashagarwal.in/posts/2018/01/arch-linux-installation-guide-part-1/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-01-24T21:49:05+05:30</published>
            <updated>2018-01-24T21:49:05+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>Arch Linux is a Linux distribution known for its not-so-beginner-friendly command line installer, no ready-to-use system after installation and requirement of above average knowledge of command line. However, Arch Linux allows me to set up a system in my desired state in shortest possible time with least effort. This is why I keep coming back to Arch Linux even after some of its annoyances.</p>
<p>This guide is written primarily for my reference, as someone who has installed Arch Linux several times, I still can&rsquo;t remember all the installation steps perfectly. Most of the steps have been taken from <a href="https://wiki.archlinux.org/index.php/installation_guide">Arch wiki</a> and should work on other setups also.</p>
<div class="note">
    <div></div>
    
All the commands are run in root shell unless otherwise specified.

</div>
<h2 id="0-check-your-network-connection">0. Check your network connection</h2>
<p>If you are behind a captive portal, use <code>links</code> to open browser and login into your network. For WiFi connections, use <code>wifi-menu</code>. LAN connections should not require any setup. The boot environment should automatically detect any wired connections. After connecting, test your connection by pinging any website:
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">ping -c <span class="m">5</span> google.com</code></pre></div></p>
<h2 id="1-setup-ssh">1. Setup SSH</h2>
<p>This step is not mandatory, though I prefer to use this method to install Arch Linux, as it provides me the convenience of copying and pasting the commands directly from Arch wiki.</p>
<p>By default the Arch Linux <code>root</code> account password is empty. We need to set up a password for <code>root</code> account, which is needed for an SSH connection.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">passwd</code></pre></div></p>
<p>Now we need to change the setting to permit <code>root</code> login via SSH in <code>/etc/ssh/sshd_config</code>. Check that <code>PermitRootLogin yes</code> is uncommented in this file. If this line is not present there, add this to the end. Now start the <code>sshd.service</code> by issuing the command
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo systemctl start sshd.service</code></pre></div></p>
<p>Also, note the IP address of the target machine by inspecting the output of the following command.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">ip addr</code></pre></div></p>
<p><em>Pro tip:</em> One liner to get only the IP address
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">ip -o -4 addr show <span class="p">|</span> awk -F <span class="s1">&#39;[ /]+&#39;</span> <span class="s1">&#39;/global/ {print $4}&#39;</span></code></pre></div></p>
<p>Now on your host machine, connect to the target machine via SSH using the following command
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">ssh root@ip-address-of-target</code></pre></div></p>
<h2 id="2-partition-the-disks">2. Partition the disks</h2>
<p>If Windows 8 or above is already installed on your machine, then your hard disk is probably using <code>GPT</code> partitioning scheme. In that case, use <code>gdisk</code> to partition your hard disk. <del>If you use <code>fdisk</code> on a GPT partitioned HDD, there is a possibility of data loss.</del> <code>fdisk</code> understands <code>GPT</code> partitioning scheme also.[1]</p>
<p>My preferred setup is to have one root partition and one home partition and use <code>EFI</code> partition created by Windows to install boot-loader. The root and home partition will be formatted using <code>ext4</code> file-system and the <code>EFI</code> partition should be formatted using <code>FAT32</code> file-system.</p>
<p>For this guide, I am assuming that the <code>EFI</code> partition is <code>sda1</code>, root partition is <code>sda9</code> and home partition is <code>sda10</code>.</p>
<p>Now to format the partitions with <code>ext4</code> file-system:
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">mkfs.ext4 /dev/sda9
mkfs.ext4 /dev/sda10</code></pre></div></p>
<h2 id="3-mount-the-partitions">3. Mount the partitions</h2>
<p>Now mount the root partition (<code>sda9</code> in this case) to <code>/mnt</code>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">mount /dev/sda9 /mnt</code></pre></div></p>
<p>If you have created any other partitions in previous steps, mount them at appropriate locations.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">mkdir /mnt/home
mount /dev/sda10 /mnt/home

mkdir /mnt/boot
mount /dev/sda1 /mnt/boot</code></pre></div></p>
<h2 id="4-install-the-base-file-system">4. Install the base file-system</h2>
<p>To install the base system and some development tools, issue the following command.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">pacstrap /mnt base base-devel</code></pre></div></p>
<p>This will take a while to download and install. After it finishes, it will give you a bare-bone Arch Linux system with just the tools required to run a Linux distribution, no other software is installed.</p>
<h2 id="5-generate-etcfstab">5. Generate /etc/fstab</h2>
<p>The <code>/etc/fstab</code> file stores the information about file systems of partitions and how to mount the partitions on system boot up. To generate this file, issue the following command:
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</code></pre></div>
If you prefer to use partition labels (sda1, sda9 etc.) instead of UUID, then use <code>-L</code> flag in place of <code>-U</code>.</p>
<h2 id="6-chroot-into-the-system">6. chroot into the system</h2>
<p>From the <a href="https://wiki.archlinux.org/index.php/Change_root">Arch wiki</a>:</p>
<blockquote>
<p>Chroot is an operation that changes the apparent root directory for the current running process and their children. A program that is run in such a modified environment cannot access files and commands outside that environmental directory tree. This modified environment is called a chroot jail.</p>
</blockquote>
<p>At this step, we will go to the root of the newly installed system at <code>/mnt</code> and pretend as if we are logged into this system.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">arch-chroot /mnt</code></pre></div></p>
<h2 id="7-setup-the-time-zone-locale-and-hostname">7. Setup the time zone, locale, and hostname</h2>
<p>Browse the <code>/use/share/zoneinfo</code> directory to find your location entries. My location is India, so I will use this command.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime</code></pre></div></p>
<p>To set the hardware clock:
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">hwclock --systohc</code></pre></div></p>
<p>To set the locale for your system, open the <code>/etc/locale.gen</code> file and uncomment your language. or run the following command for the default <code>en_US.UTF-8 UTF-8</code>.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nv">LANG</span><span class="o">=</span>C perl -i -pe <span class="s1">&#39;s/#(en_US.UTF)/$1/&#39;</span> /etc/locale.gen</code></pre></div>
Now generate the localization with
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">locale-gen</code></pre></div></p>
<p>Then set the <code>LANG</code> variable in <code>/etc/locale.conf</code> accordingly, or run the following command:
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">localectl set-locale <span class="nv">LANG</span><span class="o">=</span><span class="s2">&#34;en_US.UTF-8&#34;</span></code></pre></div></p>
<p>To set the hostname for your machine:
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">hostnamectl set-hostname your-host-name</code></pre></div></p>
<p>To allow other machines to address the host by name, it is necessary to edit the <code>/etc/hosts</code> file to look like this:
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">127.0.0.1    localhost.localdomain          localhost
::1          localhost.localdomain          localhost
127.0.1.1    your-host-name.localdomain     your-host-name</code></pre></div></p>
<h2 id="8-create-user-account">8. Create user account</h2>
<p>Before creating user account, set password for <code>root</code> account
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">passwd</code></pre></div></p>
<p>Now create a local account for your user
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">useradd -m -G wheel -s /bin/bash your-user-name</code></pre></div></p>
<p>This will set up your user account, create a home directory for your user, set the default shell to <code>bash</code> and add your user to <code>wheel</code> group, which is necessary to gain <code>sudo</code> access in later steps.</p>
<p>Set password for your user.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">passwd your-user-name</code></pre></div></p>
<h2 id="9-enable-sudo-access">9. Enable sudo access</h2>
<p>This allows you to use root privileges without using the root account. To enable this, first open <code>/etc/sudoers</code> file
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">nano /etc/sudoers</code></pre></div></p>
<p>Now uncomment the following line to enable <code>root</code> privilege for all the users inside <code>wheel</code> group:
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># %wheel ALL=(ALL) ALL</span></code></pre></div></p>
<p>Now you can safely disable root account
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">passwd -l root

<span class="c1"># login into your user account</span>
su your-user-name</code></pre></div></p>
<p>From this point onwards, it is necessary to append <code>sudo</code> to any command that requires <code>root</code> privileges.</p>
<h2 id="10-install-bootloader">10. Install bootloader</h2>
<p>My preferred bootloader of choice is <code>grub</code>. To install <code>grub</code>, we need to install following packages.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -S grub efibootmgr</code></pre></div></p>
<p>Now install <code>grub</code> with the following command.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo grub-install --target<span class="o">=</span>x86_64-efi --efi-directory<span class="o">=</span>/boot --bootloader-id<span class="o">=</span>arch</code></pre></div></p>
<p>Here <code>--efi-directory</code> is the folder where the <code>EFI</code> partition is mounted <a href="#step3">step 3</a> and <code>--bootloader-id</code> is the label that will appear in your UEFI boot menu entry.</p>
<p>This particular step is specific to my machine&rsquo;s hardware, you might not need to run this step. I need to add <code>pci=nommconf</code> to my kernel boot parameters in <code>/etc/default/grub</code>, otherwise <code>tty</code> prints error messages continuously.</p>
<p>Now run to generate grub configuration file.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo grub-mkconfig -o /boot/grub/grub.cfg</code></pre></div></p>
<p>If you encounter any errors related to <code>lvm</code> during installation of grub, then follow these steps.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># come out of chroot</span>
<span class="nb">exit</span>
mkdir /mnt/hostrun
mount --bind /run /mnt/hostrun

<span class="c1"># back to chroot</span>
arch-chroot /mnt
mkdir /run/lvm
mount --bind /hostrun/lvm /run/lvm</code></pre></div></p>
<p>Now you can install <code>grub</code> without any errors.</p>
<h2 id="11-configure-the-network">11. Configure the network</h2>
<p>By default, your current system cannot connect to the network in the current state. I prefer to use <a href="https://wiki.archlinux.org/index.php/NetworkManager">NetworkManager</a> for my network management, even when I am not using GNOME. For wireless networking, install the following additional packages.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pacman -S iw wpa_supplicant dialog networkmanager network-manager-applet dhclient</code></pre></div></p>
<p><code>NetworkManager</code> supports basic DHCP configuration. For full support, I have installed <code>dhclient</code>. <code>NetworkManager</code> also supports automatic wired connection detection and comes with curses based tool <code>nmtui</code> to setup wireless connection.</p>
<p>To enable NetworkManager to start at system startup
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo systemctl <span class="nb">enable</span> NetworkManager.service</code></pre></div></p>
<h2 id="12-reboot-now">12. Reboot now</h2>
<p>If you had performed the <code>lvm</code> troubleshooting steps during <code>grub</code> install, then
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">umount /run/lvm</code></pre></div></p>
<p>Now exit from <code>chroot</code> by typing <code>exit</code> in the shell. Unmount all the mounted partitions with:
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">umount -R /mnt</code></pre></div></p>
<p>Finally, reboot your machine by typing <code>reboot</code> and remove the installation USB drive. If you are not able to boot into your system at this point, boot from the installation media again and attempt to fix the installation.</p>
<p>If you can see a terminal with a prompt for your username, congratulations! You have completed the first step towards building your own system.</p>
<p>I will be writing about making your system usable and stable in the <a href="/posts/2018/01/arch-linux-installation-guide-part-2/">second</a> part of this guide.</p>
<p>Hope you enjoyed the post. Stay tuned :)</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/hacks" term="hacks" label="Hacks" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/series/arch-linux-installation" term="arch-linux-installation" label="Arch Linux Installation" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/configuration" term="configuration" label="configuration" />
                             
                                <category scheme="https://yashagarwal.in/tags/arch-linux" term="arch-linux" label="Arch Linux" />
                             
                                <category scheme="https://yashagarwal.in/tags/i3" term="i3" label="i3" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[My Own Configuration Manager]]></title>
            <link href="https://yashagarwal.in/posts/2018/01/my-own-configuration-manager/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2018/01/my-own-configuration-manager/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2018-01-21T11:23:23+05:30</published>
            <updated>2018-01-21T11:23:23+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>I have been using Linux since I was in my second year of undergraduate. My experiments with the dotfiles (configuration files) also started at the same time. For the uninformed, in Linux, it is common to configure a lot of settings and configurations within dotfiles. Dotfiles are files in a Linux user&rsquo;s home directory that begin with a dot or a full-stop character. This dot indicates to the operating system that these files are used to store the settings of programs like <code>vim</code> or shells like <code>bash</code> or <code>fish</code> to name a few.</p>
<p>In the beginning, I was keeping a manual backup of my dotfiles by copying them to a folder from time to time. But the list soon started getting huge, that it became complicated for me to keep track of the changes. Then I moved to symlinks. I started symlinking all the dotfiles from my folder to their usual locations. This setup worked perfectly fine, but as my collection of dotfiles grew, It became very cumbersome for me to symlink every dotfile manually.</p>
<p>I also tried a few tools built for this particular purpose. Some of them are <code>vcsh</code>, <code>mr</code>, and <code>stow</code>. These tools work just fine, but I was not willing to learn new tools just for maintaining my dotfiles. At last, I decided to write my tool to solve this problem. This way, there will not be any external dependency, and this tool will also become part of my dotfiles.</p>
<h2 id="design">Design</h2>
<p>The tool, in itself, is inspired by the <a href="https://en.wikipedia.org/wiki/Configuration_file#UNIX/Linux">UNIX tradition</a> of keeping configuration files for the settings of the programs. This configuration system uses a JSON formatted dotfile.</p>
<p><a href="https://github.com/yashhere/ConMan">Here</a> is the source code for the configuration system. Let&rsquo;s have a look at the file structure of the repository.
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">|-- .backups
|   |-- 08-01-2018-15:47
|   |-- 08-01-2018-19:30
|   |-- ......
|-- configure.py
|-- current_status
|-- dotfiles
|   |-- dunst
|   |-- gtk-3.0
|   |-- i3
|   |-- ......
|-- dotfiles.json
|-- LICENSE
`-- README.md</code></pre></div></p>
<p>During the initial setup, you need to edit the <code>dotfiles.json</code> file to suit your setup. A relevant section of the JSON file is given below.
<div class="highlight"><pre class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
  <span class="nt">&#34;pre&#34;</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;cloning repository&#34;</span><span class="p">,</span>
      <span class="nt">&#34;command&#34;</span><span class="p">:</span> <span class="s2">&#34;git&#34;</span><span class="p">,</span>
      <span class="nt">&#34;subcommand&#34;</span><span class="p">:</span> <span class="s2">&#34;clone&#34;</span><span class="p">,</span>
      <span class="nt">&#34;argument&#34;</span><span class="p">:</span> <span class="s2">&#34;https://github.com/yashhere/dotfiles.git&#34;</span>
    <span class="p">}</span>
  <span class="p">],</span>
  <span class="nt">&#34;linking&#34;</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span>
        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;bashrc&#34;</span><span class="p">,</span>
        <span class="nt">&#34;src&#34;</span><span class="p">:</span> <span class="s2">&#34;dotfiles/.bashrc&#34;</span><span class="p">,</span>
        <span class="nt">&#34;dest&#34;</span><span class="p">:</span> <span class="s2">&#34;.bashrc&#34;</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;bash_profile&#34;</span><span class="p">,</span>
        <span class="nt">&#34;src&#34;</span><span class="p">:</span> <span class="s2">&#34;dotfiles/.bash_profile&#34;</span><span class="p">,</span>
        <span class="nt">&#34;dest&#34;</span><span class="p">:</span> <span class="s2">&#34;.bash_profile&#34;</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;profile&#34;</span><span class="p">,</span>
        <span class="nt">&#34;src&#34;</span><span class="p">:</span> <span class="s2">&#34;dotfiles/.profile&#34;</span><span class="p">,</span>
        <span class="nt">&#34;dest&#34;</span><span class="p">:</span> <span class="s2">&#34;.profile&#34;</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;i3&#34;</span><span class="p">,</span>
        <span class="nt">&#34;src&#34;</span><span class="p">:</span> <span class="s2">&#34;dotfiles/i3&#34;</span><span class="p">,</span>
        <span class="nt">&#34;dest&#34;</span><span class="p">:</span> <span class="s2">&#34;.config/i3&#34;</span>
      <span class="p">},</span>
  <span class="p">]</span>
<span class="p">}</span></code></pre></div></p>
<p>As can be seen, the JSON file has an array variable <code>linking</code>, which can be used to set the paths for each configuration file and folder. The <code>configure.py</code> script also requires a <code>dotfiles</code> folder to be present in the current directory. The folder can be created manually, or if it is already version controlled on GitHub, then the script can clone it. For that, you can edit the <code>pre</code> section in the <code>dotfiles.json</code>.</p>
<p>Your dotfiles and config folders go inside the <code>dotfiles</code> folder. You need to copy all your current configurations to this folder to get started.</p>
<p>So, how does the script know where a file or folder will be linked? Simple, you need to edit the <code>dotfiles.json</code> file and add source and destination locations. For example, if you want to set up configurations of <code>i3</code> to its original location (which is, <code>$HOME/.config/i3</code>), then you need to create a new JSON object in the <code>linking</code> array, like this.
<div class="highlight"><pre class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;i3&#34;</span><span class="p">,</span>
  <span class="nt">&#34;src&#34;</span><span class="p">:</span> <span class="s2">&#34;dotfiles/i3&#34;</span><span class="p">,</span>
  <span class="nt">&#34;dest&#34;</span><span class="p">:</span> <span class="s2">&#34;.config/i3&#34;</span>
<span class="p">}</span></code></pre></div></p>
<p>Here the <code>name</code> is used to identify the configuration file, the <code>src</code> parameter is the location of your config file/folder in the dotfiles directory, and the <code>dest</code> parameter is the final destination of the file/folder. Keen observers would notice that I have not used <code>$HOME</code> anywhere. It is understood that the configuration will go to the current user&rsquo;s home directory. So the <code>dest</code> is relative to the user&rsquo;s home directory, and <code>src</code> is relative to the directory from which the <code>configure.py</code> script is executed.</p>
<p>And you are done! Now, run <code>configure.py</code>, and all your dotfiles and folders will be symlinked to their correct place.</p>
<p>The <code>current_status</code> file saves all the symlink locations that are being managed by the script, for your easy reference and to debug any error.</p>
<h2 id="behind-the-scenes">Behind the Scenes</h2>
<p>A lot to cool things happen behind the scenes. The script will check if any previous symlink exists at the given <code>dest</code> location. It removes any symlinks to avoid redundancy. If the dest already has any dotfile or folder, then it backs it up in the <code>.backups</code> under today&rsquo;s date and time before replacing it with a symlink to avoid any potential data loss.</p>
<p>I hope the article was useful. Cheers 😄</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/configuration" term="configuration" label="configuration" />
                             
                                <category scheme="https://yashagarwal.in/tags/python" term="python" label="python" />
                             
                                <category scheme="https://yashagarwal.in/tags/github" term="github" label="github" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[2017 - The Best Till Now]]></title>
            <link href="https://yashagarwal.in/posts/2017/12/2017-the-best-till-now/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2017/12/2017-the-best-till-now/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2017-12-31T23:19:00+05:30</published>
            <updated>2017-12-31T23:19:00+05:30</updated>
            
            
            <content type="html"><![CDATA[



    

    
    

    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.css" integrity="sha256-sCl5PUOGMLfFYctzDW3MtRib0ctyUvI9Qsmq2wXOeBY=" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/default-skin/default-skin.min.css" integrity="sha256-BFeI1V+Vh1Rk37wswuOYn5lsTcaU96hGaI7OUVCLjPc=" crossorigin="anonymous" />

    
    <link rel="stylesheet" href="/css/photoswipe.min.d780348a887d97b4d6cc664301a2941706e4a02aeb1533524fcce3b7b9b64b4f.css">

    

    
    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
        
        <div class="pswp__bg"></div>
        
        <div class="pswp__scroll-wrap">
            
            <div class="pswp__container">
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
            </div>
            
            <div class="pswp__ui pswp__ui--hidden">
                <div class="pswp__top-bar">
                    
                    <div class="pswp__counter"></div>
                    <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                    <button class="pswp__button pswp__button--share" title="Share"></button>
                    <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                    <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>
                    
                    
                    <div class="pswp__preloader">
                        <div class="pswp__preloader__icn">
                            <div class="pswp__preloader__cut">
                                <div class="pswp__preloader__donut"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                    <div class="pswp__share-tooltip"></div>
                </div>
                <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
                </button>
                <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
                </button>
                <div class="pswp__caption">
                    <div class="pswp__caption__center"></div>
                </div>
            </div>
        </div>
    </div>

<p>If I have to define 2017 in one word, that would be amazing. This year has been a life-changing year for me. I learned a lot of new things, had some excellent experience in the company of amazing people, had a great time in my academic life and SSL. 2017 has been a very significant year for me, and I want to record this memory by documenting some of the most amazing things that I learned and experienced this year.</p>
<h2 id="grades">Grades</h2>
<p>Although I cared very little for grades for the most of my college life, this year changed my perception of grades. I finally understood that the grades are also equally important. I started <em>2017</em> with only one goal &mdash; getting good grades. I studied a lot in the first half of the year, and it is because of that time, I hold an excellent command over Computer Networks. If I have to choose any one semester for my placement, It would be 6th semester.</p>
<p>I invested most of my time for preparation of campus placements in the mid of the year. Reading Data Structures and Algorithms have proven to be very beneficial for me. However, the way I studied Data Structures, hasn&rsquo;t improved my skills in real-world problem-solving skills.</p>
<p>I did not do exceptionally well in academics in the late half of the year. Partly because of the <em>after placement</em> and <em>&ldquo;Dude, it is fourth year&rdquo;</em> type of environment around me. My final year project did not go in the right direction, and it is one of the very few disappointments for me in <em>2017</em>.</p>
<h2 id="coding">Coding</h2>
<p>It is one thing which I could never excel in my undergrad life. People say that coding is a skill and it requires practice. However, to continue doing that practice, one needs patience, that, unfortunately, I lack. This year continued to be the same as 2016. I could not overcome my fear of coding. I tried doing something different in the form of <a href="https://twitter.com/_100DaysOfCode">#100daysofcode</a>, but couldn&rsquo;t continue it after 20 days because of my preparations for campus placements. I have again started writing code on a regular basis in late December. Looking forward to code more frequently in 2018.</p>
<blockquote class="twitter-tweet" data-dnt="true"><p lang="en" dir="ltr"><a href="https://twitter.com/TheYashAgarwal?ref_src=twsrc%5Etfw">@theyashagarwal</a> is one of the <a href="https://twitter.com/hashtag/supercoder?src=hash&amp;ref_src=twsrc%5Etfw">#supercoder</a> of the day. Good work. <a href="https://twitter.com/hashtag/100DaysOfCode?src=hash&amp;ref_src=twsrc%5Etfw">#100DaysOfCode</a> <a href="https://twitter.com/hashtag/301DaysOfCode?src=hash&amp;ref_src=twsrc%5Etfw">#301DaysOfCode</a></p>&mdash; SuperCoderBot (@heroes_bot) <a href="https://twitter.com/heroes_bot/status/873491081173897216?ref_src=twsrc%5Etfw">June 10, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>Recently I started working on Debian Packaging. <a href="http://civic.gnu.org.in/author/praveen">Praveen</a> sir has always been very supportive of me and answered all my ludicrous questions very patiently. My conversation with him about free software philosophy has been very enlightening. Debian Packaging was a very satisfying experience to be able to give something back to the community. Now, I hold <a href="https://qa.debian.org/developer.php?login=yashagarwaljpr@gmail.com">one</a> package in the unstable Debian repository and <a href="https://qa.debian.org/developer.php?login=bansaly26@gmail.com">two</a> more packages in the pipeline for approval.</p>






<div class="gallery caption-position-bottom caption-effect-slide hover-effect-zoom hover-transition" itemscope itemtype="http://schema.org/ImageGallery">
        
    


    <link rel="stylesheet" href="/css/hugo-easy-gallery.css">
    


<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2017-12-31/HackFest1.jpg');">
            <img itemprop="thumbnail" src="/images/2017-12-31/HackFest1.jpg" alt="Working on my first Debian package"/>
        </div>
        <a href="/images/2017-12-31/HackFest1.jpg" itemprop="contentUrl"></a>
            <figcaption>
                    <p>Working on my first Debian package</p>
            </figcaption>
    </figure>
</div>

    


<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img" style="background-image: url('https://yashagarwal.in//images/2017-12-31/HackFest2.jpg');">
            <img itemprop="thumbnail" src="/images/2017-12-31/HackFest2.jpg" alt="Praveen sir and team"/>
        </div>
        <a href="/images/2017-12-31/HackFest2.jpg" itemprop="contentUrl"></a>
            <figcaption>
                    <p>Praveen sir and team</p>
            </figcaption>
    </figure>
</div>


</div>
<h2 id="placement">Placement</h2>
<p>I joined NIT Calicut due to many <a href="http://dsanghi.blogspot.in/2011/05/my-2011-list-of-recommended-csit.html">reasons</a>. Placements were undoubtedly one of the most important of them. Fortunately, I was among first few students to get placed in my batch. That moment came with a great relief in my life.</p>



<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2017-12-31/placement.png#center" alt="A private post on FB, now public"/>
        </div>
        <a href="/images/2017-12-31/placement.png#center" itemprop="contentUrl"></a>
            <figcaption>
                    <p>A private post on FB, now public</p>
            </figcaption>
    </figure>
</div>

<h2 id="reading">Reading</h2>
<p>I had started this year with an aim to read ten books and keep track of my reading on <a href="https://www.goodreads.com/user_challenges/8390620">Goodreads</a>. In the end, I could not finish my goal. I did occasionally try to meet my goal, but my excessive reliance on soft copies of the books always distracted me. Now, it is not a surprise that I am unable to read anything on a screen. I got three hard copy books and finished two of them. However, I could not go past more than 20 pages of any digital book, that I bought on Kindle.</p>
<h2 id="writing">Writing</h2>
<p>I have not written for the most of the year. I do think about writing occasionally and keep a note of all the ideas that I get. However, due to my busy schedule and my usual procrastination, I do not write that often. In 2018, I will try to write more often.</p>
<h2 id="health">Health</h2>
<p>It is one issue where I do not put enough stress. I can divide my year into two parts for this portion. Pre Birthday half and post Birthday half. I maintained a daily exercise routine for the first half of the year. That helped me in many ways. I felt more energetic, more productive and more resolute to troubles in life. I slept at ten each day and woke up early morning. It resulted in excellent health, which I had always lacked.</p>
<p>However, the second half of the year was disastrous. Due to weather and other unavoidable circumstances, I could not keep up my routine; once I came back to college. I started sleeping late again, and that resulted in me going to docter very often in the last two months.</p>
<h2 id="relations">Relations</h2>
<p>I continued to feel bored in the company of people. It is somewhat strange that after getting into college, year by year, my interest in public events has decreased gradually. It may be because of the difference in my understanding of happiness and that of others.</p>
<p>I built good relations with some faculties in the <a href="http://cse.nitc.ac.in">Department</a>, my technical skills got me some admirers, who eventually became my <em>friends</em>. I made some new friends from MCA also this year. It has been a pleasant experience overall.</p>
<p><strong><em>Looking forward to 2018 for, full of new experiences!</em></strong></p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/write-ups" term="write-ups" label="Write-ups" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/review" term="review" label="review" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Setting Up SSH Agent in i3]]></title>
            <link href="https://yashagarwal.in/posts/2017/12/setting-up-ssh-agent-in-i3/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2017/12/setting-up-alm-octane-with-docker-compose/?utm_source=atom_feed" rel="related" type="text/html" title="Setting up ALM Octane with Docker Compose" />
                <link href="https://yashagarwal.in/posts/2017/10/fixing-hindi-fonts-in-arch-linux/?utm_source=atom_feed" rel="related" type="text/html" title="Fixing Hindi Fonts in Arch Linux" />
                <link href="https://yashagarwal.in/posts/2017/03/mounting-ntfs-partitions-on-arch-linux/?utm_source=atom_feed" rel="related" type="text/html" title="Mounting NTFS partitions on Arch Linux" />
                <link href="https://yashagarwal.in/posts/2016/06/custom-arch-linux-setup-with-openbox/?utm_source=atom_feed" rel="related" type="text/html" title="Custom Arch Linux setup with Openbox" />
            
                <id>https://yashagarwal.in/posts/2017/12/setting-up-ssh-agent-in-i3/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2017-12-27T20:21:09+05:30</published>
            <updated>2017-12-27T20:21:09+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>In this post, I will write about the procedure to correctly setup SSH and GPG agents in the i3 window manager. To follow this post, you need to have ssh-keys and your private GPG keys ready. If you do not already have these keys with you, I will describe the process of creating the keys.</p>
<h2 id="ssh">SSH</h2>
<p>Generating an SSH key pair provides you with a public key and a private key. The private key should never be given to anyone and public key, well the name itself is self-explanatory.</p>
<p>To create a new key pair, open a terminal and paste the text below.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">ssh-keygen -t rsa -b <span class="m">4096</span> -C <span class="s2">&#34;your_email_address&#34;</span></code></pre></div></p>
<p>This command will create a new ssh key pair with the given email address as the label. Press Enter for any question asked. When it asks for the passphrase, type a strong passphrase, otherwise leave it blank to have no password.</p>
<h2 id="gpg">GPG</h2>
<p>You might need to download the GPG command line tools before following the below steps. Follow your distribution&rsquo;s documentation for more help.</p>
<p>Once you have downloaded the tools, open a terminal, and type the following command.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">gpg --gen-key</code></pre></div>
You will see something like this. Enter 1 to select the default key choice.</p>
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">gpg (GnuPG) 1.4.20; Copyright (C) 2015 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

gpg: directory `/home/yash/.gnupg&#39; created
gpg: new configuration file `/home/yash/.gnupg/gpg.conf&#39; created
gpg: WARNING: options in `/home/yash/.gnupg/gpg.conf&#39; are not yet active during this run
gpg: keyring `/home/yash/.gnupg/secring.gpg&#39; created
gpg: keyring `/home/yash/.gnupg/pubring.gpg&#39; created
Please select what kind of key you want:
   (1) RSA and RSA (default)
   (2) DSA and Elgamal
   (3) DSA (sign only)
   (4) RSA (sign only)
Your selection?</code></pre></div>
<p>At the next prompt, enter the key size. It is recommended to use the maximum key size of 4096 bits.</p>
<p>Enter the time duration for which the key should remain valid. Press Enter to specify the default selection, indicating that the key does not expire.</p>
<p>After verifying the information, enter your user information and a strong passphrase. Afterward, GPG will start generating your key. You will see:
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">We need to generate a lot of random bytes. It is a good idea to perform some other action (type on the keyboard, move the mouse,
utilize the disks) during the prime generation; this gives the random number generator a better chance to gain enough entropy.</code></pre></div></p>
<p>You can now use the key (until it expires) to encrypt your data.</p>
<h2 id="setting-up-ssh-agent">Setting up SSH Agent</h2>
<h3 id="configuring-i3">Configuring i3</h3>
<p><strong>Update (26/05/2018):</strong> <em>As pointed out by <a href="https://sakshamsharma.com/">Saksham</a> in the comments below, this step is not required for the setup of SSH in i3. This step can be safely ignored.</em></p>
<p>Open i3 configuration file and add an <code>exec_always</code> statement -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">exec_always ~/.config/i3/scripts/gnome-keyring.sh</code></pre></div></p>
<p>Obviously, you will need to change the path according to your OS. Now make a new file in <code>~/.config/i3/scripts</code> with name <code>gnome-keyring.sh</code> and paste the below text in it.</p>
<p><div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">eval</span> <span class="k">$(</span>/usr/bin/gnome-keyring-daemon --start --components<span class="o">=</span>gpg,pkcs11,secrets,ssh<span class="k">)</span>
<span class="nb">export</span> GNOME_KEYRING_CONTROL GNOME_KEYRING_PID GPG_AGENT_INFO SSH_AUTH_SOCK</code></pre></div>
(Assuming that you already have installed gnome-keyring)</p>
<p>Now, reload the i3.</p>
<h3 id="configuring-ssh">Configuring SSH</h3>
<p><strong>Update (26/05/2018):</strong> <em>This step is also optional. Thanks to <a href="https://sakshamsharma.com/">Saksham</a> for pointing it out.</em></p>
<p>Open <code>~/.ssh/config</code> file and add following content to it -</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">Host *
  AddKeysToAgent yes
  IdentityFile /home/&lt;your username&gt;/.ssh/id_rsa</code></pre></div>
<p>Replace &lt;your username&gt; accordingly.</p>
<h3 id="setting-up-bashrc">Setting up .bashrc</h3>
<p>I am not using a login shell, and I could not find any suitable method to source <code>~/.profile</code> or <code>~/.bash_profile</code> on login in i3. So I added my configuration to <code>~/.bashrc</code> file. I know it is a hack, but it works well for me without much headache.</p>
<p>Open <code>~/.bashrc</code> file and add following lines to the end of the file.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="k">if</span> <span class="o">[</span> -f ~/.ssh/agent.env <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
    . ~/.ssh/agent.env &gt; /dev/null
    <span class="k">if</span> ! <span class="nb">kill</span> -0 <span class="nv">$SSH_AGENT_PID</span> &gt; /dev/null 2&gt;<span class="p">&amp;</span>1<span class="p">;</span> <span class="k">then</span>
        <span class="nb">echo</span> <span class="s2">&#34;Stale agent file found. Spawning a new agent. &#34;</span>
        <span class="nb">eval</span> <span class="sb">`</span>ssh-agent <span class="p">|</span> tee ~/.ssh/agent.env<span class="sb">`</span>
        ssh-add
    <span class="k">fi</span>
<span class="k">else</span>
    <span class="nb">echo</span> <span class="s2">&#34;Starting ssh-agent&#34;</span>
    <span class="nb">eval</span> <span class="sb">`</span>ssh-agent <span class="p">|</span> tee ~/.ssh/agent.env<span class="sb">`</span>
    ssh-add
<span class="k">fi</span></code></pre></div></p>
<p>It will automatically start an <code>ssh-agent</code> if it is not already running. Otherwise, it attaches to a previously running agent.</p>
<p>Now log out and log in again to see if ssh-agent works. Open a terminal and run the command <code>ssh-add -l</code>. It will show you the hash value of your ssh-key, which is loaded by the ssh-agent.</p>
<p>That is all for today. Thank you for reading!</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/hacks" term="hacks" label="Hacks" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/arch-linux" term="arch-linux" label="Arch Linux" />
                             
                                <category scheme="https://yashagarwal.in/tags/i3" term="i3" label="i3" />
                             
                                <category scheme="https://yashagarwal.in/tags/ssh" term="ssh" label="SSH" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Setting up ALM Octane with Docker Compose]]></title>
            <link href="https://yashagarwal.in/posts/2017/12/setting-up-alm-octane-with-docker-compose/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2017/10/fixing-hindi-fonts-in-arch-linux/?utm_source=atom_feed" rel="related" type="text/html" title="Fixing Hindi Fonts in Arch Linux" />
                <link href="https://yashagarwal.in/posts/2017/03/mounting-ntfs-partitions-on-arch-linux/?utm_source=atom_feed" rel="related" type="text/html" title="Mounting NTFS partitions on Arch Linux" />
                <link href="https://yashagarwal.in/posts/2016/06/custom-arch-linux-setup-with-openbox/?utm_source=atom_feed" rel="related" type="text/html" title="Custom Arch Linux setup with Openbox" />
            
                <id>https://yashagarwal.in/posts/2017/12/setting-up-alm-octane-with-docker-compose/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2017-12-26T20:53:35+05:30</published>
            <updated>2017-12-26T20:53:35+05:30</updated>
            
            
            <content type="html"><![CDATA[<p>Recently, I got a chance to set up ALM Octane on one of my university servers for a course project. From the support page of ALM Octane:</p>
<blockquote>
<p>ALM Octane is a web-based application lifecycle management platform that enables teams to collaborate easily, manage the product delivery pipeline, and visualize the impact of changes.</p>
</blockquote>
<h2 id="precursor">Precursor</h2>
<p>My <a href="http://cse.nitc.ac.in">department</a> insists on using open-source software (a plus point, indeed!). But ALM Octane has Oracle DB/MSSQL as a dependency. My professor was not very enthusiastic about installing a proprietary database on the server. So I came up with a different approach. I set up this database (<a href="http://www.oracle.com/technetwork/database/database-technologies/express-edition/overview/index.html">free version</a> of Oracle DB, the Oracle Database 11g Express Edition) in a Docker container. ALM Octane has three components &ndash; Oracle DB, Elastic Search, and the Octane Server itself. The problem was to handle the condition that these three components should be installed on different machines. I decided to use three separate Docker containers for this isolation and then configured them to communicate with each other with docker-compose.</p>
<h3 id="wait--docker-compose">Wait &hellip; Docker Compose?</h3>
<p>(Skip this if already know about Docker and Compose)</p>
<blockquote>
<p>Docker-compose is a tool to define and run multi-container Docker applications. Compose uses a compose file to configure the services used by the applications. Then all the services and the application can be run by using a single command.</p>
</blockquote>
<p>So before reading this article any further, if you do not know about docker-compose, go and read about it.</p>
<h2 id="the-problem">The Problem</h2>
<p>Three primary services are required for the proper functioning of the Octane Server &ndash; Octane, Oracle DB and Elastic Search. The difficulty was to set up adequate configuration options for these services and the appropriate setup for communication between them. I searched on Docker Hub for any pre-built images. Fortunately, I found some pre-built Docker images for my purpose. So I started writing my config file.</p>
<h2 id="the-solution">The Solution</h2>
<p>Here is my config file for easy reference.
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml"><span class="k">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;2&#39;</span><span class="w">
</span><span class="w"></span><span class="k">services</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="k">octane_oracle</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="k">image</span><span class="p">:</span><span class="w"> </span>alexeiled/docker-oracle-xe-11g<span class="w">
</span><span class="w">    </span><span class="k">shm_size</span><span class="p">:</span><span class="w"> </span>2g<span class="w">
</span><span class="w">    </span><span class="k">mem_limit</span><span class="p">:</span><span class="w"> </span>4g<span class="w">
</span><span class="w">  </span><span class="k">octane_es</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="k">image</span><span class="p">:</span><span class="w"> </span>elasticsearch<span class="p">:</span><span class="m">2.4</span><span class="w">
</span><span class="w">    </span><span class="k">environment</span><span class="p">:</span><span class="w">
</span><span class="w">      </span>- ES_HEAP_SIZE=4G<span class="w">
</span><span class="w">    </span><span class="k">mem_limit</span><span class="p">:</span><span class="w"> </span>4g<span class="w">
</span><span class="w">  </span><span class="k">octane</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="k">image</span><span class="p">:</span><span class="w"> </span>hpsoftware/almoctane<span class="w">
</span><span class="w">    </span><span class="k">ports</span><span class="p">:</span><span class="w">
</span><span class="w">      </span>- <span class="s2">&#34;8080:8080&#34;</span><span class="w">
</span><span class="w">    </span><span class="k">volumes</span><span class="p">:</span><span class="w">
</span><span class="w">      </span>- /opt/octane/conf<span class="p">:</span>/opt/octane/conf<span class="w">
</span><span class="w">      </span>- /opt/octane/log<span class="p">:</span>/opt/octane/log<span class="w">
</span><span class="w">      </span>- /opt/octane/repo<span class="p">:</span>/opt/octane/repo<span class="w">
</span><span class="w">    </span><span class="k">links</span><span class="p">:</span><span class="w">
</span><span class="w">      </span>- octane_oracle<span class="w">
</span><span class="w">      </span>- octane_es<span class="w">
</span><span class="w">    </span><span class="k">mem_limit</span><span class="p">:</span><span class="w"> </span>4g<span class="w">
</span><span class="w">    </span><span class="k">env_file</span><span class="p">:</span><span class="w">
</span><span class="w">      </span>- ./octane.env</code></pre></div></p>
<p>The configuration options in the code are for a system with RAM of 8GB. The options must be tuned for the best performance before deploying on the production server.</p>
<p>In the code, I have exposed port <code>8080</code> of the Octane Docker container to the port 8080 of the host machine. It will make sure that we can access the Octane application on <code>localhost:8080</code>. The <code>octane.env</code> file contains three variables for easy site management.</p>
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml">SERVER_DOMAIN=<span class="s2">&#34;your domain name&#34;</span><span class="w">
</span><span class="w"></span>ADMIN_PASSWORD=<span class="s2">&#34;your password&#34;</span><span class="w">
</span><span class="w"></span><span class="c">#This disables the minimum memory check to enable to run on smaller machines.</span><span class="w">
</span><span class="w"></span>DISABLE_VALIDATOR_MEMORY=<span class="kc">true</span></code></pre></div>
<p>Now, if you try to run the container with <code>docker-compose up</code>, you will encounter various validation errors. It is because, before starting the server, you need to adjust some settings. If you noticed in the config file, there is a section to define volumes. These volumes are persistent and are used to keep changes saved between two docker-compose runs. I have mapped three volumes from the Docker container to the host machine. So you can now edit the files in the <code>/opt/octane/</code> folder on the host machine, and changes will reflect in the Docker container. The file where you will have to make changes is <code>/opt/octane/conf/setup.xml</code>.</p>
<p>You can read the documentation of ALM Octane to find out which settings to be changed. Once you do the necessary changes, fire up the command <code>docker-compose up</code> and wait for some time. Docker Compose will finish processing, and the server can be accessed on <a href="http://localhost:8080">http://localhost:8080</a> on the host machine. While deploying it on the production server, make sure that your network administrator has opened the port 8080 for your server. Otherwise, the site will not be accessible. Also, the docker-compose can be run in the background by issuing command <code>docker-compose up -d</code>.</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/arch-linux" term="arch-linux" label="Arch Linux" />
                             
                                <category scheme="https://yashagarwal.in/tags/docker" term="docker" label="Docker" />
                             
                                <category scheme="https://yashagarwal.in/tags/octane" term="octane" label="Octane" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Fixing Hindi Fonts in Arch Linux]]></title>
            <link href="https://yashagarwal.in/posts/2017/10/fixing-hindi-fonts-in-arch-linux/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2017/03/mounting-ntfs-partitions-on-arch-linux/?utm_source=atom_feed" rel="related" type="text/html" title="Mounting NTFS partitions on Arch Linux" />
                <link href="https://yashagarwal.in/posts/2016/06/custom-arch-linux-setup-with-openbox/?utm_source=atom_feed" rel="related" type="text/html" title="Custom Arch Linux setup with Openbox" />
            
                <id>https://yashagarwal.in/posts/2017/10/fixing-hindi-fonts-in-arch-linux/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2017-10-17T21:55:53+05:30</published>
            <updated>2017-10-17T21:55:53+05:30</updated>
            
            
            <content type="html"><![CDATA[



    

    
    

    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.css" integrity="sha256-sCl5PUOGMLfFYctzDW3MtRib0ctyUvI9Qsmq2wXOeBY=" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/default-skin/default-skin.min.css" integrity="sha256-BFeI1V+Vh1Rk37wswuOYn5lsTcaU96hGaI7OUVCLjPc=" crossorigin="anonymous" />

    
    <link rel="stylesheet" href="/css/photoswipe.min.d780348a887d97b4d6cc664301a2941706e4a02aeb1533524fcce3b7b9b64b4f.css">

    

    
    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
        
        <div class="pswp__bg"></div>
        
        <div class="pswp__scroll-wrap">
            
            <div class="pswp__container">
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
            </div>
            
            <div class="pswp__ui pswp__ui--hidden">
                <div class="pswp__top-bar">
                    
                    <div class="pswp__counter"></div>
                    <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                    <button class="pswp__button pswp__button--share" title="Share"></button>
                    <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                    <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>
                    
                    
                    <div class="pswp__preloader">
                        <div class="pswp__preloader__icn">
                            <div class="pswp__preloader__cut">
                                <div class="pswp__preloader__donut"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                    <div class="pswp__share-tooltip"></div>
                </div>
                <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
                </button>
                <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
                </button>
                <div class="pswp__caption">
                    <div class="pswp__caption__center"></div>
                </div>
            </div>
        </div>
    </div>

<p>When viewing Hindi content in any browser in Arch Linux, the rendering looks weird.</p>



    <link rel="stylesheet" href="/css/hugo-easy-gallery.css">
    


<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2017-10-17/before.png" alt="before applying the fix"/>
        </div>
        <a href="/images/2017-10-17/before.png" itemprop="contentUrl"></a>
            <figcaption>
                    <p>before applying the fix</p>
            </figcaption>
    </figure>
</div>

<p>It doesn&rsquo;t look good, right! I&rsquo;ll try to fix this issue in this post. You might need to install the appropriate <a href="https://wiki.archlinux.org/index.php/fonts">font support</a> in Arch Linux before applying this fix. The suitable package for installing Indic Language support is <a href="https://www.archlinux.org/packages/extra/any/ttf-indic-otf/">ttf-indic-otf</a>.</p>
<p>Now go to <code>/usr/share/fonts/TTF</code> and take the backup of two fonts <code>FreeSans.ttf</code> and <code>FreeSerif.ttf</code>. Now delete these two fonts from the directory. Restart the browser and see the difference.</p>



<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2017-10-17/after.png" alt="after applying the fix"/>
        </div>
        <a href="/images/2017-10-17/after.png" itemprop="contentUrl"></a>
            <figcaption>
                    <p>after applying the fix</p>
            </figcaption>
    </figure>
</div>

<p>This bug is reported in <a href="https://bugs.launchpad.net/ubuntu/+source/chromium-browser/+bug/856736">this</a> bug report in 2011. I don&rsquo;t know why nobody has fixed it yet. Or maybe I was not able to find the proper solution. This workaround is also given in the same bug report.</p>
<p>I hope this helps. :)</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/hacks" term="hacks" label="Hacks" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/arch-linux" term="arch-linux" label="Arch Linux" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Mounting NTFS partitions on Arch Linux]]></title>
            <link href="https://yashagarwal.in/posts/2017/03/mounting-ntfs-partitions-on-arch-linux/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2016/06/custom-arch-linux-setup-with-openbox/?utm_source=atom_feed" rel="related" type="text/html" title="Custom Arch Linux setup with Openbox" />
            
                <id>https://yashagarwal.in/posts/2017/03/mounting-ntfs-partitions-on-arch-linux/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2017-03-14T10:30:36+00:00</published>
            <updated>2017-03-14T10:30:36+00:00</updated>
            
            
            <content type="html"><![CDATA[<p>Yesterday I installed Arch Linux once again. A clean, bloat-free desktop with Budgie Desktop environment with some must-have open source tools. Everything worked fine except WiFi and some minor bugs in Budgie(I don&rsquo;t know whether it is a bug in Budgie or just a wrong setting). I also faced the problem of mounting Windows NTFS volumes on the user&rsquo;s wish. Arch Linux wiki has details about how to automount partitions on start-up. Still, I had a tough time to find out what exactly needs to be done to simulate the behavior of Ubuntu-like distribution on the mounting of NTFS drives. I got a hint from Arch Linux Wiki about the Polkit configuration setting, which can be used to allow a standard user to mount partitions. Here is a solution that I found after a long search on various Arch Linux Community pages.</p>
<p>You will need to install <code>ntfs-3g</code>, <code>polkit</code> and <code>udisks2</code> to use this code. Please refer to <a href="https://wiki.archlinux.org/index.php/Udisks">Arch Wiki</a>.</p>
<p>I think when using Gentoo, you will also need to compile the support for the NTFS file system in Kernel also. Please see <a href="https://wiki.gentoo.org/wiki/NTFS">here</a>.</p>
<p>Add the following code to <code>/etc/polkit-1/rules.d/10-udisks2.rules</code> -</p>
<div class="highlight"><pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="c1">// Allow udisks2 to mount devices without authentication for users in the &#34;wheel&#34; group.
</span><span class="c1"></span><span class="nx">polkit</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">action</span><span class="p">,</span> <span class="nx">subject</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">((</span><span class="nx">action</span><span class="p">.</span><span class="nx">id</span> <span class="o">==</span> <span class="s2">&#34;org.freedesktop.udisks2.filesystem-mount-system&#34;</span> <span class="o">||</span>
        <span class="nx">action</span><span class="p">.</span><span class="nx">id</span> <span class="o">==</span> <span class="s2">&#34;org.freedesktop.udisks2.filesystem-mount&#34;</span><span class="p">)</span> <span class="o">&amp;&amp;</span>
        <span class="nx">subject</span><span class="p">.</span><span class="nx">isInGroup</span><span class="p">(</span><span class="s2">&#34;wheel&#34;</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nx">polkit</span><span class="p">.</span><span class="nx">Result</span><span class="p">.</span><span class="nx">YES</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">);</span>

<span class="nx">polkit</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">action</span><span class="p">,</span> <span class="nx">subject</span><span class="p">)</span> <span class="p">{</span>
   <span class="k">if</span> <span class="p">((</span><span class="nx">action</span><span class="p">.</span><span class="nx">id</span> <span class="o">==</span> <span class="s2">&#34;org.freedesktop.udisks.filesystem-mount-system-internal&#34;</span><span class="p">)</span> <span class="o">&amp;&amp;</span>
        <span class="nx">subject</span><span class="p">.</span><span class="nx">isInGroup</span><span class="p">(</span><span class="s2">&#34;wheel&#34;</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nx">polkit</span><span class="p">.</span><span class="nx">Result</span><span class="p">.</span><span class="nx">YES</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">);</span>
</code></pre></div>
<p>Now you will be able to mount NTFS partition without any problem. :)</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/hacks" term="hacks" label="Hacks" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/arch-linux" term="arch-linux" label="Arch Linux" />
                             
                                <category scheme="https://yashagarwal.in/tags/polkit" term="polkit" label="Polkit" />
                             
                                <category scheme="https://yashagarwal.in/tags/ntfs" term="ntfs" label="NTFS" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[FOSSMeet'17]]></title>
            <link href="https://yashagarwal.in/posts/2017/03/fossmeet17/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://yashagarwal.in/posts/2016/04/searching-the-goal/?utm_source=atom_feed" rel="related" type="text/html" title="Searching the goal" />
            
                <id>https://yashagarwal.in/posts/2017/03/fossmeet17/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2017-03-13T21:03:16+00:00</published>
            <updated>2017-03-13T21:03:16+00:00</updated>
            
            
            <content type="html"><![CDATA[<p>One more edition of FOSSMeet&rsquo;17 was successfully organized in NIT Calicut recently. As an active member of the organizing team of this year&rsquo;s edition (though I sidelined myself at the end) and a keen but silent observer, I want to share my experience, ideas, and some observations through this post.</p>
<h2 id="marketing-website">Marketing Website</h2>
<p>We started planning the next edition of FOSSMeet sometime around September. Not many people were interested in planning. Anyway, Shrimadhav and I began working on the marketing website. The first design was straightaway rejected by Piyush and Simsar, which I feel, was fruitful. In the process, I learned some critical insights about planning, team management, and design of a user-friendly website. So I again started working on the site. The end product was clean, good looking, and simple (at least I was happy with it :P).</p>
<p>In the meanwhile, Amal and I started thinking about ideas, how can we restructure the FOSSCell, which had not seen a single activity (except those trademark events which were conducted just for formality) in years. I now understand that it was a mistake. It is a prerequisite about open source contribution that you should contribute to the products which you use in day to day life. When we started thinking about the FOSSCell, we didn&rsquo;t know about any of these points. We conducted a formal test(more of a filtering process), then we had a small meeting with the selected 2nd years about the FOSSCell, and we discussed the plan for next semester. Then everyone left for winter vacations.</p>
<h2 id="a-period-of-self-evaluation">A period of self-evaluation</h2>
<p>In the winter holidays, we tried to have some IRC discussions, which again was somewhat successful because of the efforts from Shrimadhav and Simsar. It was a new experience for me also, but still, I tried to attend as much as I could. I also took one session on Git and Vim, which again was an entirely new experience for me.</p>
<p>In the winter vacation, I found some time to think about the purpose of FOSSMeet and FOSSCell and in what direction we were heading. I somehow understood that I was not qualified enough to guide someone about open source contribution or in general FOSS ideology, because I, myself was not contributing anything to open source community, and had no characteristic of a FOSS enthusiast. So I somehow lost my interest in FOSSCell and even in Linux. Shrimadhav asked me my ideas about FOSSCell activities, but I had no clue what to say. So that&rsquo;s how the FOSSCell again died without achieving anything significant. I feel it was my mistake. I still feel sad about this. :(</p>
<h2 id="fossmeet-time">FOSSMeet time</h2>
<p>So as the FOSSMeet&rsquo;s dates came near, people started coming for <em>volunteering</em>. It was good for the event, though. The funnel was already up last semester, and we were getting some good proposals also. FOSSMeet also went superbly. All the participants gave excellent reviews. There were some hiccups also, The Campus Internet Connectivity being the most significant one. There were some issues in SSL also, again, somewhere I hold an important responsibility. All in all, everybody praised the event and organization of the event. This year, we tried to reduce the use of plastics, and I feel that we were quite successful.</p>
<h2 id="my-observations">My Observations</h2>
<p>There were some issues about the event, which I didn&rsquo;t like at a personal level. I sometimes think about what is the motive for conducting some activities in colleges. An event like FOSSMeet which attract the attention of all FOSS enthusiasts from all over Kerala has a huge potential of inspiring the young folks of NIT Calicut. We somehow succeed in that motive, but what about the situation after FOSSMeet. The enthusiasm about FOSS should not last just for two days, but we cannot blame others for the condition. I don&rsquo;t have a proper idea about the FOSS because there was no proper guidance from my senior batches. I learned many things in the workshops organized by CSEA, in fact, I first learned the proper use of Linux Shell in the Linux workshop conducted by CSEA (and FOSSCell, at least for formality). But you can&rsquo;t ask them to do everything. I think they are already overloaded. But there were no such workshops by FOSSCell.</p>
<p>Second, the curriculum of the NITC CSE department focuses more on the theoretical side of Computer Science, which is good. But it negatively affects student activities outside the classroom. That is one of the primary reasons why we cannot produce more GSoC participants or why don&rsquo;t we have more open source enthusiasts.</p>
<p>Third, one of the speakers in FOSSMeet mentioned one fundamental flaw in the structure of the organizing team of FOSSMeet. It doesn&rsquo;t have any representation from other branches. FOSSMeet has become an event for CSE folks, where people from different departments do not take any interest. I think publicity was a major issue here. I don&rsquo;t believe that there was any publicity done to explain FOSSMeet to the students of other branches. (If I am wrong here, please correct me).</p>
<p>Fourth, people are ready to <em>volunteer</em> for organizing an event, but they do not want to come and attend the workshops. FOSSMeet is held by individuals who have no previous experience of FOSS and have no intention to dive into open source community any time soon. FOSSMeet has become a tradition that is continued every year because it happened the previous year also. I do not feel that enthusiasm to promote FOSS in FOSSMeet because we are organizing it to keep the legacy. I am not saying that whatever effort organizers put in conducting FOSSMeet&rsquo;17 was not significant. I am not the right person to blame them because I was also part of the same team. But still, I feel that FOSSMeet has lost its original motive to promote FOSS culture in NITC. It encourages more people from outside NITC, but inside NITC, it is just one of those many events organized by random clubs.</p>
<h2 id="conclusion">Conclusion</h2>
<p>It&rsquo;s been an interesting one year for me after becoming SS Lab Admin because I started taking part in department activities that I always wanted to do. Being a member of the organizing team of FOSSMeet&rsquo;17 was again a learning experience for me. I learned many new things, in SSL and outside SSL too. I committed some mistakes also in making the right decisions at the right moment, but that&rsquo;s how I learn. So no regrets. :) I hope that I will find time next year for FOSSMeet, although I would prefer to attend FOSSMeet as a participant observing everything silently rather than being a part of the organizing team.</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/write-ups" term="write-ups" label="Write-ups" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/nitc" term="nitc" label="NITC" />
                             
                                <category scheme="https://yashagarwal.in/tags/foss" term="foss" label="FOSS" />
                             
                                <category scheme="https://yashagarwal.in/tags/fossmeet" term="fossmeet" label="FOSSMeet" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Setting up Hugo automatic deployment to Github with Wercker]]></title>
            <link href="https://yashagarwal.in/posts/2017/02/setting-up-hugo-automatic-deployment-to-github-with-wercker/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2017/02/setting-up-hugo-automatic-deployment-to-github-with-wercker/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2017-02-22T13:37:56+05:30</published>
            <updated>2017-02-22T13:37:56+05:30</updated>
            
            
            <content type="html"><![CDATA[



    

    
    

    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.css" integrity="sha256-sCl5PUOGMLfFYctzDW3MtRib0ctyUvI9Qsmq2wXOeBY=" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/default-skin/default-skin.min.css" integrity="sha256-BFeI1V+Vh1Rk37wswuOYn5lsTcaU96hGaI7OUVCLjPc=" crossorigin="anonymous" />

    
    <link rel="stylesheet" href="/css/photoswipe.min.d780348a887d97b4d6cc664301a2941706e4a02aeb1533524fcce3b7b9b64b4f.css">

    

    
    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
        
        <div class="pswp__bg"></div>
        
        <div class="pswp__scroll-wrap">
            
            <div class="pswp__container">
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
            </div>
            
            <div class="pswp__ui pswp__ui--hidden">
                <div class="pswp__top-bar">
                    
                    <div class="pswp__counter"></div>
                    <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                    <button class="pswp__button pswp__button--share" title="Share"></button>
                    <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                    <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>
                    
                    
                    <div class="pswp__preloader">
                        <div class="pswp__preloader__icn">
                            <div class="pswp__preloader__cut">
                                <div class="pswp__preloader__donut"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                    <div class="pswp__share-tooltip"></div>
                </div>
                <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
                </button>
                <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
                </button>
                <div class="pswp__caption">
                    <div class="pswp__caption__center"></div>
                </div>
            </div>
        </div>
    </div>

<p>Recently, I again migrated my blog from Pelican to Hugo. So till now, I have experimented with Wordpress, Jekyll, Pelican, and Hugo. Without any doubt, Hugo is the simplest to set up. This time, I have setup Hugo in Windows, as I think, in my system, I reinstall Windows OS much less frequently than the Linux. So that way, it will be less painful for me to set up the blog again.</p>
<p>In this post, I will list all the process which I used to set up automatic deployment of Hugo generated site to Github pages using Wercker. In the beginning, I was trying to use Travis-CI, but then I read about Wercker somewhere. I was impressed with the integration of Wercker with Hugo and the availability of many its community-generated “steps” for the build and deploy process.</p>
<p><a href="https://gohugo.io/overview/introduction/">Hugo Docs</a> already have a fantastic <a href="https://gohugo.io/tutorials/automated-deployments/">documentation</a> for setting up Hugo with Wercker, but it is outdated. Other documentations available on-line is also obsolete. Wercker has changed many functionalities in its platform, which made it difficult for me to set up things correctly. But after hours of trial and error cycle, I was able to build and deploy my static files successfully.</p>
<p>Here I would like to share the issues I encountered and the tweaks I’ve made. The source codes of this site can be found <a href="https://github.com/yash2696/yash2696.github.io">here</a>.</p>
<h2 id="project-pages-or-user-pages">Project Pages or User Pages</h2>
<p>Two types of sites are supported on Github Pages, User Site, and Project Site. User Sites will serve the files stored in the master branch of the repository <code>https://github.com/user_name/user_name.github.io</code> at the address <code>https://user_name.github.io.</code> For the Project sites, everything under the gh-pages will be served at the address <code>https://repo_name.github.io</code>.</p>
<p>My site is a User site, so I wanted all the static files to be saved in the master branch. As Hugo generates all the static files under <code>public</code> directory, I needed another branch to store my source files. So my made a new branch <code>source</code>, which will save all the source files for my blog. Don’t forget to remove the <code>.git</code> folder from the theme folder. Otherwise, the build will fail at a later stage. You can try using the git submodule feature to avoid this issue. I created a repository <code>yash2696.github.io</code> in Github also.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">git init                       <span class="c1">#initialized git repository in site root</span>
git checkout -b <span class="nb">source</span>         <span class="c1">#created new branch source</span>
git remote add origin https://github.com/yash2696/yash2696.github.io
git add .
git commit -m <span class="s2">&#34;Initial Commit&#34;</span>
git push origin source</code></pre></div>
<p>Then I initialized my master branch as a orphan branch.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">git checkout --orphan master
git rm -rf .
rm -f <span class="s1">&#39;.gitignore&#39;</span>
<span class="nb">echo</span> <span class="s2">&#34;#Your repository name&#34;</span> &gt; README.md
git add README.md
git commit -a -m <span class="s2">&#34;Initial Commit&#34;</span>
git push origin master</code></pre></div></p>
<h2 id="automatic-deployment-using-wrecker">Automatic deployment using Wrecker</h2>
<p>It is straightforward to build a Hugo site. Invoke <code>hugo</code> command under your root directory, Hugo will create a public folder which will contain all your content, static files, etc. Then push this directory to Github, and voila, your site is up!</p>
<p>What if a single push to <code>source</code> branch can trigger all the process for you automatically. Here the magic of continuous integration(CI) comes into the picture. A free Wercker account can be easily created and hooked to the Github account and a new application from a chosen repository. After setting up everything, a push to the development branch will automatically trigger the Wercker. One of the most significant advantages of using Wercker is its extensive collection of user-made and well documented &ldquo;steps&rdquo;. In this post, I will use two steps, <code>build hugo</code> and <code>deploy to Github</code>.</p>



    <link rel="stylesheet" href="/css/hugo-easy-gallery.css">
    


<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2017-02-22/wercker-steps.png" alt="Wercker → Registry → steps"/>
        </div>
        <a href="/images/2017-02-22/wercker-steps.png" itemprop="contentUrl"></a>
            <figcaption>
                    <p>Wercker → Registry → steps</p>
            </figcaption>
    </figure>
</div>

<p>The first task is to create a <code>wercker.yml</code> file. It will tell Wercker which all actions, it should perform. Here is my <a href="https://raw.githubusercontent.com/yash2696/yash2696.github.io/source/wercker.yml">wercker.yml</a> for reference. In this, I have used two pipelines, <em>build</em> and <em>deploy</em>. Please follow the official docs for the more detailed steps. I will list all the problems which I face while setting up things properly.</p>
<h3 id="build">Build</h3>
<p>Following the official guide, I used this <a href="https://github.com/ArjenSchwarz/wercker-step-hugo-build">step</a> to trigger Hugo to build HTML pages. I had already removed git repository information from the theme folder, so this step finished successfully. If you haven’t, you may add the following piece of code in your build step.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">- script:
    name: install git
    code: <span class="p">|</span>
        apt-get update
        apt-get install git -y
    - script:
        name: initialize git submodules
        code: <span class="p">|</span>
            git submodule update --init --recursive</code></pre></div></p>
<h3 id="deploy">Deploy</h3>
<p>There is no concept named &ldquo;Add Deploy Target&rdquo; in Wercker as of now. Most of the on-line tutorials follow this process which is outdated. Now Wercker uses a concept called &ldquo;Workflows in Pipelines&rdquo;.</p>
<p>For new interface, even if you add a deploy stage in the <code>wercker.yml</code>, you will have to create a new pipeline <code>deploy</code> under the Workflows tab. After creating the pipeline, the &ldquo;YML Pipeline name&rdquo; must be set to the deploy stage name, which in this case is <code>deploy</code>.</p>
<p>In <code>deploy</code> stage, I used this <a href="https://app.wercker.com/applications/55af22c5f32b86a9290ec706/tab/details/">step</a> to deploy the built site to Github. Each pipeline starts from scratch, so for the deploy pipeline, the git package needs to be installed again. One also has to set up the environment variable <code>$GIT_TOKEN</code> to each pipeline, acquired from Github setting.</p>



<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2017-02-22/wercker-pipeline.png" alt="Wercker Pipeline"/>
        </div>
        <a href="/images/2017-02-22/wercker-pipeline.png" itemprop="contentUrl"></a>
            <figcaption>
                    <p>Wercker Pipeline</p>
            </figcaption>
    </figure>
</div>

<p>You need to generate a new access token for your deploy stage from Github settings.



<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2017-02-22/wercker-access-token.png" alt="Github Access Token"/>
        </div>
        <a href="/images/2017-02-22/wercker-access-token.png" itemprop="contentUrl"></a>
            <figcaption>
                    <p>Github Access Token</p>
            </figcaption>
    </figure>
</div>
</p>
<p>After adding the deploy stage, add the token you obtained from the Github to Environmental Variables in deploy pipeline.</p>



<div class="box fancy-figure caption-position-bottom caption-effect-appear"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2017-02-22/wercker-token.png" alt="Wercker Token"/>
        </div>
        <a href="/images/2017-02-22/wercker-token.png" itemprop="contentUrl"></a>
            <figcaption>
                    <p>Wercker Token</p>
            </figcaption>
    </figure>
</div>

<p>On the next push to your development branch, Wercker will automatically build the site and deploy it on Github Pages.</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/gh-pages" term="gh-pages" label="gh-pages" />
                             
                                <category scheme="https://yashagarwal.in/tags/hugo" term="hugo" label="Hugo" />
                             
                                <category scheme="https://yashagarwal.in/tags/github" term="github" label="Github" />
                             
                                <category scheme="https://yashagarwal.in/tags/wercker" term="wercker" label="Wercker" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Setting up Python Development Environments]]></title>
            <link href="https://yashagarwal.in/posts/2016/10/setting-up-python-development-environments/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2016/10/setting-up-python-development-environments/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2016-10-09T00:00:00+00:00</published>
            <updated>2016-10-09T00:00:00+00:00</updated>
            
            
            <content type="html"><![CDATA[<p>Recently I was searching for Python projects on Github for contribution. Every single project I found, had a thing common among them. In every project&rsquo;s contribution guide, it was asked to set up the virtual environment for the project. What the heck is this virtual environment and how does it work?</p>
<p>As a beginner to open source projects, the problem I faced, in the beginning, was how to set up the development environments for the projects I was looking at. I searched the Internet, I found some articles, but they were not complete. So I decided to write this guide, which will be useful for me in future also.</p>
<p>Python uses <code>pip</code> for package management.</p>
<h2 id="installing-pip">Installing pip</h2>
<p><code>pip</code> depends on setuptools library, which is in official Ubuntu repositories. To install it for python2 -</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo apt-get install python-setuptools</code></pre></div>
<p>Then install <code>pip</code> using -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo apt-get install python-pip</code></pre></div></p>
<p>and for python3 -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo apt-get install python3-setuptools</code></pre></div></p>
<p>Then install <code>pip</code> using -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo apt-get install python3-pip</code></pre></div></p>
<p>It should install <code>pip</code> on your system for both python versions. <code>pip</code> is very easy to use. It will take care of every single package you may require for your project.</p>
<h3 id="installing-a-package-using-pip">Installing a package using pip</h3>
<p><div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># it will search and install [package]</span>
pip install <span class="o">[</span>package<span class="o">]</span>
pip install django</code></pre></div>
If you are using python3, then don&rsquo;t forget to use <code>pip3</code>.</p>
<p><code>pip</code> can be used to install a specific version of package also.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># it will search and install [package] with [version]</span>
pip install <span class="o">[</span>package<span class="o">]==[</span>version<span class="o">]</span>
pip install <span class="nv">django</span><span class="o">==</span>1.6.5</code></pre></div></p>
<h3 id="uninstalling-a-package-using-pip">Uninstalling a package using pip</h3>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># it will search and uninstall [package]</span>
pip uninstall <span class="o">[</span>package<span class="o">]</span>
pip uninstall django</code></pre></div>
<h3 id="upgrading-a-package-using-pip">upgrading a package using pip</h3>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># it will upgrade [package] to latest version</span>
pip install --upgrade <span class="o">[</span>package<span class="o">]</span>
pip install --upgrade django</code></pre></div>
<h3 id="creating-list-of-all-packages-with-pip">Creating list of all packages with pip</h3>
<p>It is one of most used and most useful feature of <code>pip</code>. It allows you to make a list of all the dependencies of your project.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># it will output the file to current directory</span>
pip freeze &gt; <span class="o">[</span>file_name.txt<span class="o">]</span></code></pre></div></p>
<p>All these commands above will install the packages globally. But that&rsquo;s not what is desired. <code>virtualenv</code> comes to our rescue here.</p>
<h2 id="virtualenv">Virtualenv</h2>
<p><code>virtualenv</code> solves a very particular problem; it allows multiple python projects that have different and often conflicting dependencies, to coexist on the same system.</p>
<p><code>virtualenv</code> solves this problem by creating different isolated development environments for your projects. An environment is a folder which contains everything; your project needs to work properly.</p>
<h3 id="installing-virtualenv">Installing virtualenv</h3>
<p>By default, if you install <code>virtualenv</code> using <code>pip</code>, it will use system&rsquo;s default python to create virtual environments. To overcome this problem, we will install <code>virtualenv</code> using ubuntu package manager.
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo apt-get install python-virtualenv</code></pre></div></p>
<h3 id="installing-virtualenvwrapper">Installing virtualenvwrapper</h3>
<p><code>virtualenvwrapper</code> provides some set of commands which makes working with virtual environments much easier.</p>
<p>To install it -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo pip install virtualenvwrapper</code></pre></div></p>
<p><code>pip</code>, <code>virtualenv</code> and <code>virtualenvwrapper</code> are the only packages which you will need to install globally. All other per project packages will be installed in respective virtual environments.</p>
<p><code>virtualenvwrapper</code> also places all your virtual environments in one place. It makes working with projects very easy.</p>
<p>Now open your <code>.bashrc</code> and add these two lines to the end -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># All your projects will be saved in python-dev folder</span>
<span class="nb">export</span> <span class="nv">PROJECT_HOME</span><span class="o">=</span>~/python-dev

<span class="c1"># ~/python-dev/virtualenvs will contains python interpreters for each project.</span>
<span class="nb">export</span> <span class="nv">WORKON_HOME</span><span class="o">=</span>~/python-dev/virtualenvs

<span class="c1"># source the virtualenvwrapper script</span>
<span class="nb">source</span> /usr/local/bin/virtualenvwrapper.sh</code></pre></div></p>
<p>You can change <code>python-dev</code> to any name you wish. Your virtual environments will be created at that location.</p>
<p>Now restart your terminal to source the <code>.bashrc</code> or use -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">source</span> .bashrc</code></pre></div></p>
<h3 id="basic-usage">Basic Usage</h3>
<p>Create a virtual environment -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">mkvirtualenv myproject</code></pre></div></p>
<p>It will create <code>myproject</code> folder in the python-dev directory. To activate this project -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">workon myproject</code></pre></div></p>
<p>Alternatively you can create project using <code>mkproject</code> command. It will create a virtual environment as well as a project directory in the <code>$PROJECT_HOME</code>, which is <code>cd</code>-ed into when you <code>workon</code> myproject.</p>
<p>Don&rsquo;t forget to deactivate current project when you switch between different projects.</p>
<p>To deactivate a project -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">deactivate</code></pre></div></p>
<p>To delete a virtual environment -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">rmvirtualenv myproject</code></pre></div></p>
<p>List all environments -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">lsvirtualenv</code></pre></div></p>
<p>it will also list all virtual environments -
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">workon</code></pre></div></p>
<p>Please refer to virtualenvwrapper documentation for <a href="https://virtualenvwrapper.readthedocs.io/en/latest/command_ref.html">full list of virtualenvwrapper commands</a>.</p>
<p>virtualenvwrapper also provides the tab-completion feature which is very handy when you have a lot of projects to work with.</p>
<p>That&rsquo;s it. Hope you liked the post. 😄</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/pip" term="pip" label="Pip" />
                             
                                <category scheme="https://yashagarwal.in/tags/python" term="python" label="Python" />
                             
                                <category scheme="https://yashagarwal.in/tags/virtual-environments" term="virtual-environments" label="Virtual Environments" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Custom Arch Linux setup with Openbox]]></title>
            <link href="https://yashagarwal.in/posts/2016/06/custom-arch-linux-setup-with-openbox/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2016/06/custom-arch-linux-setup-with-openbox/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2016-06-09T10:20:36+00:00</published>
            <updated>2016-06-09T10:20:36+00:00</updated>
            
            
            <content type="html"><![CDATA[



    

    
    

    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.css" integrity="sha256-sCl5PUOGMLfFYctzDW3MtRib0ctyUvI9Qsmq2wXOeBY=" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/default-skin/default-skin.min.css" integrity="sha256-BFeI1V+Vh1Rk37wswuOYn5lsTcaU96hGaI7OUVCLjPc=" crossorigin="anonymous" />

    
    <link rel="stylesheet" href="/css/photoswipe.min.d780348a887d97b4d6cc664301a2941706e4a02aeb1533524fcce3b7b9b64b4f.css">

    

    
    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
        
        <div class="pswp__bg"></div>
        
        <div class="pswp__scroll-wrap">
            
            <div class="pswp__container">
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
            </div>
            
            <div class="pswp__ui pswp__ui--hidden">
                <div class="pswp__top-bar">
                    
                    <div class="pswp__counter"></div>
                    <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                    <button class="pswp__button pswp__button--share" title="Share"></button>
                    <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                    <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>
                    
                    
                    <div class="pswp__preloader">
                        <div class="pswp__preloader__icn">
                            <div class="pswp__preloader__cut">
                                <div class="pswp__preloader__donut"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                    <div class="pswp__share-tooltip"></div>
                </div>
                <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
                </button>
                <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
                </button>
                <div class="pswp__caption">
                    <div class="pswp__caption__center"></div>
                </div>
            </div>
        </div>
    </div>

<p>After my summer vacation started, I bought a new laptop, and the first thing I did was to install Arch Linux on it. After a standard arch installation procedure, I started putting together my desktop environment, beginning with ArchLinux and Openbox, and then piecing all pieces together to build a proper desktop environment. Building a desktop this way follows the Unix Methodology; have software that each does one thing well, and when you put them together, you get something amazing.</p>
<p>When I first installed Arch, I had several choices. I tried <code>xfce</code> and <code>gnome</code> as my desktop environments. While both of them have their pros and cons, I ended up liking none. The sole reason was the dependencies; these two software bring with them. My only intention of installing Arch was to have something, which I control, not like Ubuntu, where you are forced to use the preinstalled software and when you try to uninstall something, you fear of breaking some other program.</p>
<p>So I end up going the route of building something up from scratch using Openbox as a base. At this point, I have a fast, lightweight desktop that is exceptionally stable and is genuinely my desktop as I have built it from the ground up, choosing every application.</p>



    <link rel="stylesheet" href="/css/hugo-easy-gallery.css">
    


<div class="box fancy-figure caption-position-none"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2016-06-09/desktop.jpg" alt="Openbox on ArchLinux"/>
        </div>
        <a href="/images/2016-06-09/desktop.jpg" itemprop="contentUrl"></a>
            <figcaption>
                    <p>Openbox on ArchLinux</p>
            </figcaption>
    </figure>
</div>

<h2 id="window-manager">Window Manager</h2>
<p>After the installation of Arch, the first thing I did was to install <code>openbox</code>, a tiling window manager. You may also try other window managers like <code>awesome</code>, <code>i3</code>, and <code>fluxbox</code>, etc. but I chose Openbox because it is used everywhere. Thus there is a plethora of information out there about customizing it.</p>
<p>For our window manager to show up, it needs to be added either in a login manager or user&rsquo;s <code>~/.xinitrx</code> file. There is a default version of this file that contain some code which we may want to retain, so rather than making this file from scratch, copy the default version of the file to the user&rsquo;s home directory.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">cp /etc/X11/xinit/xinitrc ~/.xinitrc</code></pre></div>
<p>Now add the command <code>exec Openbox-session</code> to the end of the file. Remember that the system will ignore the lines following this command. An Openbox session should be able to be started by entering the command <code>startx</code>.</p>
<p>An openbox session can be started automatically upon login using shell&rsquo;s startup script. Add following to the shell&rsquo;s startup script, <code>~/.bash_profile</code> for bash and <code>~/.zprofile</code> for zsh.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[[</span> -z <span class="nv">$DISPLAY</span> <span class="o">&amp;&amp;</span> <span class="nv">$XDG_VTNR</span> -eq <span class="m">1</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="nb">exec</span> startx</code></pre></div>
<h2 id="configuring-openbox">Configuring Openbox</h2>
<p>Setting up openbox is quite simple. Four files make the basis of openbox configuration. They are <code>rc.xml</code>, <code>autostart</code>,  <code>menu.xml</code> and <code>environment</code>. These files controls everything about the window manager.</p>
<ul>
<li><strong>rc.xml</strong>: Determine the behavior and settings of overall Openbox session</li>
<li><strong>autostart</strong>: Contains a list of applications to be launched with the window manager</li>
<li><strong>menu.xml</strong>: It makes the right-click context menu of the desktop</li>
<li><strong>environment</strong>: Can be used to export and set relevant environmental variables</li>
</ul>
<p>For the configuration of Openbox, it is necessary to create a local Openbox profile in the user&rsquo;s home directory. A global configuration file can be found in <code>/etc/xdg/openbox</code>, which is well documented, and copying the global configuration to the user&rsquo;s directory will give a good starting point to start customizing.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">cp -R /etc/xdg/openbox ~/.config/</code></pre></div>
<p>These files can be edited by hand, although some graphical tools are also available, use of these may be desired.</p>
<h2 id="themes-and-appearance">Themes and Appearance</h2>
<p><a href="https://www.archlinux.org/packages/community/x86_64/obconf">obconf</a> and <a href="https://www.archlinux.org/packages/community/x86_64/lxappearance-obconf/">lxappearance-obconf</a> can be used to configure appearance and theme of openbox session. There are quite a few themes available in <a href="https://www.archlinux.org/packages/community/any/openbox-themes/">openbox-themes</a> package. My personal favorite is <a href="https://www.archlinux.org/packages/community/any/numix-themes/">Numix-themes</a> and <a href="https://aur.archlinux.org/packages/numix-icon-theme-git/">Numix-icon-theme-git (AUR)</a>.</p>
<p>To see changes after editing a configuration file, the Openbox needs to be refreshed. It can be done with the <code>reconfigure</code> command.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">openbox --reconfigure</code></pre></div>
<h2 id="menus">Menus</h2>
<p>The type and behavior of Openbox menus, accessible by right-clicking the background, can be changed using <code>~/.config/openbox/menu.xml</code> file. Openbox provides two kinds of menus, <code>Static</code>, and <code>Dynamic</code> menus (Piped and Generators)</p>
<p>Static menus are hardcoded in XML and is stored in the <code>menu.xml</code> file. Whenever you install a new application, you will have to update the XML file to update the menu manually. It is a viable solution if the apps are not installed on a day to day basis.</p>
<p>Pipe menus are the sections of the Openbox menu that Openbox creates on the fly by running a generic script and using its plain text output as menu entries. This scheme can be used in different ways, like adding a mail checker in the menu or adding a weather forecast menu. You can check <a href="http://openbox.org/wiki/Openbox:Pipemenus">openbox pipe menu page</a> for more information.</p>
<p>Generators are the most convenient type of menus. These can be found in most desktop environments where applications show up in the menu automatically. If applications are being installed regularly, then this will probably be the preferred choice.</p>
<h3 id="static-menus">Static Menus</h3>
<p>The process of making these menus can be automated by static menu generator like <a href="https://www.archlinux.org/packages/?name=obmenu">obmenu</a>. It will generate static menus from installed applications by looking into certain directories. Others available tools are <a href="https://www.archlinux.org/packages/?name=menumaker">menumaker</a>, <a href="https://www.archlinux.org/packages/?name=obmenu">obmenu</a> and <a href="https://www.archlinux.org/packages/?name=archlinux-xdg-menu">xdg-menu</a>.</p>
<h3 id="dynamic-menus">Dynamic Menus</h3>
<p>Dynamic menus give the same kind of functionality most people are used to. So it was my preferred choice. They can be used to generate full, complex menus on the fly. One of the most popular application for generating dynamic menus is <a href="https://aur.archlinux.org/packages/obmenu-generator/">obmenu-generator (AUR)</a>. Though it is not officially connected to Openbox, it is widely used.</p>
<p>In order to have <a href="https://aur.archlinux.org/packages/obmenu-generator/">obmenu-generator (AUR)</a> make a menu on demand, the <code>menu.xml</code> file should contain the following code as the only entry.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">&lt;?xml <span class="nv">version</span><span class="o">=</span><span class="s2">&#34;1.0&#34;</span> <span class="nv">encoding</span><span class="o">=</span><span class="s2">&#34;UTF-8&#34;</span>?&gt;
&lt;openbox_menu&gt;
    &lt;menu <span class="nv">id</span><span class="o">=</span><span class="s2">&#34;root-menu&#34;</span> <span class="nv">label</span><span class="o">=</span><span class="s2">&#34;OpenBox 3&#34;</span> <span class="nv">execute</span><span class="o">=</span><span class="s2">&#34;/usr/bin/obmenu-generator&#34;</span>&gt;&lt;/menu&gt;
&lt;/openbox_menu&gt;</code></pre></div>
<h2 id="panels-and-taskbars">Panels and Taskbars</h2>
<p>You can get any panel like <a href="https://www.archlinux.org/packages/extra/i686/xfce4-panel/">xfce4-panel</a> or the simple and customizable <a href="https://www.archlinux.org/packages/?name=tint2">tint2</a>. I chose tint2 because it very closely follows the openbox spirit of having easy customization with plain configuration files. tint2 package also containg a graphical tool <code>tint2conf</code> for customizing panel and you can obviously go right to the tint2 configuration file and edit it there. This also means it is easy to pick up your configuration file and move it to another computer, or restore an old configuration since it is as simple as pasting a text document in the right place. tint2 can also have sections for each individual desktop and has various small widget like programs that can be used with it such as a calendar, <a href="https://www.archlinux.org/packages/community/x86_64/gsimplecal/">gsimplecal</a>, a volume application, <a href="https://www.archlinux.org/packages/?name=volumeicon">volumeicon</a>, a battery indicator, <a href="https://www.archlinux.org/packages/?name=cbatticon">cbatticon</a>, a network indicator like <a href="https://www.archlinux.org/packages/extra/any/wicd/">wicd</a> which also have a system tray icon and a mini task tray. To start tint2 with openbox, you need to add <code>tint2 &amp;</code> to the <code>autostart</code> file.</p>
<h2 id="file-manager">File Manager</h2>
<p>Some file managers deeply integrate into desktop environments, and when installed with Openbox, they end up pulling multiple dependencies, which is certainly not desired. Our aim behind building an Openbox set up was to have minimum dependencies so that we can get a lightweight desktop. However, there are several file managers available that fit into the Openbox very well. In my choice, <a href="https://www.archlinux.org/packages/?name=pcmanfm">pcmanfm</a> is the best choice here. pcmanfm is a lightweight and fast file manager with network and thrash support. pcmanfm can also manage desktop icons and wallpaper setting, although if you plan to use conky in your system, then you may not want pcmanfm to manage desktop for you. The reason is that pcmanfm treats desktop as a window, so when you switch to desktop, the conky hides behind the desktop window. To get the icons and wallpaper, you can use other standalone tools such as <a href="https://www.archlinux.org/packages/community/x86_64/idesk/"><code>idesk</code></a> and <a href="https://www.archlinux.org/packages/extra/x86_64/feh/"><code>feh</code></a> or <a href="https://www.archlinux.org/packages/extra/x86_64/nitrogen/"><code>nitrogen</code></a>.
To start pcmanfm is the desktop mode, add the following to the autostart file.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">pcmanfm --desktop <span class="p">&amp;</span></code></pre></div>
<p>and to stop it for managing desktop</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">pcmanfm --desktop-off <span class="p">&amp;</span></code></pre></div>
<p>Many functions present in modern file managers require the installation of a few additional programs. <a href="https://www.archlinux.org/packages/?name=gvfs"><code>gvfs</code></a> gives you the ability to mount volumes and have trash control. It is not mandatory to have, but it allows on-demand mounting completely from within the file manager, as opposed to having to drop down to the command line. A disk-volume manager such as <a href="https://www.archlinux.org/packages/?name=udisks2"><code>udisks2</code></a> will also be wanted, and for auto-mounting removable disks, <a href="https://www.archlinux.org/packages/community/any/udiskie/"><code>udiskie</code></a> works well with Openbox. udiskie can be added to Openbox&rsquo;s autostart file like any other application.</p>
<h2 id="composition">Composition</h2>
<p>Openbox does not provide native support for composition, although having a compositor may prevent screen flickering and other distortion in applications like <a href="https://www.archlinux.org/packages/community/any/oblogout/"><code>oblogout</code></a>. Some options work great with Openbox. The one which I am using and quite happy with is <a href="https://wiki.archlinux.org/index.php/Compton"><code>compton</code></a>. It can be used with or without any initial configuration, although there are a lot of different configuration options if you decide to customize the setup. To start compton in background with shadows, use this in <code>autostart</code> file.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">compton -b -c <span class="p">&amp;</span></code></pre></div>
<h2 id="wrapping-up">Wrapping up</h2>
<p>While setting up my desktop using Openbox ended up being much more work than I could have with typical desktop environments. But now I have a much more stable desktop, about which I know, what is running in my system, and that my system is not cluttered with any software that I never use.</p>
<p>While it might not be for everybody having to configure every little bit of the desktop, I genuinely feel I have ended up with excellent user experience, and a system that is customized precisely to fit my needs.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://wiki.archlinux.org/">Arch Linux Wiki</a></li>
</ul>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/openbox" term="openbox" label="openbox" />
                             
                                <category scheme="https://yashagarwal.in/tags/arch-linux" term="arch-linux" label="Arch Linux" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[A good Sublime Text setup]]></title>
            <link href="https://yashagarwal.in/posts/2016/04/a-good-sublime-text-setup/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2016/04/a-good-sublime-text-setup/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2016-04-14T10:55:35+00:00</published>
            <updated>2016-04-14T10:55:35+00:00</updated>
            
            
            <content type="html"><![CDATA[<p>So, after a hectic day, good news finally came. I have been selected as a Lab Administrator for the <a href="https://www.facebook.com/sslnitc/">Software Systems Lab</a> of my college. Cheers!!!</p>
<p>Let&rsquo;s come to our today&rsquo;s topic on configuring Sublime Text Settings.</p>
<p>There is just one rule you must follow while designing your own editor preference configuration.</p>
<blockquote>
<p>Don&rsquo;t put any lines in your configuration that you don&rsquo;t understand.</p>
</blockquote>
<p>You will find tons of online tutorials that contains all kinds of awesome hacks to make your sublime text experience better but the worst way to make your development environment better is just to borrow the configuration from someone else.</p>
<p>Spending your time in actually understand what is happening behind the scenes in the construction of your editor is immensely invaluable. It is similar to the increased information retention that you experience when you copy something from the board.</p>
<p>So first, take some background of what we are going to do today. I am using Sublime Text 3 &ndash; dev version, but most of the instructions are similar for Sublime Text 2 also.</p>
<p>Okay, first open the sublime text, then go to <code>Preference → Settings → User</code>.</p>
<p>So this is your configuration file where you can put all your custom preferences. There are other configuration files also, which can be found in Preferences.</p>
<p>You can also find all settings for reference in <code>Settings → Default</code> file.</p>
<p>Here is my <code>Settings → User</code> file. Feel free to take insiparation from it, and make your sublime text experience unmatchable. I have commented every setting which is self-understandable.</p>
<script type="application/javascript" src="https://gist.github.com/yashhere/dea6728f88865666c20ff1c35e90bd0e.js"></script>

<h2 id="wrapping-it-up">Wrapping It Up</h2>
<p>I still stand by my platitude that</p>
<blockquote>
<p>Don&rsquo;t put anything in your configuration file you don&rsquo;t understand!</p>
</blockquote>
<p>That&rsquo;s all for today. Thanks for reading.</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/technical" term="technical" label="Technical" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/sublime-text" term="sublime-text" label="Sublime text" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Searching the goal]]></title>
            <link href="https://yashagarwal.in/posts/2016/04/searching-the-goal/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2016/04/searching-the-goal/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2016-04-10T00:33:16+00:00</published>
            <updated>2016-04-10T00:33:16+00:00</updated>
            
            
            <content type="html"><![CDATA[<p>A boy, probably of age 16, just cleared his 10th board exam. He saw people working on computers, and that fascinated him. So he had only one ambition. You got it, right? One fine day, suddenly his friend&rsquo;s mother asked, &ldquo;So what about the future? You are going to enter in class 11th. It is the right time to decide about your future. What do you want to become, a doctor or an engineer?&rdquo; The boy had no clue how big that question was. What the cost would have been. He simply nodded and said, &ldquo;I like computers very much so I would go for engineering.&rdquo;</p>
<p>That&rsquo;s it. He decided his fate.</p>
<p>So here comes the day</p>
<h2 id="an-accident">An accident</h2>
<p>After that day, he got into a coaching institute which promised a good rank in JEE. He was told that he would have to study consistently and regularly. The boy, being a determined one, started studying day and night.</p>
<p>This continued for two years. Finally, after giving 12th board exams, he gave JEE. Unfortunately, he didn&rsquo;t even get into extended merit list.</p>
<p>Devastated, he pledged not to give up. Oh, that stupid silly guy! He decided to try for one more year.</p>
<p>He joined another institute in his city. Again the same routine, studying day and night to fulfill <em>his</em> dreams.</p>
<p><em>Result</em>: Same, Fail!</p>
<p>But somehow he got a decent rank in JEE Mains thanks to his excellent performance in board exams.</p>
<h2 id="a-disaster">A disaster</h2>
<p>Now he had to face one more question. Which college and which branch? For him, the answer was simple. Go to any South Indian college thanks to the influence of his cousins on him (who were very successful in their lives, of course!). He chose Computer Science and Engineering because</p>
<ul>
<li>He loved computers.</li>
<li>Everybody said, &ldquo;Bahut scope hai is branch me.&rdquo;</li>
<li>Every top ranker of this country choose this branch.</li>
</ul>
<p>So the decision was clear. He packed his bag and left home for a NIT situated some 2200 kms far, the comp-sci branch.</p>
<h2 id="the-coding-disaster">The coding disaster</h2>
<p>He reached the college. He loved new people, new place, new environment, everything was new, right!. Studies started. He got good grades initially until the real coding and Computer Science related stuff started as courses. His grades fell drastically, his morale too. He got good marks enough to pass the courses. He tried giving his best, but all concepts seemed so alien to him as they wouldn&rsquo;t stay inside his head.</p>
<p>That guy is now about to complete his 2nd year and just thinking what went wrong with him. He is still trying to keep his journey on the right track. Whether he will be able to finish it successfully or not, only time will tell.</p>
<p>At last one more year is coming, and it&rsquo;s story will also come here next year.</p>
<p><a href="https://www.quora.com/What-were-you-once-that-youll-never-be-again/answer/Nishant-Kumar-187?srid=8MaF%EF%BF%BDshare=8df79cac">Inspired by this Quora Post</a></p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/philosophy" term="philosophy" label="Philosophy" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/nitc" term="nitc" label="NITC" />
                             
                                <category scheme="https://yashagarwal.in/tags/cse" term="cse" label="CSE" />
                            
                        
                    
                
            
        </entry>
    
        
        <entry>
            <title type="html"><![CDATA[Wanna get insulted by sudo]]></title>
            <link href="https://yashagarwal.in/posts/2016/04/wanna-get-insulted-by-sudo/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://yashagarwal.in/posts/2016/04/wanna-get-insulted-by-sudo/</id>
            
            
                    <author>
                        <name>Yash Agarwal</name>
                    </author>
            <published>2016-04-03T12:20:36+00:00</published>
            <updated>2016-04-03T12:20:36+00:00</updated>
            
            
            <content type="html"><![CDATA[



    

    
    

    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.css" integrity="sha256-sCl5PUOGMLfFYctzDW3MtRib0ctyUvI9Qsmq2wXOeBY=" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/default-skin/default-skin.min.css" integrity="sha256-BFeI1V+Vh1Rk37wswuOYn5lsTcaU96hGaI7OUVCLjPc=" crossorigin="anonymous" />

    
    <link rel="stylesheet" href="/css/photoswipe.min.d780348a887d97b4d6cc664301a2941706e4a02aeb1533524fcce3b7b9b64b4f.css">

    

    
    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
        
        <div class="pswp__bg"></div>
        
        <div class="pswp__scroll-wrap">
            
            <div class="pswp__container">
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
            </div>
            
            <div class="pswp__ui pswp__ui--hidden">
                <div class="pswp__top-bar">
                    
                    <div class="pswp__counter"></div>
                    <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                    <button class="pswp__button pswp__button--share" title="Share"></button>
                    <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                    <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>
                    
                    
                    <div class="pswp__preloader">
                        <div class="pswp__preloader__icn">
                            <div class="pswp__preloader__cut">
                                <div class="pswp__preloader__donut"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                    <div class="pswp__share-tooltip"></div>
                </div>
                <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
                </button>
                <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
                </button>
                <div class="pswp__caption">
                    <div class="pswp__caption__center"></div>
                </div>
            </div>
        </div>
    </div>

<p>You might have tried many Linux easters eggs for fun, but you are going to love this hack which makes <code>sudo</code> insult you.</p>
<p>Confused what I am talking about? Here, take a look at this gif to get an idea of how <code>sudo</code> can insult you for typing in the incorrect password.</p>



    <link rel="stylesheet" href="/css/hugo-easy-gallery.css">
    


<div class="box fancy-figure caption-position-none"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2016-04-03/insult.gif" alt="A terminal screen"/>
        </div>
        <a href="/images/2016-04-03/insult.gif" itemprop="contentUrl"></a>
    </figure>
</div>

<p>Now you might be thinking, why would anyone want to take insult? Afterall, nobody likes being insulted. For me, it is just another way to have fun with Linux, and anyway, this is way better than the plain &ldquo;You entered a wrong password&rdquo; error message. So let&rsquo;s learn how to do this.</p>
<h2 id="enable-insults-in-sudo">Enable insults in sudo</h2>
<p>You can enable the insults feature in <code>sudo</code> by modifying the <code>sudo</code> configuration file. To open the <code>sudo</code> configuration file, launch a terminal and type the following command.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo visudo</code></pre></div>
<p>It will open <code>/etc/sudoers</code> configuration file in the terminal, in vim text editor if you have configured it as your default editor. In distros like Ubuntu, it will be opened in nano. Now you will have to find the section where the defaults are listed. Most probably you will find it at the top. Now find the line that starts with <code>Defaults</code> and append the word <code>insults</code> to the end of the line (any addition to the line is comma separated). If this line is not present then add the following line to the section</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">Defaults insults</code></pre></div>
<p>(Always use <code>visudo</code> as it has a self-check system which will save you from messing up things)</p>
<p>Now save the file. If you are using vim, then use <code>Ctrl+X</code> to save the file and quit the editor and if you are using nano then use <code>Ctrl+X</code> to leave the editor. At the time of quitting, it will ask you if you want to save the changes. To keep the changes, press <code>Y</code>.</p>



<div class="box fancy-figure caption-position-none"  itemscope itemtype="http://schema.org/ImageGallery">
    <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
        <div class="img">
            <img itemprop="thumbnail" src="/images/2016-04-03/sudoers.png" alt="Sample sudoers file"/>
        </div>
        <a href="/images/2016-04-03/sudoers.png" itemprop="contentUrl"></a>
            <figcaption>
                    <p>Sample sudoers file</p>
            </figcaption>
    </figure>
</div>

<p>Once you have saved the file, go to terminal and type the following command to clear the old password from <code>sudo</code>'s cache.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo -k</code></pre></div>
<p>That&rsquo;s all. Use any command with <code>sudo</code>. Deliberately type a wrong password and enjoy abusing &hellip;</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/categories/hacks" term="hacks" label="Hacks" />
                            
                        
                    
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://yashagarwal.in/tags/sudo" term="sudo" label="sudo" />
                            
                        
                    
                
            
        </entry>
    
</feed>
